{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UselessTextInput = function UselessTextInput(props) {\n  return _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n    editable: true,\n    maxLength: 40\n  }));\n};\n\nvar UselessTextInputMultiline = function UselessTextInputMultiline() {\n  var _React$useState = React.useState('Useless Multiline Placeholder'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  return _jsx(View, {\n    style: {\n      backgroundColor: value,\n      borderBottomColor: '#000000',\n      borderBottomWidth: 1\n    },\n    children: _jsx(UselessTextInput, {\n      multiline: true,\n      numberOfLines: 4,\n      onChangeText: function onChangeText(text) {\n        return _onChangeText(text);\n      },\n      value: value,\n      style: {\n        padding: 10\n      }\n    })\n  });\n};\n\nexport default UselessTextInputMultiline;","map":{"version":3,"names":["React","UselessTextInput","props","UselessTextInputMultiline","useState","value","onChangeText","backgroundColor","borderBottomColor","borderBottomWidth","text","padding"],"sources":["/Users/mrmabuzakk/Downloads/kulani-app/screens/private/Bookings.js"],"sourcesContent":["import React from 'react';\nimport { View, TextInput } from 'react-native';\n\nconst UselessTextInput = (props) => {\n  return (\n    <TextInput\n      {...props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable\n      maxLength={40}\n    />\n  );\n}\n\nconst UselessTextInputMultiline = () => {\n  const [value, onChangeText] = React.useState('Useless Multiline Placeholder');\n\n  // If you type something in the text box that is a color, the background will change to that\n  // color.\n  return (\n    <View\n      style={{\n        backgroundColor: value,\n        borderBottomColor: '#000000',\n        borderBottomWidth: 1,\n      }}>\n      <UselessTextInput\n        multiline\n        numberOfLines={4}\n        onChangeText={text => onChangeText(text)}\n        value={value}\n        style={{padding: 10}}\n      />\n    </View>\n  );\n}\n\nexport default UselessTextInputMultiline;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;EAClC,OACE,KAAC,SAAD,kCACMA,KADN;IAEE,QAAQ,MAFV;IAGE,SAAS,EAAE;EAHb,GADF;AAOD,CARD;;AAUA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;EACtC,sBAA8BH,KAAK,CAACI,QAAN,CAAe,+BAAf,CAA9B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,aAAd;;EAIA,OACE,KAAC,IAAD;IACE,KAAK,EAAE;MACLC,eAAe,EAAEF,KADZ;MAELG,iBAAiB,EAAE,SAFd;MAGLC,iBAAiB,EAAE;IAHd,CADT;IAAA,UAME,KAAC,gBAAD;MACE,SAAS,MADX;MAEE,aAAa,EAAE,CAFjB;MAGE,YAAY,EAAE,sBAAAC,IAAI;QAAA,OAAIJ,aAAY,CAACI,IAAD,CAAhB;MAAA,CAHpB;MAIE,KAAK,EAAEL,KAJT;MAKE,KAAK,EAAE;QAACM,OAAO,EAAE;MAAV;IALT;EANF,EADF;AAgBD,CArBD;;AAuBA,eAAeR,yBAAf"},"metadata":{},"sourceType":"module"}