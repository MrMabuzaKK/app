{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedStartDate = _useState2[0],\n      setSelectedStartDate = _useState2[1];\n\n  var startDate = selectedStartDate ? selectedStartDate.format('YYYY-MM-DD').toString() : '';\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(CalendarPicker, {\n      onDateChange: setSelectedStartDate\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1\n  },\n  dateText: {\n    margin: 16\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","CalendarPicker","App","selectedStartDate","setSelectedStartDate","startDate","format","toString","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","input","height","margin","borderWidth","dateText"],"sources":["/Users/mrmabuzakk/Downloads/kulani-app/screens/private/Bookings.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport CalendarPicker from 'react-native-calendar-picker';\n\nexport default function App() {\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\n  const startDate = selectedStartDate\n    ? selectedStartDate.format('YYYY-MM-DD').toString()\n    : '';\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <CalendarPicker onDateChange={setSelectedStartDate} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n  },\n  dateText: {\n    margin: 16,\n  },\n});"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAkDH,QAAQ,CAAC,IAAD,CAA1D;EAAA;EAAA,IAAOI,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,IAAMC,SAAS,GAAGF,iBAAiB,GAC/BA,iBAAiB,CAACG,MAAlB,CAAyB,YAAzB,EAAuCC,QAAvC,EAD+B,GAE/B,EAFJ;EAIA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADF,EAEE,KAAC,cAAD;MAAgB,YAAY,EAAEL;IAA9B,EAFF;EAAA,EADF;AAMD;AAED,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAO/BC,KAAK,EAAE;IACLC,MAAM,EAAE,EADH;IAELC,MAAM,EAAE,EAFH;IAGLC,WAAW,EAAE;EAHR,CAPwB;EAY/BC,QAAQ,EAAE;IACRF,MAAM,EAAE;EADA;AAZqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}