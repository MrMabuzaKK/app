{"version":3,"sources":["useConnectionRecovered.ts"],"names":["useConnectionRecovered","refreshList","setForceUpdate","client","refRefreshList","current","handleEvent","count","on","unsubscribeRecovered","unsubscribe","event","online","unsubscribeChanged"],"mappings":";;;;;AAAA;;AAEA;;AASO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,OAKpB;AAAA,MAFhBC,WAEgB,QAFhBA,WAEgB;AAAA,MADhBC,cACgB,QADhBA,cACgB;;AAChB,wBAAmB,kCAAnB;AAAA,MAAQC,MAAR,mBAAQA,MAAR;;AAEA,MAAMC,cAAc,GAAG,mBAAOH,WAAP,CAAvB;AACAG,EAAAA,cAAc,CAACC,OAAf,GAAyBJ,WAAzB;AAEA,wBAAU,YAAM;AACd,QAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,MAAAA,cAAc,CAACC,OAAf;AACAH,MAAAA,cAAc,CAAC,UAACK,KAAD;AAAA,eAAWA,KAAK,GAAG,CAAnB;AAAA,OAAD,CAAd;AACD,KAHD;;AAKA,qBAA8CJ,MAAM,CAACK,EAAP,CAAU,sBAAV,EAAkCF,WAAlC,CAA9C;AAAA,QAAqBG,oBAArB,cAAQC,WAAR;;AACA,sBAA4CP,MAAM,CAACK,EAAP,CAAU,oBAAV,EAAgC,UAACG,KAAD,EAAW;AACrF,UAAIA,KAAK,CAACC,MAAV,EAAkB;AAChBN,QAAAA,WAAW;AACZ;AACF,KAJ2C,CAA5C;AAAA,QAAqBO,kBAArB,eAAQH,WAAR;;AAMA,WAAO,YAAM;AACXD,MAAAA,oBAAoB;AACpBI,MAAAA,kBAAkB;AACnB,KAHD;AAID,GAjBD,EAiBG,EAjBH;AAkBD,CA7BM","sourcesContent":["import { useEffect, useRef } from 'react';\n\nimport { useChatContext } from '../../../../contexts/chatContext/ChatContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../../types/types';\n\ntype Parameters = {\n  refreshList: () => void;\n  setForceUpdate: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const useConnectionRecovered = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  refreshList,\n  setForceUpdate,\n}: Parameters) => {\n  const { client } = useChatContext<StreamChatGenerics>();\n\n  const refRefreshList = useRef(refreshList);\n  refRefreshList.current = refreshList;\n\n  useEffect(() => {\n    const handleEvent = () => {\n      refRefreshList.current();\n      setForceUpdate((count) => count + 1);\n    };\n\n    const { unsubscribe: unsubscribeRecovered } = client.on('connection.recovered', handleEvent);\n    const { unsubscribe: unsubscribeChanged } = client.on('connection.changed', (event) => {\n      if (event.online) {\n        handleEvent();\n      }\n    });\n\n    return () => {\n      unsubscribeRecovered();\n      unsubscribeChanged();\n    };\n  }, []);\n};\n"]}