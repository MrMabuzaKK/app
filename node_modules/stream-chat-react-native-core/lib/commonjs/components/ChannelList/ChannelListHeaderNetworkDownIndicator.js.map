{"version":3,"sources":["ChannelListHeaderNetworkDownIndicator.tsx"],"names":["styles","StyleSheet","create","container","alignItems","justifyContent","padding","width","errorText","fontSize","ChannelListHeaderNetworkDownIndicator","theme","channelListHeaderErrorIndicator","colors","grey_dark","white","t","backgroundColor","color","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,OAAO,EAAE,CAHA;AAITC,IAAAA,KAAK,EAAE;AAJE,GADoB;AAO/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD;AAPoB,CAAlB,CAAf;;AAYO,IAAMC,qCAA+C,GAAG,SAAlDA,qCAAkD,GAAM;AACnE,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,+BAFJ;AAAA,MAEuCT,SAFvC,yBAEuCA,SAFvC;AAAA,MAEkDK,SAFlD,yBAEkDA,SAFlD;AAAA,8CAGIK,MAHJ;AAAA,MAGcC,SAHd,yBAGcA,SAHd;AAAA,MAGyBC,KAHzB,yBAGyBA,KAHzB;;AAMA,8BAAc,gDAAd;AAAA,MAAQC,CAAR,yBAAQA,CAAR;;AAEA,SACE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACG,SAAR,EAAmB;AAAEc,MAAAA,eAAe,EAAKH,SAAL;AAAjB,KAAnB,EAA0DX,SAA1D,CADT;AAEE,IAAA,MAAM,EAAC,wBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACQ,SAAR,EAAmB;AAAEU,MAAAA,KAAK,EAAEH;AAAT,KAAnB,EAAqCP,SAArC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+DQ,CAAC,CAAC,iBAAD,CAAhE,CAJF,CADF;AAQD,CAjBM;;;AAmBPN,qCAAqC,CAACS,WAAtC,GACE,wEADF","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8,\n    width: '100%',\n  },\n  errorText: {\n    fontSize: 14,\n  },\n});\n\nexport const ChannelListHeaderNetworkDownIndicator: React.FC = () => {\n  const {\n    theme: {\n      channelListHeaderErrorIndicator: { container, errorText },\n      colors: { grey_dark, white },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  return (\n    <View\n      style={[styles.container, { backgroundColor: `${grey_dark}E6` }, container]}\n      testID='network-down-indicator'\n    >\n      <Text style={[styles.errorText, { color: white }, errorText]}>{t('Reconnecting...')}</Text>\n    </View>\n  );\n};\n\nChannelListHeaderNetworkDownIndicator.displayName =\n  'ChannelListHeaderNetworkDownIndicator{channelListHeaderErrorIndicator}';\n"]}