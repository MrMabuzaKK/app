{"version":3,"sources":["useCreateInputMessageInputContext.ts"],"names":["useCreateInputMessageInputContext","additionalTextInputProps","AttachButton","autoCompleteSuggestionsLimit","autoCompleteTriggerSettings","channelId","clearEditingState","clearQuotedMessageState","CommandsButton","compressImageQuality","CooldownTimer","doDocUploadRequest","doImageUploadRequest","editing","editMessage","FileUploadPreview","hasCommands","hasFilePicker","hasImagePicker","ImageUploadPreview","initialValue","Input","InputButtons","InputEditingStateHeader","InputGiphySearch","InputReplyStateHeader","maxMessageLength","maxNumberOfFiles","mentionAllAppUsersEnabled","mentionAllAppUsersQuery","MoreOptionsButton","numberOfLines","onChangeText","quotedMessage","SendButton","sendImageAsync","sendMessage","SendMessageDisallowedIndicator","setInputRef","setQuotedMessageState","ShowThreadMessageInChannelButton","UploadProgressIndicator","editingExists","quotedMessageId","id","inputMessageInputContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport type { InputMessageInputContextValue } from '../../../contexts/messageInputContext/MessageInputContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport const useCreateInputMessageInputContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  additionalTextInputProps,\n  AttachButton,\n  autoCompleteSuggestionsLimit,\n  autoCompleteTriggerSettings,\n  channelId,\n  clearEditingState,\n  clearQuotedMessageState,\n  CommandsButton,\n  compressImageQuality,\n  CooldownTimer,\n  doDocUploadRequest,\n  doImageUploadRequest,\n  editing,\n  editMessage,\n  FileUploadPreview,\n  hasCommands,\n  hasFilePicker,\n  hasImagePicker,\n  ImageUploadPreview,\n  initialValue,\n  Input,\n  InputButtons,\n  InputEditingStateHeader,\n  InputGiphySearch,\n  InputReplyStateHeader,\n  maxMessageLength,\n  maxNumberOfFiles,\n  mentionAllAppUsersEnabled,\n  mentionAllAppUsersQuery,\n  MoreOptionsButton,\n  numberOfLines,\n  onChangeText,\n  quotedMessage,\n  SendButton,\n  sendImageAsync,\n  sendMessage,\n  SendMessageDisallowedIndicator,\n  setInputRef,\n  setQuotedMessageState,\n  ShowThreadMessageInChannelButton,\n  UploadProgressIndicator,\n}: InputMessageInputContextValue<StreamChatGenerics> & {\n  /**\n   * To ensure we allow re-render, when channel is changed\n   */\n  channelId?: string;\n}) => {\n  const editingExists = !!editing;\n  const quotedMessageId = quotedMessage\n    ? typeof quotedMessage === 'boolean'\n      ? ''\n      : quotedMessage.id\n    : '';\n\n  const inputMessageInputContext: InputMessageInputContextValue<StreamChatGenerics> = useMemo(\n    () => ({\n      additionalTextInputProps,\n      AttachButton,\n      autoCompleteSuggestionsLimit,\n      autoCompleteTriggerSettings,\n      clearEditingState,\n      clearQuotedMessageState,\n      CommandsButton,\n      compressImageQuality,\n      CooldownTimer,\n      doDocUploadRequest,\n      doImageUploadRequest,\n      editing,\n      editMessage,\n      FileUploadPreview,\n      hasCommands,\n      hasFilePicker,\n      hasImagePicker,\n      ImageUploadPreview,\n      initialValue,\n      Input,\n      InputButtons,\n      InputEditingStateHeader,\n      InputGiphySearch,\n      InputReplyStateHeader,\n      maxMessageLength,\n      maxNumberOfFiles,\n      mentionAllAppUsersEnabled,\n      mentionAllAppUsersQuery,\n      MoreOptionsButton,\n      numberOfLines,\n      onChangeText,\n      quotedMessage,\n      SendButton,\n      sendImageAsync,\n      sendMessage,\n      SendMessageDisallowedIndicator,\n      setInputRef,\n      setQuotedMessageState,\n      ShowThreadMessageInChannelButton,\n      UploadProgressIndicator,\n    }),\n    [\n      compressImageQuality,\n      channelId,\n      editingExists,\n      initialValue,\n      maxMessageLength,\n      quotedMessageId,\n    ],\n  );\n\n  return inputMessageInputContext;\n};\n"]}