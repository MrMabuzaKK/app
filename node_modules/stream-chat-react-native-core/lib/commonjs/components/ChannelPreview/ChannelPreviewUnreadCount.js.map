{"version":3,"sources":["ChannelPreviewUnreadCount.tsx"],"names":["styles","StyleSheet","create","unreadContainer","alignItems","borderRadius","flexShrink","justifyContent","unreadText","color","fontSize","fontWeight","paddingHorizontal","paddingVertical","ChannelPreviewUnreadCount","props","maxUnreadCount","unread","theme","channelPreview","accent_red","colors","backgroundColor"],"mappings":";;;;;;;AAAA;;AACA;;AAIA;;;;;AAIA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE,QADG;AAEfC,IAAAA,YAAY,EAAE,CAFC;AAGfC,IAAAA,UAAU,EAAE,CAHG;AAIfC,IAAAA,cAAc,EAAE;AAJD,GADc;AAO/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,KAHF;AAIVC,IAAAA,iBAAiB,EAAE,CAJT;AAKVC,IAAAA,eAAe,EAAE;AALP;AAPmB,CAAlB,CAAf;;AAuBO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAGvCC,KAHuC,EAIpC;AACH,MAAQC,cAAR,GAAmCD,KAAnC,CAAQC,cAAR;AAAA,MAAwBC,MAAxB,GAAmCF,KAAnC,CAAwBE,MAAxB;;AACA,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,cAFJ;AAAA,MAEsBhB,eAFtB,yBAEsBA,eAFtB;AAAA,MAEuCK,UAFvC,yBAEuCA,UAFvC;AAAA,MAGcY,UAHd,mBAGIC,MAHJ,CAGcD,UAHd;;AAOA,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACG,eAAR,EAAyB;AAAEmB,MAAAA,eAAe,EAAEF;AAAnB,KAAzB,EAA0DjB,eAA1D,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACc,MAAF,IACC,gCAAC,iBAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE,CAACjB,MAAM,CAACQ,UAAR,EAAoBA,UAApB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,MAAM,GAAGD,cAAT,GAA6BA,cAA7B,SAAiDC,MADpD,CAFJ,CADF;AASD,CAtBM","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport type { ChannelPreviewProps } from './ChannelPreview';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  unreadContainer: {\n    alignItems: 'center',\n    borderRadius: 8,\n    flexShrink: 1,\n    justifyContent: 'center',\n  },\n  unreadText: {\n    color: '#FFFFFF',\n    fontSize: 11,\n    fontWeight: '700',\n    paddingHorizontal: 5,\n    paddingVertical: 1,\n  },\n});\n\nexport type ChannelPreviewUnreadCountProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChannelPreviewProps<StreamChatGenerics>, 'channel'> & {\n  maxUnreadCount: number;\n  unread?: number;\n};\n\nexport const ChannelPreviewUnreadCount = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ChannelPreviewUnreadCountProps<StreamChatGenerics>,\n) => {\n  const { maxUnreadCount, unread } = props;\n  const {\n    theme: {\n      channelPreview: { unreadContainer, unreadText },\n      colors: { accent_red },\n    },\n  } = useTheme();\n\n  return (\n    <View style={[styles.unreadContainer, { backgroundColor: accent_red }, unreadContainer]}>\n      {!!unread && (\n        <Text numberOfLines={1} style={[styles.unreadText, unreadText]}>\n          {unread > maxUnreadCount ? `${maxUnreadCount}+` : unread}\n        </Text>\n      )}\n    </View>\n  );\n};\n"]}