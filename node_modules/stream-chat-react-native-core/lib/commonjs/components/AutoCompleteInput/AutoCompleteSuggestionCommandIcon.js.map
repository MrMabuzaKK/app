{"version":3,"sources":["AutoCompleteSuggestionCommandIcon.tsx"],"names":["styles","StyleSheet","create","iconContainer","alignItems","borderRadius","height","justifyContent","marginRight","width","AutoCompleteSuggestionCommandIcon","name","theme","colors","accent_blue","white","messageInput","suggestions","command","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport type { SuggestionCommand } from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Flag, GiphyIcon, Imgur, Lightning, Mute, Sound, UserAdd, UserDelete } from '../../icons';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  iconContainer: {\n    alignItems: 'center',\n    borderRadius: 12,\n    height: 24,\n    justifyContent: 'center',\n    marginRight: 8,\n    width: 24,\n  },\n});\n\nexport const AutoCompleteSuggestionCommandIcon = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  name,\n}: {\n  name: SuggestionCommand<StreamChatGenerics>['name'];\n}) => {\n  const {\n    theme: {\n      colors: { accent_blue, white },\n      messageInput: {\n        suggestions: {\n          command: { iconContainer },\n        },\n      },\n    },\n  } = useTheme();\n  switch (name) {\n    case 'ban':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <UserDelete height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'flag':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Flag pathFill={white} />\n        </View>\n      );\n    case 'giphy':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <GiphyIcon />\n        </View>\n      );\n    case 'imgur':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Imgur />\n        </View>\n      );\n    case 'mute':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Mute height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'unban':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <UserAdd height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'unmute':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Sound pathFill={white} />\n        </View>\n      );\n    default:\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Lightning height={16} pathFill={white} width={16} />\n        </View>\n      );\n  }\n};\n"]}