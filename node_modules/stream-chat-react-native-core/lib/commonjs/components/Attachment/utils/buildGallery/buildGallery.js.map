{"version":3,"sources":["buildGallery.ts"],"names":["buildGallery","images","sizeConfig","length","image","grid","slice","invertedDirections"],"mappings":";;;;;AAEA;;AACA;;AACA;;AAEA;;AAsBO,SAASA,YAAT,OAQyB;AAAA,MAL9BC,MAK8B,QAL9BA,MAK8B;AAAA,MAJ9BC,UAI8B,QAJ9BA,UAI8B;;AAC9B,MAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,0DAA0B;AAC/BC,MAAAA,KAAK,EAAEH,MAAM,CAAC,CAAD,CADkB;AAE/BC,MAAAA,UAAU,EAAVA;AAF+B,KAA1B,CAAP;AAID;;AAED,MAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,sDAAwB;AAC7BF,MAAAA,MAAM,EAANA,MAD6B;AAE7BC,MAAAA,UAAU,EAAVA;AAF6B,KAAxB,CAAP;AAID;;AAED,MAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,0DAA0B;AAC/BF,MAAAA,MAAM,EAANA,MAD+B;AAE/BC,MAAAA,UAAU,EAAVA;AAF+B,KAA1B,CAAP;AAID;;AAWD,SAAO,4CAAmB;AACxBG,IAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI,CAAJ,CADI,EAEJ,CAAC,CAAD,EAAI,CAAJ,CAFI,CADkB;AAKxBJ,IAAAA,MAAM,EAAEA,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgB,CAAhB,CALgB;AAMxBC,IAAAA,kBAAkB,EAAE,KANI;AAOxBL,IAAAA,UAAU,EAAVA;AAPwB,GAAnB,CAAP;AASD","sourcesContent":["import type { Attachment } from 'stream-chat';\n\nimport { buildGalleryOfSingleImage } from './buildGalleryOfSingleImage';\nimport { buildGalleryOfThreeImages } from './buildGalleryOfThreeImages';\nimport { buildGalleryOfTwoImages } from './buildGalleryOfTwoImages';\n\nimport { buildThumbnailGrid } from './buildThumbnailGrid';\n\nimport type { GallerySizeAndThumbnailGrid, GallerySizeConfig } from './types';\n\nimport type { DefaultStreamChatGenerics } from '../../../../types/types';\n\n/**\n * Builds and returns a gallery of optimized images to be rendered on UI.\n * This function take a object parameter with following properties:\n *\n * @param {Attachment[]} images - Array of image attachments\n * @param {GallerySizeConfig} sizeConfig - Theme config for the gallery\n *\n * The returned object contains following properties:\n *\n * - height {number[]} - Height of the gallery\n * - width {number[]} - Width of the gallery\n * - thumbnailGrid {number[][]} - Grid of thumbnail images\n * - invertedDirections {boolean} - Whether to invert the direction of the grid. By default grid is rendered with column as primary direction and row as secondary direction.\n *\n * @return {GallerySizeAndThumbnailGrid}\n */\nexport function buildGallery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  images,\n  sizeConfig,\n}: {\n  images: Attachment<StreamChatGenerics>[];\n  sizeConfig: GallerySizeConfig;\n}): GallerySizeAndThumbnailGrid {\n  if (images.length === 1) {\n    return buildGalleryOfSingleImage({\n      image: images[0],\n      sizeConfig,\n    });\n  }\n\n  if (images.length === 2) {\n    return buildGalleryOfTwoImages({\n      images,\n      sizeConfig,\n    });\n  }\n\n  if (images.length === 3) {\n    return buildGalleryOfThreeImages({\n      images,\n      sizeConfig,\n    });\n  }\n\n  /**\n   * -----------\n   * |    |    |\n   * |    |    |\n   * -----------\n   * |    |    |\n   * |    |    |\n   * -----------\n   */\n  return buildThumbnailGrid({\n    grid: [\n      [1, 1],\n      [1, 1],\n    ],\n    images: images.slice(0, 4),\n    invertedDirections: false,\n    sizeConfig,\n  });\n}\n"]}