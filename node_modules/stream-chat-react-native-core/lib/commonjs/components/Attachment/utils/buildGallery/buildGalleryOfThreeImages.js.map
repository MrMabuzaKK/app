{"version":3,"sources":["buildGalleryOfThreeImages.ts"],"names":["moveToFront","array","item","index","indexOf","newArray","splice","unshift","buildGalleryOfThreeImages","images","sizeConfig","reduce","acc","image","aspectRatio","o","landscapeImage","landscapeImageAspectRatio","portraitImage","portraitImageAspectRatio","grid","invertedDirections"],"mappings":";;;;;;;;;;;AAEA;;AAKA;;AAGA,SAASA,WAAT,CAAwBC,KAAxB,EAAoCC,IAApC,EAAkD;AAChD,MAAMC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcF,IAAd,CAAd;;AACA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAOF,KAAP;AACD;;AACD,MAAMI,QAAQ,uCAAOJ,KAAP,CAAd;AACAI,EAAAA,QAAQ,CAACC,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACAE,EAAAA,QAAQ,CAACE,OAAT,CAAiBL,IAAjB;AACA,SAAOG,QAAP;AACD;;AAEM,SAASG,yBAAT,OAQyB;AAAA,MAL9BC,MAK8B,QAL9BA,MAK8B;AAAA,MAJ9BC,UAI8B,QAJ9BA,UAI8B;;AAE9B,uBACED,MAAM,CAACE,MAAP,CACE,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACd,QAAMC,WAAW,GAAG,oCAAeD,KAAf,CAApB;AACA,QAAME,CAAC,iCAAQH,GAAR,CAAP;;AAIA,QAAIE,WAAW,GAAG,CAAlB,EAAqB;AACnB,UAAI,CAACC,CAAC,CAACC,cAAH,IAAqBF,WAAW,GAAGC,CAAC,CAACE,yBAAzC,EAAoE;AAClEF,QAAAA,CAAC,CAACC,cAAF,GAAmBH,KAAnB;AACAE,QAAAA,CAAC,CAACE,yBAAF,GAA8BH,WAA9B;AACD;AACF,KALD,MAKO;AACL,UAAI,CAACC,CAAC,CAACG,aAAH,IAAoBJ,WAAW,GAAGC,CAAC,CAACI,wBAAxC,EAAkE;AAChEJ,QAAAA,CAAC,CAACG,aAAF,GAAkBL,KAAlB;AACAE,QAAAA,CAAC,CAACI,wBAAF,GAA6BL,WAA7B;AACD;AACF;;AAED,WAAOC,CAAP;AACD,GApBH,EAqBE;AACEE,IAAAA,yBAAyB,EAAE,CAD7B;AAEEE,IAAAA,wBAAwB,EAAE;AAF5B,GArBF,CADF;AAAA,MAAQH,cAAR,kBAAQA,cAAR;AAAA,MAAwBC,yBAAxB,kBAAwBA,yBAAxB;AAAA,MAAmDC,aAAnD,kBAAmDA,aAAnD;AAAA,MAAkEC,wBAAlE,kBAAkEA,wBAAlE;;AAkCA,MAAIF,yBAAyB,GAAG,IAAIE,wBAApC,EAA8D;AAU5D,WAAO,4CAAmB;AACxBC,MAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,CAAD,EAAM,CAAC,CAAD,EAAI,CAAJ,CAAN,CADkB;AAExBX,MAAAA,MAAM,EAAEO,cAAc,GAAGhB,WAAW,CAACS,MAAD,EAASO,cAAT,CAAd,GAAyCP,MAFvC;AAGxBY,MAAAA,kBAAkB,EAAE,IAHI;AAIxBX,MAAAA,UAAU,EAAVA;AAJwB,KAAnB,CAAP;AAMD,GAhBD,MAgBO;AAUL,WAAO,4CAAmB;AACxBU,MAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,CAAD,EAAM,CAAC,CAAD,EAAI,CAAJ,CAAN,CADkB;AAExBX,MAAAA,MAAM,EAAES,aAAa,GAAGlB,WAAW,CAACS,MAAD,EAASS,aAAT,CAAd,GAAwCT,MAFrC;AAGxBY,MAAAA,kBAAkB,EAAE,KAHI;AAIxBX,MAAAA,UAAU,EAAVA;AAJwB,KAAnB,CAAP;AAMD;AACF","sourcesContent":["import type { Attachment } from 'stream-chat';\n\nimport { buildThumbnailGrid } from './buildThumbnailGrid';\n\nimport type { GallerySizeAndThumbnailGrid, GallerySizeConfig } from './types';\n\nimport type { DefaultStreamChatGenerics } from '../../../../types/types';\nimport { getAspectRatio } from '../getAspectRatio';\n\n/** function to move item to the front of the array */\nfunction moveToFront<T>(array: T[], item: T): T[] {\n  const index = array.indexOf(item);\n  if (index === -1) {\n    return array;\n  }\n  const newArray = [...array];\n  newArray.splice(index, 1);\n  newArray.unshift(item);\n  return newArray;\n}\n\nexport function buildGalleryOfThreeImages<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  images,\n  sizeConfig,\n}: {\n  images: Attachment<StreamChatGenerics>[];\n  sizeConfig: GallerySizeConfig;\n}): GallerySizeAndThumbnailGrid {\n  // Find the most ladscape and most portrait image.\n  const { landscapeImage, landscapeImageAspectRatio, portraitImage, portraitImageAspectRatio } =\n    images.reduce(\n      (acc, image) => {\n        const aspectRatio = getAspectRatio(image);\n        const o = { ...acc };\n\n        // Following nested if conditions can be combined, but have been kept\n        // separate intentionally for the sake of readability.\n        if (aspectRatio > 1) {\n          if (!o.landscapeImage || aspectRatio > o.landscapeImageAspectRatio) {\n            o.landscapeImage = image;\n            o.landscapeImageAspectRatio = aspectRatio;\n          }\n        } else {\n          if (!o.portraitImage || aspectRatio < o.portraitImageAspectRatio) {\n            o.portraitImage = image;\n            o.portraitImageAspectRatio = aspectRatio;\n          }\n        }\n\n        return o;\n      },\n      {\n        landscapeImageAspectRatio: 1,\n        portraitImageAspectRatio: 1,\n      } as {\n        landscapeImage: Attachment<StreamChatGenerics>;\n        landscapeImageAspectRatio: number;\n        portraitImage: Attachment<StreamChatGenerics>;\n        portraitImageAspectRatio: number;\n      },\n    );\n\n  // Check weather landscape image gets preference or portrait, by comparing aspect ratio.\n  if (landscapeImageAspectRatio > 1 / portraitImageAspectRatio) {\n    /**\n     * -----------\n     * |         |\n     * |         |\n     * |---------|\n     * |    |    |\n     * |    |    |\n     * -----------\n     */\n    return buildThumbnailGrid({\n      grid: [[1], [1, 1]],\n      images: landscapeImage ? moveToFront(images, landscapeImage) : images,\n      invertedDirections: true,\n      sizeConfig,\n    });\n  } else {\n    /**\n     * -----------\n     * |    |    |\n     * |    |    |\n     * |    |----|\n     * |    |    |\n     * |    |    |\n     * -----------\n     */\n    return buildThumbnailGrid({\n      grid: [[1], [1, 1]],\n      images: portraitImage ? moveToFront(images, portraitImage) : images,\n      invertedDirections: false,\n      sizeConfig,\n    });\n  }\n}\n"]}