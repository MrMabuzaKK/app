{"version":3,"sources":["Giphy.tsx"],"names":["styles","StyleSheet","create","actionsRow","flexDirection","buttonContainer","alignItems","borderTopWidth","flex","justifyContent","cancel","fontSize","fontWeight","paddingVertical","container","overflow","width","giphy","alignSelf","borderRadius","height","maxWidth","giphyContainer","giphyHeaderText","giphyHeaderTitle","marginLeft","giphyMask","bottom","left","position","giphyMaskText","header","display","padding","selectionContainer","borderBottomRightRadius","borderWidth","selectionImageContainer","margin","send","shuffle","shuffleButton","GiphyWithContext","props","additionalTouchableProps","attachment","giphyVersion","handleAction","isMyMessage","message","onLongPress","onPress","onPressIn","preventPress","setImage","setImages","setOverlay","actions","giphyData","image_url","thumb_url","title","type","theme","colors","accent_blue","black","grey","grey_dark","grey_gainsboro","label_bg_transparent","white","messageSimple","uri","giphyDimensions","defaultOnPress","messageId","id","url","giphyVersionInfo","parseFloat","backgroundColor","borderColor","color","name","value","borderRightWidth","text","event","emitter","defaultHandler","toUpperCase","areEqual","prevProps","nextProps","prevActions","prevImageUrl","prevThumbUrl","prevGiphyVersion","prevIsMyMessage","nextActions","nextImageUrl","nextThumbUrl","nextGiphyVersion","nextIsMyMessage","imageUrlEqual","thumbUrlEqual","actionsEqual","Array","isArray","length","giphyVersionEqual","isMyMessageEqual","MemoizedGiphy","React","memo","Giphy","displayName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AACA;;AACA;;AAEA;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,aAAa,EAAE;AADL,GADmB;AAI/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE,QADG;AAEfC,IAAAA,cAAc,EAAE,CAFD;AAGfC,IAAAA,IAAI,EAAE,CAHS;AAIfC,IAAAA,cAAc,EAAE;AAJD,GAJc;AAU/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,eAAe,EAAE;AAHX,GAVuB;AAe/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,QADD;AAETC,IAAAA,KAAK,EAAE;AAFE,GAfoB;AAmB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,YAAY,EAAE,CAFT;AAGLC,IAAAA,MAAM,EAAE,GAHH;AAILC,IAAAA,QAAQ,EAAE,GAJL;AAKLL,IAAAA,KAAK,EAAE;AALF,GAnBwB;AA0B/BM,EAAAA,cAAc,EAAE;AACdhB,IAAAA,UAAU,EAAE,QADE;AAEda,IAAAA,YAAY,EAAE,EAFA;AAGdf,IAAAA,aAAa,EAAE,KAHD;AAIdgB,IAAAA,MAAM,EAAE,EAJM;AAKdX,IAAAA,cAAc,EAAE,QALF;AAMdO,IAAAA,KAAK,EAAE;AANO,GA1Be;AAkC/BO,EAAAA,eAAe,EAAE;AACfZ,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,UAAU,EAAE;AAFG,GAlCc;AAsC/BY,EAAAA,gBAAgB,EAAE;AAChBb,IAAAA,QAAQ,EAAE,EADM;AAEhBc,IAAAA,UAAU,EAAE;AAFI,GAtCa;AA0C/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GA1CoB;AA+C/BC,EAAAA,aAAa,EAAE;AACbnB,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,UAAU,EAAE;AAFC,GA/CgB;AAmD/BmB,EAAAA,MAAM,EAAE;AACNzB,IAAAA,UAAU,EAAE,QADN;AAEN0B,IAAAA,OAAO,EAAE,MAFH;AAGN5B,IAAAA,aAAa,EAAE,KAHT;AAINK,IAAAA,cAAc,EAAE,eAJV;AAKNwB,IAAAA,OAAO,EAAE,CALH;AAMNjB,IAAAA,KAAK,EAAE;AAND,GAnDuB;AA2D/BkB,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,uBAAuB,EAAE,CADP;AAElBhB,IAAAA,YAAY,EAAE,EAFI;AAGlBiB,IAAAA,WAAW,EAAE,CAHK;AAIlBrB,IAAAA,QAAQ,EAAE,QAJQ;AAKlBC,IAAAA,KAAK,EAAE;AALW,GA3DW;AAkE/BqB,EAAAA,uBAAuB,EAAE;AACvBnB,IAAAA,SAAS,EAAE,QADY;AAEvBoB,IAAAA,MAAM,EAAE;AAFe,GAlEM;AAsE/BC,EAAAA,IAAI,EAAE;AACJ5B,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,eAAe,EAAE;AAHb,GAtEyB;AA2E/B2B,EAAAA,OAAO,EAAE;AACP7B,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,KAFL;AAGPC,IAAAA,eAAe,EAAE;AAHV,GA3EsB;AAgF/B4B,EAAAA,aAAa,EAAE;AACbnC,IAAAA,UAAU,EAAE,QADC;AAEba,IAAAA,YAAY,EAAE,EAFD;AAGbiB,IAAAA,WAAW,EAAE,CAHA;AAIbhB,IAAAA,MAAM,EAAE,EAJK;AAKbX,IAAAA,cAAc,EAAE,QALH;AAMbO,IAAAA,KAAK,EAAE;AANM;AAhFgB,CAAlB,CAAf;;AA2GA,IAAM0B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAGvBC,KAHuB,EAIpB;AACH,MACEC,wBADF,GAcID,KAdJ,CACEC,wBADF;AAAA,MAEEC,UAFF,GAcIF,KAdJ,CAEEE,UAFF;AAAA,MAGEC,YAHF,GAcIH,KAdJ,CAGEG,YAHF;AAAA,MAIEC,YAJF,GAcIJ,KAdJ,CAIEI,YAJF;AAAA,MAKEC,WALF,GAcIL,KAdJ,CAKEK,WALF;AAAA,MAMEC,OANF,GAcIN,KAdJ,CAMEM,OANF;AAAA,MAOEC,YAPF,GAcIP,KAdJ,CAOEO,WAPF;AAAA,MAQEC,QARF,GAcIR,KAdJ,CAQEQ,OARF;AAAA,MASEC,UATF,GAcIT,KAdJ,CASES,SATF;AAAA,MAUEC,YAVF,GAcIV,KAdJ,CAUEU,YAVF;AAAA,MAWEC,QAXF,GAcIX,KAdJ,CAWEW,QAXF;AAAA,MAYEC,SAZF,GAcIZ,KAdJ,CAYEY,SAZF;AAAA,MAaEC,UAbF,GAcIb,KAdJ,CAaEa,UAbF;AAgBA,MAAQC,OAAR,GAAyEZ,UAAzE,CAAQY,OAAR;AAAA,MAAwBC,SAAxB,GAAyEb,UAAzE,CAAiB5B,KAAjB;AAAA,MAAmC0C,SAAnC,GAAyEd,UAAzE,CAAmCc,SAAnC;AAAA,MAA8CC,SAA9C,GAAyEf,UAAzE,CAA8Ce,SAA9C;AAAA,MAAyDC,KAAzD,GAAyEhB,UAAzE,CAAyDgB,KAAzD;AAAA,MAAgEC,IAAhE,GAAyEjB,UAAzE,CAAgEiB,IAAhE;;AAEA,kBAqBI,6BArBJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,WAFd,yBAEcA,WAFd;AAAA,MAE2BC,KAF3B,yBAE2BA,KAF3B;AAAA,MAEkCC,IAFlC,yBAEkCA,IAFlC;AAAA,MAEwCC,SAFxC,yBAEwCA,SAFxC;AAAA,MAEmDC,cAFnD,yBAEmDA,cAFnD;AAAA,MAEmEC,oBAFnE,yBAEmEA,oBAFnE;AAAA,MAEyFC,KAFzF,yBAEyFA,KAFzF;AAAA,8CAGIC,aAHJ,CAIMvD,KAJN;AAAA,MAKQZ,eALR,yBAKQA,eALR;AAAA,MAMQK,MANR,yBAMQA,MANR;AAAA,MAOQI,SAPR,yBAOQA,SAPR;AAAA,MAQQG,KARR,yBAQQA,KARR;AAAA,MASQK,cATR,yBASQA,cATR;AAAA,MAUQC,eAVR,yBAUQA,eAVR;AAAA,MAWQC,gBAXR,yBAWQA,gBAXR;AAAA,MAYQE,SAZR,yBAYQA,SAZR;AAAA,MAaQI,aAbR,yBAaQA,aAbR;AAAA,MAcQC,MAdR,yBAcQA,MAdR;AAAA,MAeQG,kBAfR,yBAeQA,kBAfR;AAAA,MAgBQK,IAhBR,yBAgBQA,IAhBR;AAAA,MAiBQC,OAjBR,yBAiBQA,OAjBR;;AAuBA,MAAIiC,GAAG,GAAGd,SAAS,IAAIC,SAAvB;AACA,MAAMc,eAAoD,GAAG,EAA7D;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BpB,IAAAA,SAAS,CAAC,CAACN,OAAD,CAAD,CAAT;AACAK,IAAAA,QAAQ,CAAC;AAAEsB,MAAAA,SAAS,EAAE3B,OAAO,CAAC4B,EAArB;AAAyBC,MAAAA,GAAG,EAAEL;AAA9B,KAAD,CAAR;AACAjB,IAAAA,UAAU,CAAC,SAAD,CAAV;AACD,GAJD;;AAMA,MAAIM,IAAI,KAAK,OAAT,IAAoBJ,SAAxB,EAAmC;AACjC,QAAMqB,gBAAgB,GAAGrB,SAAS,CAACZ,YAAD,CAAlC;AACA2B,IAAAA,GAAG,GAAGM,gBAAgB,CAACD,GAAvB;AACAJ,IAAAA,eAAe,CAACtD,MAAhB,GAAyB4D,UAAU,CAACD,gBAAgB,CAAC3D,MAAlB,CAAnC;AACAsD,IAAAA,eAAe,CAAC1D,KAAhB,GAAwBgE,UAAU,CAACD,gBAAgB,CAAC/D,KAAlB,CAAlC;AACD;;AAED,MAAI,CAACyD,GAAL,EAAU,OAAO,IAAP;AAEV,SAAOhB,OAAO,GACZ,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLzD,MAAM,CAACkC,kBADF,EAEL;AAAE+C,MAAAA,eAAe,EAAEV,KAAnB;AAA0BW,MAAAA,WAAW,EAAKhB,KAAL;AAArC,KAFK,EAGLhC,kBAHK,CADT;AAME,IAAA,MAAM,EAAC,yBANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAClC,MAAM,CAAC+B,MAAR,EAAgBA,MAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAC/B,MAAM,CAACuB,eAAR,EAAyBA,eAAzB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACvB,MAAM,CAACwB,gBAAR,EAA0BA,gBAA1B,EAA4C;AAAE2D,MAAAA,KAAK,EAAEf;AAAT,KAA5C,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEYP,KAFZ,CAHF,CARF,EAeE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE7D,MAAM,CAACqC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,kBAAD;AACE,IAAA,UAAU,EAAC,SADb;AAEE,IAAA,MAAM,EAAE;AAAEoC,MAAAA,GAAG,EAAE,mCAAuBA,GAAvB;AAAP,KAFV;AAGE,IAAA,KAAK,EAAE,CAACzE,MAAM,CAACiB,KAAR,EAAeyD,eAAf,EAAgCzD,KAAhC,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,EAsBE,gCAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,6BAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIsD,OAAO,QAAP,IAAAA,OAAO,CAAG,CAAH,CAAP,CAAa2B,IAAb,IAAqB3B,OAArB,YAAqBA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlC,IAA2CtC,YAA/C,EAA6D;AAC3DA,QAAAA,YAAY,CAACU,OAAO,CAAC,CAAD,CAAP,CAAW2B,IAAZ,EAAkB3B,OAAO,CAAC,CAAD,CAAP,CAAW4B,KAA7B,CAAZ;AACD;AACF,KALH;AAME,IAAA,KAAK,EAAE,CACLrF,MAAM,CAACK,eADF,EAEL;AAAE6E,MAAAA,WAAW,EAAEb,cAAf;AAA+BiB,MAAAA,gBAAgB,EAAE;AAAjD,KAFK,EAGLjF,eAHK,CANT;AAWE,IAAA,MAAM,GAAKoD,OAAL,oBAAKA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlB,oBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACrF,MAAM,CAACU,MAAR,EAAgB;AAAEyE,MAAAA,KAAK,EAAEhB;AAAT,KAAhB,EAAiCzD,MAAjC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwD+C,OAAxD,oBAAwDA,OAAO,CAAG,CAAH,CAAP,CAAa8B,IAArE,CAbF,CADF,EAgBE,gCAAC,6BAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI9B,OAAO,QAAP,IAAAA,OAAO,CAAG,CAAH,CAAP,CAAa2B,IAAb,IAAqB3B,OAArB,YAAqBA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlC,IAA2CtC,YAA/C,EAA6D;AAC3DA,QAAAA,YAAY,CAACU,OAAO,CAAC,CAAD,CAAP,CAAW2B,IAAZ,EAAkB3B,OAAO,CAAC,CAAD,CAAP,CAAW4B,KAA7B,CAAZ;AACD;AACF,KALH;AAME,IAAA,KAAK,EAAE,CACLrF,MAAM,CAACK,eADF,EAEL;AAAE6E,MAAAA,WAAW,EAAEb,cAAf;AAA+BiB,MAAAA,gBAAgB,EAAE;AAAjD,KAFK,EAGLjF,eAHK,CANT;AAWE,IAAA,MAAM,GAAKoD,OAAL,oBAAKA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlB,oBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACrF,MAAM,CAACwC,OAAR,EAAiB;AAAE2C,MAAAA,KAAK,EAAEhB;AAAT,KAAjB,EAAkC3B,OAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DiB,OAA1D,oBAA0DA,OAAO,CAAG,CAAH,CAAP,CAAa8B,IAAvE,CAbF,CAhBF,EA+BE,gCAAC,6BAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI9B,OAAO,QAAP,IAAAA,OAAO,CAAG,CAAH,CAAP,CAAa2B,IAAb,IAAqB3B,OAArB,YAAqBA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlC,IAA2CtC,YAA/C,EAA6D;AAC3DA,QAAAA,YAAY,CAACU,OAAO,CAAC,CAAD,CAAP,CAAW2B,IAAZ,EAAkB3B,OAAO,CAAC,CAAD,CAAP,CAAW4B,KAA7B,CAAZ;AACD;AACF,KALH;AAME,IAAA,KAAK,EAAE,CAACrF,MAAM,CAACK,eAAR,EAAyB;AAAE6E,MAAAA,WAAW,EAAEb;AAAf,KAAzB,EAA0DhE,eAA1D,CANT;AAOE,IAAA,MAAM,GAAKoD,OAAL,oBAAKA,OAAO,CAAG,CAAH,CAAP,CAAa4B,KAAlB,oBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACrF,MAAM,CAACuC,IAAR,EAAc;AAAE4C,MAAAA,KAAK,EAAElB;AAAT,KAAd,EAAsC1B,IAAtC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DkB,OAA3D,oBAA2DA,OAAO,CAAG,CAAH,CAAP,CAAa8B,IAAxE,CATF,CA/BF,CADF,CAtBF,CADY,GAsEZ,gCAAC,6BAAD;AACE,IAAA,QAAQ,EAAElC,YADZ;AAEE,IAAA,WAAW,EAAE,qBAACmC,KAAD,EAAW;AACtB,UAAItC,YAAJ,EAAiB;AACfA,QAAAA,YAAW,CAAC;AACVuC,UAAAA,OAAO,EAAE,OADC;AAEVD,UAAAA,KAAK,EAALA;AAFU,SAAD,CAAX;AAID;AACF,KATH;AAUE,IAAA,OAAO,EAAE,iBAACA,KAAD,EAAW;AAClB,UAAIrC,QAAJ,EAAa;AACXA,QAAAA,QAAO,CAAC;AACNuC,UAAAA,cAAc,EAAEf,cADV;AAENc,UAAAA,OAAO,EAAE,OAFH;AAGND,UAAAA,KAAK,EAALA;AAHM,SAAD,CAAP;AAKD;AACF,KAlBH;AAmBE,IAAA,SAAS,EAAE,mBAACA,KAAD,EAAW;AACpB,UAAIpC,UAAJ,EAAe;AACbA,QAAAA,UAAS,CAAC;AACRqC,UAAAA,OAAO,EAAE,OADD;AAERD,UAAAA,KAAK,EAALA;AAFQ,SAAD,CAAT;AAID;AACF,KA1BH;AA2BE,IAAA,MAAM,EAAC;AA3BT,KA4BM5C,wBA5BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA8BE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL5C,MAAM,CAACc,SADF,EAEL;AAAEmE,MAAAA,eAAe,EAAEjC,WAAW,GAAGqB,cAAH,GAAoBE;AAAlD,KAFK,EAGLzD,SAHK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,gCAAC,kBAAD;AACE,IAAA,UAAU,EAAC,SADb;AAEE,IAAA,MAAM,EAAE;AAAE2D,MAAAA,GAAG,EAAE,mCAAuBA,GAAvB;AAAP,KAFV;AAGE,IAAA,KAAK,EAAE,CAACzE,MAAM,CAACiB,KAAR,EAAeyD,eAAf,EAAgCzD,KAAhC,CAHT;AAIE,IAAA,MAAM,EAAC,wBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACjB,MAAM,CAAC0B,SAAR,EAAmBA,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL1B,MAAM,CAACsB,cADF,EAEL;AAAE2D,MAAAA,eAAe,EAAEX;AAAnB,KAFK,EAGLhD,cAHK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,gCAAC,oBAAD;AAAW,IAAA,MAAM,EAAE,EAAnB;AAAuB,IAAA,QAAQ,EAAEiD,KAAjC;AAAwC,IAAA,KAAK,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACvE,MAAM,CAAC8B,aAAR,EAAuB;AAAEqD,MAAAA,KAAK,EAAEZ;AAAT,KAAvB,EAAyCzC,aAAzC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgC,IADH,oBACGA,IAAI,CAAE6B,WAAN,EADH,CARF,CADF,CAbF,CA9BF,CAtEF;AAkID,CAlMD;;AAoMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CACfC,SADe,EAEfC,SAFe,EAGZ;AACH,8BAIID,SAJJ,CACEhD,UADF;AAAA,MACyBkD,WADzB,yBACgBtC,OADhB;AAAA,MACiDuC,YADjD,yBACsCrC,SADtC;AAAA,MAC0EsC,YAD1E,yBAC+DrC,SAD/D;AAAA,MAEgBsC,gBAFhB,GAIIL,SAJJ,CAEE/C,YAFF;AAAA,MAGeqD,eAHf,GAIIN,SAJJ,CAGE7C,WAHF;AAKA,8BAII8C,SAJJ,CACEjD,UADF;AAAA,MACyBuD,WADzB,yBACgB3C,OADhB;AAAA,MACiD4C,YADjD,yBACsC1C,SADtC;AAAA,MAC0E2C,YAD1E,yBAC+D1C,SAD/D;AAAA,MAEgB2C,gBAFhB,GAIIT,SAJJ,CAEEhD,YAFF;AAAA,MAGe0D,eAHf,GAIIV,SAJJ,CAGE9C,WAHF;AAMA,MAAMyD,aAAa,GAAGT,YAAY,KAAKK,YAAvC;AACA,MAAI,CAACI,aAAL,EAAoB,OAAO,KAAP;AAEpB,MAAMC,aAAa,GAAGT,YAAY,KAAKK,YAAvC;AACA,MAAI,CAACI,aAAL,EAAoB,OAAO,KAAP;AAEpB,MAAMC,YAAY,GAChBC,KAAK,CAACC,OAAN,CAAcd,WAAd,MAA+Ba,KAAK,CAACC,OAAN,CAAcT,WAAd,CAA/B,KACEQ,KAAK,CAACC,OAAN,CAAcd,WAAd,KACAa,KAAK,CAACC,OAAN,CAAcT,WAAd,CADA,IAEAL,WAAW,CAACe,MAAZ,KAAuBV,WAAW,CAACU,MAFpC,IAGCf,WAAW,KAAKK,WAJlB,CADF;AAMA,MAAI,CAACO,YAAL,EAAmB,OAAO,KAAP;AAEnB,MAAMI,iBAAiB,GAAGb,gBAAgB,KAAKK,gBAA/C;AACA,MAAI,CAACQ,iBAAL,EAAwB,OAAO,KAAP;AAExB,MAAMC,gBAAgB,GAAGb,eAAe,KAAKK,eAA7C;AACA,MAAI,CAACQ,gBAAL,EAAuB,OAAO,KAAP;AAEvB,SAAO,IAAP;AACD,CApCD;;AAsCA,IAAMC,aAAa,GAAGC,kBAAMC,IAAN,CAAWzE,gBAAX,EAA6BkD,QAA7B,CAAtB;;AAWO,IAAMwB,KAAK,GAAG,SAARA,KAAQ,CAGnBzE,KAHmB,EAIhB;AACH,2BACE,wCADF;AAAA,MAAQI,YAAR,sBAAQA,YAAR;AAAA,MAAsBC,WAAtB,sBAAsBA,WAAtB;AAAA,MAAmCC,OAAnC,sBAAmCA,OAAnC;AAAA,MAA4CC,WAA5C,sBAA4CA,WAA5C;AAAA,MAAyDC,OAAzD,sBAAyDA,OAAzD;AAAA,MAAkEC,SAAlE,sBAAkEA,SAAlE;AAAA,MAA6EC,YAA7E,sBAA6EA,YAA7E;;AAEA,4BAAmD,0CAAnD;AAAA,MAAQT,wBAAR,uBAAQA,wBAAR;AAAA,MAAkCE,YAAlC,uBAAkCA,YAAlC;;AACA,8BAAgC,kDAAhC;AAAA,MAAQQ,QAAR,yBAAQA,QAAR;AAAA,MAAkBC,SAAlB,yBAAkBA,SAAlB;;AACA,2BAAuB,wCAAvB;AAAA,MAAQC,UAAR,sBAAQA,UAAR;;AACA,SACE,gCAAC,aAAD;AAEIZ,IAAAA,wBAAwB,EAAxBA,wBAFJ;AAGIE,IAAAA,YAAY,EAAZA,YAHJ;AAIIC,IAAAA,YAAY,EAAZA,YAJJ;AAKIC,IAAAA,WAAW,EAAXA,WALJ;AAMIC,IAAAA,OAAO,EAAPA,OANJ;AAOIC,IAAAA,WAAW,EAAXA,WAPJ;AAQIC,IAAAA,OAAO,EAAPA,OARJ;AASIC,IAAAA,SAAS,EAATA,SATJ;AAUIC,IAAAA,YAAY,EAAZA,YAVJ;AAWIC,IAAAA,QAAQ,EAARA,QAXJ;AAYIC,IAAAA,SAAS,EAATA,SAZJ;AAaIC,IAAAA,UAAU,EAAVA;AAbJ,KAeMb,KAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAmBD,CA7BM;;;AA+BPyE,KAAK,CAACC,WAAN,GAAoB,6BAApB","sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport type { Attachment } from 'stream-chat';\n\nimport {\n  ImageGalleryContextValue,\n  useImageGalleryContext,\n} from '../../contexts/imageGalleryContext/ImageGalleryContext';\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { GiphyIcon } from '../../icons';\nimport { Lightning } from '../../icons/Lightning';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { makeImageCompatibleUrl } from '../../utils/utils';\n\nconst styles = StyleSheet.create({\n  actionsRow: {\n    flexDirection: 'row',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    borderTopWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n  },\n  cancel: {\n    fontSize: 14,\n    fontWeight: '600',\n    paddingVertical: 16,\n  },\n  container: {\n    overflow: 'hidden',\n    width: 270,\n  },\n  giphy: {\n    alignSelf: 'center',\n    borderRadius: 2,\n    height: 170,\n    maxWidth: 270,\n    width: 270,\n  },\n  giphyContainer: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    justifyContent: 'center',\n    width: 68,\n  },\n  giphyHeaderText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  giphyHeaderTitle: {\n    fontSize: 14,\n    marginLeft: 8,\n  },\n  giphyMask: {\n    bottom: 8,\n    left: 8,\n    position: 'absolute',\n  },\n  giphyMaskText: {\n    fontSize: 13,\n    fontWeight: '600',\n  },\n  header: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 8,\n    width: '60%',\n  },\n  selectionContainer: {\n    borderBottomRightRadius: 0,\n    borderRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n    width: 272,\n  },\n  selectionImageContainer: {\n    alignSelf: 'center',\n    margin: 1,\n  },\n  send: {\n    fontSize: 14,\n    fontWeight: '600',\n    paddingVertical: 16,\n  },\n  shuffle: {\n    fontSize: 14,\n    fontWeight: '600',\n    paddingVertical: 16,\n  },\n  shuffleButton: {\n    alignItems: 'center',\n    borderRadius: 16,\n    borderWidth: 1,\n    height: 32,\n    justifyContent: 'center',\n    width: 32,\n  },\n});\n\nexport type GiphyPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ImageGalleryContextValue<StreamChatGenerics>, 'setImage' | 'setImages'> &\n  Pick<\n    MessageContextValue<StreamChatGenerics>,\n    | 'handleAction'\n    | 'isMyMessage'\n    | 'message'\n    | 'onLongPress'\n    | 'onPress'\n    | 'onPressIn'\n    | 'preventPress'\n  > &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'giphyVersion' | 'additionalTouchableProps'> & {\n    attachment: Attachment<StreamChatGenerics>;\n  } & Pick<OverlayContextValue, 'setOverlay'>;\n\nconst GiphyWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: GiphyPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTouchableProps,\n    attachment,\n    giphyVersion,\n    handleAction,\n    isMyMessage,\n    message,\n    onLongPress,\n    onPress,\n    onPressIn,\n    preventPress,\n    setImage,\n    setImages,\n    setOverlay,\n  } = props;\n\n  const { actions, giphy: giphyData, image_url, thumb_url, title, type } = attachment;\n\n  const {\n    theme: {\n      colors: { accent_blue, black, grey, grey_dark, grey_gainsboro, label_bg_transparent, white },\n      messageSimple: {\n        giphy: {\n          buttonContainer,\n          cancel,\n          container,\n          giphy,\n          giphyContainer,\n          giphyHeaderText,\n          giphyHeaderTitle,\n          giphyMask,\n          giphyMaskText,\n          header,\n          selectionContainer,\n          send,\n          shuffle,\n        },\n      },\n    },\n  } = useTheme();\n\n  let uri = image_url || thumb_url;\n  const giphyDimensions: { height?: number; width?: number } = {};\n\n  const defaultOnPress = () => {\n    setImages([message]);\n    setImage({ messageId: message.id, url: uri });\n    setOverlay('gallery');\n  };\n\n  if (type === 'giphy' && giphyData) {\n    const giphyVersionInfo = giphyData[giphyVersion];\n    uri = giphyVersionInfo.url;\n    giphyDimensions.height = parseFloat(giphyVersionInfo.height);\n    giphyDimensions.width = parseFloat(giphyVersionInfo.width);\n  }\n\n  if (!uri) return null;\n\n  return actions ? (\n    <View\n      style={[\n        styles.selectionContainer,\n        { backgroundColor: white, borderColor: `${black}0D` },\n        selectionContainer,\n      ]}\n      testID='giphy-action-attachment'\n    >\n      <View style={[styles.header, header]}>\n        <GiphyIcon />\n        <Text style={[styles.giphyHeaderText, giphyHeaderText]}>Giphy</Text>\n        <Text\n          style={[styles.giphyHeaderTitle, giphyHeaderTitle, { color: grey_dark }]}\n        >{`/giphy ${title}`}</Text>\n      </View>\n      <View style={styles.selectionImageContainer}>\n        <Image\n          resizeMode='contain'\n          source={{ uri: makeImageCompatibleUrl(uri) }}\n          style={[styles.giphy, giphyDimensions, giphy]}\n        />\n      </View>\n      <View>\n        <View style={styles.actionsRow}>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[2].name && actions?.[2].value && handleAction) {\n                handleAction(actions[2].name, actions[2].value);\n              }\n            }}\n            style={[\n              styles.buttonContainer,\n              { borderColor: grey_gainsboro, borderRightWidth: 1 },\n              buttonContainer,\n            ]}\n            testID={`${actions?.[2].value}-action-button`}\n          >\n            <Text style={[styles.cancel, { color: grey }, cancel]}>{actions?.[2].text}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[1].name && actions?.[1].value && handleAction) {\n                handleAction(actions[1].name, actions[1].value);\n              }\n            }}\n            style={[\n              styles.buttonContainer,\n              { borderColor: grey_gainsboro, borderRightWidth: 1 },\n              buttonContainer,\n            ]}\n            testID={`${actions?.[1].value}-action-button`}\n          >\n            <Text style={[styles.shuffle, { color: grey }, shuffle]}>{actions?.[1].text}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[0].name && actions?.[0].value && handleAction) {\n                handleAction(actions[0].name, actions[0].value);\n              }\n            }}\n            style={[styles.buttonContainer, { borderColor: grey_gainsboro }, buttonContainer]}\n            testID={`${actions?.[0].value}-action-button`}\n          >\n            <Text style={[styles.send, { color: accent_blue }, send]}>{actions?.[0].text}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  ) : (\n    <TouchableOpacity\n      disabled={preventPress}\n      onLongPress={(event) => {\n        if (onLongPress) {\n          onLongPress({\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      onPress={(event) => {\n        if (onPress) {\n          onPress({\n            defaultHandler: defaultOnPress,\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      onPressIn={(event) => {\n        if (onPressIn) {\n          onPressIn({\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      testID='giphy-attachment'\n      {...additionalTouchableProps}\n    >\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: isMyMessage ? grey_gainsboro : white },\n          container,\n        ]}\n      >\n        <Image\n          resizeMode='contain'\n          source={{ uri: makeImageCompatibleUrl(uri) }}\n          style={[styles.giphy, giphyDimensions, giphy]}\n          testID='giphy-attachment-image'\n        />\n        <View style={[styles.giphyMask, giphyMask]}>\n          <View\n            style={[\n              styles.giphyContainer,\n              { backgroundColor: label_bg_transparent },\n              giphyContainer,\n            ]}\n          >\n            <Lightning height={16} pathFill={white} width={16} />\n            <Text style={[styles.giphyMaskText, { color: white }, giphyMaskText]}>\n              {type?.toUpperCase()}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: GiphyPropsWithContext<StreamChatGenerics>,\n  nextProps: GiphyPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    attachment: { actions: prevActions, image_url: prevImageUrl, thumb_url: prevThumbUrl },\n    giphyVersion: prevGiphyVersion,\n    isMyMessage: prevIsMyMessage,\n  } = prevProps;\n  const {\n    attachment: { actions: nextActions, image_url: nextImageUrl, thumb_url: nextThumbUrl },\n    giphyVersion: nextGiphyVersion,\n    isMyMessage: nextIsMyMessage,\n  } = nextProps;\n\n  const imageUrlEqual = prevImageUrl === nextImageUrl;\n  if (!imageUrlEqual) return false;\n\n  const thumbUrlEqual = prevThumbUrl === nextThumbUrl;\n  if (!thumbUrlEqual) return false;\n\n  const actionsEqual =\n    Array.isArray(prevActions) === Array.isArray(nextActions) &&\n    ((Array.isArray(prevActions) &&\n      Array.isArray(nextActions) &&\n      prevActions.length === nextActions.length) ||\n      prevActions === nextActions);\n  if (!actionsEqual) return false;\n\n  const giphyVersionEqual = prevGiphyVersion === nextGiphyVersion;\n  if (!giphyVersionEqual) return false;\n\n  const isMyMessageEqual = prevIsMyMessage === nextIsMyMessage;\n  if (!isMyMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedGiphy = React.memo(GiphyWithContext, areEqual) as typeof GiphyWithContext;\n\nexport type GiphyProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<GiphyPropsWithContext<StreamChatGenerics>> & {\n  attachment: Attachment<StreamChatGenerics>;\n};\n\n/**\n * UI component for card in attachments.\n */\nexport const Giphy = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: GiphyProps<StreamChatGenerics>,\n) => {\n  const { handleAction, isMyMessage, message, onLongPress, onPress, onPressIn, preventPress } =\n    useMessageContext<StreamChatGenerics>();\n  const { additionalTouchableProps, giphyVersion } = useMessagesContext<StreamChatGenerics>();\n  const { setImage, setImages } = useImageGalleryContext<StreamChatGenerics>();\n  const { setOverlay } = useOverlayContext();\n  return (\n    <MemoizedGiphy\n      {...{\n        additionalTouchableProps,\n        giphyVersion,\n        handleAction,\n        isMyMessage,\n        message,\n        onLongPress,\n        onPress,\n        onPressIn,\n        preventPress,\n        setImage,\n        setImages,\n        setOverlay,\n      }}\n      {...props}\n    />\n  );\n};\n\nGiphy.displayName = 'Giphy{messageSimple{giphy}}';\n"]}