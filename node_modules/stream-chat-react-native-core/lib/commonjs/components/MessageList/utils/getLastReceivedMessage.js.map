{"version":3,"sources":["getLastReceivedMessage.ts"],"names":["getLastReceivedMessage","messages","message","status","MessageStatusTypes","RECEIVED","SENDING"],"mappings":";;;;;AACA;;;;;;;;AAIO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAGpCC,QAHoC,EAIjC;AAIH,uDAAsBA,QAAtB,wCAAgC;AAAA,QAArBC,OAAqB;;AAC9B,QACE,CAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEC,MAAT,MAAoBC,0BAAmBC,QAAvC,IACA,CAAAH,OAAO,QAAP,YAAAA,OAAO,CAAEC,MAAT,MAAoBC,0BAAmBE,OAFzC,EAGE;AACA,aAAOJ,OAAP;AACD;AACF;;AAED;AACD,CAlBM","sourcesContent":["import type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { MessageStatusTypes } from '../../../utils/utils';\n\nimport type { MessageType } from '../hooks/useMessageList';\n\nexport const getLastReceivedMessage = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  messages: MessageType<StreamChatGenerics>[],\n) => {\n  /**\n   * There are no status on dates so they will be skipped\n   */\n  for (const message of messages) {\n    if (\n      message?.status === MessageStatusTypes.RECEIVED ||\n      message?.status === MessageStatusTypes.SENDING\n    ) {\n      return message;\n    }\n  }\n\n  return;\n};\n"]}