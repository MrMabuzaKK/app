{"version":3,"sources":["InlineLoadingMoreIndicator.tsx"],"names":["styles","StyleSheet","create","activityIndicatorContainer","padding","width","InlineLoadingMoreIndicatorWithContext","loadingMore","theme","accent_blue","colors","areEqual","prevProps","nextProps","prevLoadingMore","nextLoadingMore","loadingMoreEqual","MemoizedInlineLoadingMoreIndicator","React","memo","InlineLoadingMoreIndicator"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;AAIA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,0BAA0B,EAAE;AAC1BC,IAAAA,OAAO,EAAE,EADiB;AAE1BC,IAAAA,KAAK,EAAE;AAFmB;AADG,CAAlB,CAAf;;AAWO,IAAMC,qCAA2F,GACtG,SADWA,qCACX,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AACnB,kBAAkB,6BAAlB;AAAA,MAAQC,KAAR,aAAQA,KAAR;;AAEA,MACYC,WADZ,GAEID,KAFJ,CACEE,MADF,CACYD,WADZ;;AAIA,MAAI,CAACF,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACG,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,8BAAD;AAAmB,IAAA,KAAK,EAAEM,WAA1B;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAjBI;;;;AAmBP,IAAME,QAAQ,GAAG,SAAXA,QAAW,CACfC,SADe,EAEfC,SAFe,EAGZ;AACH,MAAqBC,eAArB,GAAyCF,SAAzC,CAAQL,WAAR;AACA,MAAqBQ,eAArB,GAAyCF,SAAzC,CAAQN,WAAR;AAEA,MAAMS,gBAAgB,GAAGF,eAAe,KAAKC,eAA7C;AACA,MAAI,CAACC,gBAAL,EAAuB,OAAO,KAAP;AAEvB,SAAO,IAAP;AACD,CAXD;;AAaA,IAAMC,kCAAkC,GAAGC,kBAAMC,IAAN,CACzCb,qCADyC,EAEzCK,QAFyC,CAA3C;;AAKO,IAAMS,0BAA0B,GAAG,SAA7BA,0BAA6B,GAEnC;AACL,8BAAwB,kEAAxB;AAAA,MAAQb,WAAR,yBAAQA,WAAR;;AAEA,SAAO,gCAAC,kCAAD;AAAoC,IAAA,WAAW,EAAEA,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CANM","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, View } from 'react-native';\n\nimport { usePaginatedMessageListContext } from '../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  activityIndicatorContainer: {\n    padding: 10,\n    width: '100%',\n  },\n});\n\nexport type InlineLoadingMoreIndicatorPropsWithContext = {\n  loadingMore?: boolean;\n};\n\nexport const InlineLoadingMoreIndicatorWithContext: React.FC<InlineLoadingMoreIndicatorPropsWithContext> =\n  ({ loadingMore }) => {\n    const { theme } = useTheme();\n\n    const {\n      colors: { accent_blue },\n    } = theme;\n\n    if (!loadingMore) {\n      return null;\n    }\n\n    return (\n      <View style={styles.activityIndicatorContainer}>\n        <ActivityIndicator color={accent_blue} size='small' />\n      </View>\n    );\n  };\n\nconst areEqual = (\n  prevProps: InlineLoadingMoreIndicatorPropsWithContext,\n  nextProps: InlineLoadingMoreIndicatorPropsWithContext,\n) => {\n  const { loadingMore: prevLoadingMore } = prevProps;\n  const { loadingMore: nextLoadingMore } = nextProps;\n\n  const loadingMoreEqual = prevLoadingMore === nextLoadingMore;\n  if (!loadingMoreEqual) return false;\n\n  return true;\n};\n\nconst MemoizedInlineLoadingMoreIndicator = React.memo(\n  InlineLoadingMoreIndicatorWithContext,\n  areEqual,\n) as typeof InlineLoadingMoreIndicatorWithContext;\n\nexport const InlineLoadingMoreIndicator = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const { loadingMore } = usePaginatedMessageListContext<StreamChatGenerics>();\n\n  return <MemoizedInlineLoadingMoreIndicator loadingMore={loadingMore} />;\n};\n"]}