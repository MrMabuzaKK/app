{"version":3,"sources":["NetworkDownIndicator.tsx"],"names":["styles","StyleSheet","create","errorNotification","alignItems","left","paddingVertical","position","right","top","errorNotificationText","color","fontSize","NetworkDownIndicator","error","isOnline","theme","grey","colors","messageList","t","backgroundColor"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,UAAU,EAAE,QADK;AAEjBC,IAAAA,IAAI,EAAE,CAFW;AAGjBC,IAAAA,eAAe,EAAE,CAHA;AAIjBC,IAAAA,QAAQ,EAAE,UAJO;AAKjBC,IAAAA,KAAK,EAAE,CALU;AAMjBC,IAAAA,GAAG,EAAE;AANY,GADY;AAS/BC,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,KAAK,EAAE,SADc;AAErBC,IAAAA,QAAQ,EAAE;AAFW;AATQ,CAAlB,CAAf;;AAeO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxC,2BAAkB,wCAAlB;AAAA,MAAQC,KAAR,sBAAQA,KAAR;;AACA,wBAAqB,kCAArB;AAAA,MAAQC,QAAR,mBAAQA,QAAR;;AACA,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,MAEcC,IAFd,mBAEIC,MAFJ,CAEcD,IAFd;AAAA,8CAGIE,WAHJ;AAAA,MAGmBhB,iBAHnB,yBAGmBA,iBAHnB;AAAA,MAGsCO,qBAHtC,yBAGsCA,qBAHtC;;AAMA,8BAAc,gDAAd;AAAA,MAAQU,CAAR,yBAAQA,CAAR;;AAEA,MAAIL,QAAQ,IAAI,CAACD,KAAjB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,SACE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACd,MAAM,CAACG,iBAAR,EAA2B;AAAEkB,MAAAA,eAAe,EAAKJ,IAAL;AAAjB,KAA3B,EAA6Dd,iBAA7D,CADT;AAEE,IAAA,MAAM,EAAC,oBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACU,qBAAR,EAA+BA,qBAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACK,QAAD,GACGK,CAAC,CAAC,iBAAD,CADJ,GAEGN,KAAK,GACLM,CAAC,CAAC,4CAAD,CADI,GAEL,EALN,CAJF,CADF;AAcD,CA7BM","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { useChannelContext } from '../../contexts/channelContext/ChannelContext';\nimport { useChatContext } from '../../contexts/chatContext/ChatContext';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\n\nconst styles = StyleSheet.create({\n  errorNotification: {\n    alignItems: 'center',\n    left: 0,\n    paddingVertical: 4,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  errorNotificationText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n  },\n});\n\nexport const NetworkDownIndicator = () => {\n  const { error } = useChannelContext();\n  const { isOnline } = useChatContext();\n  const {\n    theme: {\n      colors: { grey },\n      messageList: { errorNotification, errorNotificationText },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  if (isOnline && !error) {\n    return null;\n  }\n\n  return (\n    <View\n      style={[styles.errorNotification, { backgroundColor: `${grey}E6` }, errorNotification]}\n      testID='error-notification'\n    >\n      <Text style={[styles.errorNotificationText, errorNotificationText]}>\n        {!isOnline\n          ? t('Reconnecting...')\n          : error\n          ? t('Error loading messages for this channel...')\n          : ''}\n      </Text>\n    </View>\n  );\n};\n"]}