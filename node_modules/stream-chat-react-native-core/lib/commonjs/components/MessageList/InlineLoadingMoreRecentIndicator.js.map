{"version":3,"sources":["InlineLoadingMoreRecentIndicator.tsx"],"names":["styles","StyleSheet","create","activityIndicatorContainer","padding","width","InlineLoadingMoreRecentIndicatorWithContext","loadingMoreRecent","theme","accent_blue","colors","areEqual","prevProps","nextProps","prevLoadingMoreRecent","nextLoadingMoreRecent","loadingMoreRecentEqual","MemoizedInlineLoadingMoreRecentIndicator","React","memo","InlineLoadingMoreRecentIndicator"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;AAIA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,0BAA0B,EAAE;AAC1BC,IAAAA,OAAO,EAAE,EADiB;AAE1BC,IAAAA,KAAK,EAAE;AAFmB;AADG,CAAlB,CAAf;;AAWO,IAAMC,2CAAuG,GAClH,SADWA,2CACX,OAA2B;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;;AACzB,kBAAkB,6BAAlB;AAAA,MAAQC,KAAR,aAAQA,KAAR;;AAEA,MACYC,WADZ,GAEID,KAFJ,CACEE,MADF,CACYD,WADZ;;AAIA,MAAI,CAACF,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACG,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,8BAAD;AAAmB,IAAA,KAAK,EAAEM,WAA1B;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAjBI;;;;AAmBP,IAAME,QAAQ,GAAG,SAAXA,QAAW,CACfC,SADe,EAEfC,SAFe,EAGZ;AACH,MAA2BC,qBAA3B,GAAqDF,SAArD,CAAQL,iBAAR;AACA,MAA2BQ,qBAA3B,GAAqDF,SAArD,CAAQN,iBAAR;AAEA,MAAMS,sBAAsB,GAAGF,qBAAqB,KAAKC,qBAAzD;AACA,MAAI,CAACC,sBAAL,EAA6B,OAAO,KAAP;AAE7B,SAAO,IAAP;AACD,CAXD;;AAaA,IAAMC,wCAAwC,GAAGC,kBAAMC,IAAN,CAC/Cb,2CAD+C,EAE/CK,QAF+C,CAAjD;;AAKO,IAAMS,gCAAgC,GAAG,SAAnCA,gCAAmC,GAEzC;AACL,8BAA8B,kEAA9B;AAAA,MAAQb,iBAAR,yBAAQA,iBAAR;;AAEA,SAAO,gCAAC,wCAAD;AAA0C,IAAA,iBAAiB,EAAEA,iBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CANM","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, View } from 'react-native';\n\nimport { usePaginatedMessageListContext } from '../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  activityIndicatorContainer: {\n    padding: 10,\n    width: '100%',\n  },\n});\n\nexport type InlineLoadingMoreRecentIndicatorPropsWithContext = {\n  loadingMoreRecent?: boolean;\n};\n\nexport const InlineLoadingMoreRecentIndicatorWithContext: React.FC<InlineLoadingMoreRecentIndicatorPropsWithContext> =\n  ({ loadingMoreRecent }) => {\n    const { theme } = useTheme();\n\n    const {\n      colors: { accent_blue },\n    } = theme;\n\n    if (!loadingMoreRecent) {\n      return null;\n    }\n\n    return (\n      <View style={styles.activityIndicatorContainer}>\n        <ActivityIndicator color={accent_blue} size='small' />\n      </View>\n    );\n  };\n\nconst areEqual = (\n  prevProps: InlineLoadingMoreRecentIndicatorPropsWithContext,\n  nextProps: InlineLoadingMoreRecentIndicatorPropsWithContext,\n) => {\n  const { loadingMoreRecent: prevLoadingMoreRecent } = prevProps;\n  const { loadingMoreRecent: nextLoadingMoreRecent } = nextProps;\n\n  const loadingMoreRecentEqual = prevLoadingMoreRecent === nextLoadingMoreRecent;\n  if (!loadingMoreRecentEqual) return false;\n\n  return true;\n};\n\nconst MemoizedInlineLoadingMoreRecentIndicator = React.memo(\n  InlineLoadingMoreRecentIndicatorWithContext,\n  areEqual,\n) as typeof InlineLoadingMoreRecentIndicatorWithContext;\n\nexport const InlineLoadingMoreRecentIndicator = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const { loadingMoreRecent } = usePaginatedMessageListContext<StreamChatGenerics>();\n\n  return <MemoizedInlineLoadingMoreRecentIndicator loadingMoreRecent={loadingMoreRecent} />;\n};\n"]}