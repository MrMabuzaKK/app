{"version":3,"sources":["AttachmentSelectionBar.tsx"],"names":["styles","StyleSheet","create","container","alignItems","flexDirection","paddingHorizontal","icon","marginHorizontal","AttachmentSelectionBar","attachmentSelectionBarHeight","CameraSelectorIcon","closePicker","FileSelectorIcon","ImageSelectorIcon","selectedPicker","setSelectedImages","setSelectedPicker","compressImageQuality","hasFilePicker","imageUploads","pickFile","theme","attachmentSelectionBar","setPicker","selection","undefined","openFilePicker","takeAndUploadImage","photo","cancelled","images","height","bottom","top","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { useAttachmentPickerContext } from '../../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport { useMessageInputContext } from '../../../contexts/messageInputContext/MessageInputContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\nimport { takePhoto } from '../../../native';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 6,\n  },\n  icon: {\n    marginHorizontal: 12,\n  },\n});\n\nexport const AttachmentSelectionBar: React.FC = () => {\n  const {\n    attachmentSelectionBarHeight,\n    CameraSelectorIcon,\n    closePicker,\n    FileSelectorIcon,\n    ImageSelectorIcon,\n    selectedPicker,\n    setSelectedImages,\n    setSelectedPicker,\n  } = useAttachmentPickerContext();\n\n  const { compressImageQuality, hasFilePicker, imageUploads, pickFile } = useMessageInputContext();\n\n  const {\n    theme: {\n      attachmentSelectionBar: { container, icon },\n    },\n  } = useTheme();\n\n  const setPicker = (selection: 'images') => {\n    if (selectedPicker === selection) {\n      setSelectedPicker(undefined);\n      closePicker();\n    } else {\n      setSelectedPicker(selection);\n    }\n  };\n\n  const openFilePicker = () => {\n    setSelectedPicker(undefined);\n    closePicker();\n    pickFile();\n  };\n\n  const takeAndUploadImage = async () => {\n    setSelectedPicker(undefined);\n    closePicker();\n    const photo = await takePhoto({ compressImageQuality });\n    if (!photo.cancelled) {\n      setSelectedImages((images) => [...images, photo]);\n    }\n  };\n\n  return (\n    <View style={[styles.container, container, { height: attachmentSelectionBarHeight ?? 52 }]}>\n      <TouchableOpacity\n        hitSlop={{ bottom: 15, top: 15 }}\n        onPress={() => setPicker('images')}\n        testID='upload-photo-touchable'\n      >\n        <View style={[styles.icon, icon]}>\n          <ImageSelectorIcon\n            numberOfImageUploads={imageUploads.length}\n            selectedPicker={selectedPicker}\n          />\n        </View>\n      </TouchableOpacity>\n      {hasFilePicker && (\n        <TouchableOpacity\n          hitSlop={{ bottom: 15, top: 15 }}\n          onPress={openFilePicker}\n          testID='upload-file-touchable'\n        >\n          <View style={[styles.icon, icon]}>\n            <FileSelectorIcon\n              numberOfImageUploads={imageUploads.length}\n              selectedPicker={selectedPicker}\n            />\n          </View>\n        </TouchableOpacity>\n      )}\n      <TouchableOpacity\n        hitSlop={{ bottom: 15, top: 15 }}\n        onPress={takeAndUploadImage}\n        testID='take-photo-touchable'\n      >\n        <View style={[styles.icon, icon]}>\n          <CameraSelectorIcon\n            numberOfImageUploads={imageUploads.length}\n            selectedPicker={selectedPicker}\n          />\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n"]}