{"version":3,"sources":["AttachmentPickerError.tsx"],"names":["styles","StyleSheet","create","errorButtonText","fontSize","fontWeight","marginHorizontal","marginTop","textAlign","errorContainer","alignItems","bottom","left","paddingTop","position","right","errorText","AttachmentPickerError","props","attachmentPickerBottomSheetHeight","attachmentPickerErrorButtonText","AttachmentPickerErrorImage","attachmentPickerErrorText","theme","attachmentPicker","colors","accent_blue","grey","white_smoke","t","closePicker","setSelectedPicker","openSettings","undefined","Linking","console","log","backgroundColor","height","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Linking, StyleSheet, Text, View } from 'react-native';\n\nimport { useAttachmentPickerContext } from '../../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\n\nconst styles = StyleSheet.create({\n  errorButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginHorizontal: 24,\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  errorContainer: {\n    alignItems: 'center',\n    bottom: 0,\n    left: 0,\n    paddingTop: 16,\n    position: 'absolute',\n    right: 0,\n  },\n  errorText: {\n    fontSize: 14,\n    marginHorizontal: 24,\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nexport type AttachmentPickerErrorProps = {\n  AttachmentPickerErrorImage: React.ComponentType;\n  attachmentPickerBottomSheetHeight?: number;\n  attachmentPickerErrorButtonText?: string;\n  attachmentPickerErrorText?: string;\n};\n\nexport const AttachmentPickerError: React.FC<AttachmentPickerErrorProps> = (props) => {\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentPickerErrorButtonText,\n    AttachmentPickerErrorImage,\n    attachmentPickerErrorText,\n  } = props;\n\n  const {\n    theme: {\n      attachmentPicker: { errorButtonText, errorContainer, errorText },\n      colors: { accent_blue, grey, white_smoke },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  const { closePicker, setSelectedPicker } = useAttachmentPickerContext();\n\n  const openSettings = async () => {\n    try {\n      setSelectedPicker(undefined);\n      closePicker();\n      await Linking.openSettings();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <View\n      style={[\n        styles.errorContainer,\n        {\n          backgroundColor: white_smoke,\n          height: attachmentPickerBottomSheetHeight ?? 308,\n        },\n        errorContainer,\n      ]}\n    >\n      <AttachmentPickerErrorImage />\n      <Text style={[styles.errorText, { color: grey }, errorText]}>\n        {attachmentPickerErrorText ||\n          t('Please enable access to your photos and videos so you can share them.')}\n      </Text>\n      <Text\n        onPress={openSettings}\n        style={[styles.errorButtonText, { color: accent_blue }, errorButtonText]}\n        suppressHighlighting\n      >\n        {attachmentPickerErrorButtonText || t('Allow access to your Gallery')}\n      </Text>\n    </View>\n  );\n};\n"]}