{"version":3,"sources":["Reply.tsx"],"names":["styles","StyleSheet","create","container","alignItems","flexDirection","fileAttachmentContainer","paddingLeft","paddingVertical","imageAttachment","borderRadius","height","marginLeft","marginVertical","width","messageContainer","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","flexGrow","flexShrink","text","fontSize","textContainer","maxWidth","undefined","paddingHorizontal","videoAttachment","getMessageType","lastAttachment","messageType","isLastAttachmentFile","type","isLastAttachmentVideo","isLastAttachmentGiphy","isLastAttachmentImageOrGiphy","title_link","og_scrape_url","isLastAttachmentImage","image_url","thumb_url","ReplyWithContext","props","FileAttachmentIcon","attachmentSize","MessageAvatar","quotedMessage","stylesProp","t","error","setError","theme","colors","blue_alice","border","grey","transparent","white","deletedText","messageSimple","content","reply","markdownStyles","attachments","slice","hasImage","onlyEmojis","emojiRegex","test","backgroundColor","borderColor","borderWidth","mime_type","uri","url","deleted_at","em","color","length","title","marginRight","Number","areEqual","prevProps","nextProps","prevQuotedMessage","nextQuotedMessage","quotedMessageEqual","id","MemoizedReply","React","memo","Reply","message","FileIconDefault","MessageAvatarDefault","editing","quotedEditingMessage","quoted_message","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Image, ImageStyle, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport merge from 'lodash/merge';\n\nimport type { Attachment } from 'stream-chat';\n\nimport { useMessageContext } from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { getResizedImageUrl } from '../../utils/getResizedImageUrl';\nimport { emojiRegex } from '../../utils/utils';\n\nimport { FileIcon as FileIconDefault } from '../Attachment/FileIcon';\nimport { VideoThumbnail } from '../Attachment/VideoThumbnail';\nimport { MessageAvatar as MessageAvatarDefault } from '../Message/MessageSimple/MessageAvatar';\nimport { MessageTextContainer } from '../Message/MessageSimple/MessageTextContainer';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  fileAttachmentContainer: { paddingLeft: 8, paddingVertical: 8 },\n  imageAttachment: {\n    borderRadius: 8,\n    height: 32,\n    marginLeft: 8,\n    marginVertical: 8,\n    width: 32,\n  },\n  messageContainer: {\n    alignItems: 'flex-start',\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 12,\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12,\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  text: { fontSize: 12 },\n  textContainer: { maxWidth: undefined, paddingHorizontal: 8 },\n  videoAttachment: {\n    borderRadius: 8,\n    height: 50,\n    marginLeft: 8,\n    marginVertical: 8,\n    width: 50,\n  },\n});\n\ntype ReplyPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<MessageInputContextValue<StreamChatGenerics>, 'quotedMessage'> &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'FileAttachmentIcon' | 'MessageAvatar'> &\n  Pick<TranslationContextValue, 't'> & {\n    attachmentSize?: number;\n    styles?: Partial<{\n      container: ViewStyle;\n      fileAttachmentContainer: ViewStyle;\n      imageAttachment: ImageStyle;\n      messageContainer: ViewStyle;\n      textContainer: ViewStyle;\n    }>;\n  };\n\nconst getMessageType = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  lastAttachment: Attachment<StreamChatGenerics>,\n) => {\n  let messageType;\n\n  const isLastAttachmentFile = lastAttachment.type === 'file' || lastAttachment.type === 'audio';\n\n  const isLastAttachmentVideo = lastAttachment.type === 'video';\n\n  const isLastAttachmentGiphy =\n    lastAttachment?.type === 'giphy' || lastAttachment?.type === 'imgur';\n\n  const isLastAttachmentImageOrGiphy =\n    lastAttachment?.type === 'image' &&\n    !lastAttachment?.title_link &&\n    !lastAttachment?.og_scrape_url;\n\n  const isLastAttachmentImage = lastAttachment?.image_url || lastAttachment?.thumb_url;\n\n  if (isLastAttachmentFile) {\n    messageType = 'file';\n  } else if (isLastAttachmentVideo) {\n    messageType = 'video';\n  } else if (isLastAttachmentImageOrGiphy) {\n    if (isLastAttachmentImage) messageType = 'image';\n    else messageType = undefined;\n  } else if (isLastAttachmentGiphy) messageType = 'giphy';\n  else messageType = 'other';\n\n  return messageType;\n};\n\nconst ReplyWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReplyPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    FileAttachmentIcon,\n    attachmentSize = 40,\n    MessageAvatar,\n    quotedMessage,\n    styles: stylesProp = {},\n    t,\n  } = props;\n\n  const [error, setError] = useState(false);\n\n  const {\n    theme: {\n      colors: { blue_alice, border, grey, transparent, white },\n      messageSimple: {\n        content: { deletedText },\n      },\n      reply: {\n        container,\n        fileAttachmentContainer,\n        imageAttachment,\n        markdownStyles,\n        messageContainer,\n        textContainer,\n      },\n    },\n  } = useTheme();\n\n  if (typeof quotedMessage === 'boolean') return null;\n\n  const lastAttachment = quotedMessage.attachments?.slice(-1)[0] as Attachment<StreamChatGenerics>;\n  const messageType = lastAttachment && getMessageType(lastAttachment);\n\n  const hasImage =\n    !error &&\n    lastAttachment &&\n    messageType !== 'file' &&\n    (lastAttachment.image_url || lastAttachment.thumb_url || lastAttachment.og_scrape_url);\n\n  const onlyEmojis = !lastAttachment && !!quotedMessage.text && emojiRegex.test(quotedMessage.text);\n\n  return (\n    <View style={[styles.container, container, stylesProp.container]}>\n      <MessageAvatar alignment={'left'} lastGroupMessage message={quotedMessage} size={24} />\n      <View\n        style={[\n          styles.messageContainer,\n          {\n            backgroundColor:\n              messageType === 'other' ? blue_alice : messageType === 'giphy' ? transparent : white,\n            borderColor: border,\n            borderWidth: messageType === 'other' ? 0 : 1,\n          },\n          messageContainer,\n          stylesProp.messageContainer,\n        ]}\n      >\n        {!error && lastAttachment ? (\n          messageType === 'file' ? (\n            <View\n              style={[\n                styles.fileAttachmentContainer,\n                fileAttachmentContainer,\n                stylesProp.fileAttachmentContainer,\n              ]}\n            >\n              <FileAttachmentIcon mimeType={lastAttachment.mime_type} size={attachmentSize} />\n            </View>\n          ) : hasImage ? (\n            <Image\n              onError={() => setError(true)}\n              source={{\n                uri: getResizedImageUrl({\n                  height:\n                    stylesProp.imageAttachment?.height ||\n                    imageAttachment?.height ||\n                    styles.imageAttachment.height,\n                  url: (lastAttachment.image_url ||\n                    lastAttachment.thumb_url ||\n                    lastAttachment.og_scrape_url) as string,\n                  width:\n                    stylesProp.imageAttachment?.width ||\n                    imageAttachment?.width ||\n                    styles.imageAttachment.width,\n                }),\n              }}\n              style={[styles.imageAttachment, imageAttachment, stylesProp.imageAttachment]}\n            />\n          ) : null\n        ) : null}\n        {messageType === 'video' && !lastAttachment.og_scrape_url ? (\n          <VideoThumbnail style={[styles.videoAttachment]} />\n        ) : null}\n        <MessageTextContainer<StreamChatGenerics>\n          markdownStyles={\n            quotedMessage.deleted_at\n              ? merge({ em: { color: grey } }, deletedText)\n              : { text: styles.text, ...markdownStyles }\n          }\n          message={{\n            ...quotedMessage,\n            text: quotedMessage.deleted_at\n              ? `_${t('Message deleted')}_`\n              : quotedMessage.text\n              ? quotedMessage.text.length > 170\n                ? `${quotedMessage.text.slice(0, 170)}...`\n                : quotedMessage.text\n              : messageType === 'image'\n              ? t('Photo')\n              : messageType === 'video'\n              ? 'Video'\n              : messageType === 'file'\n              ? lastAttachment?.title || ''\n              : '',\n          }}\n          onlyEmojis={onlyEmojis}\n          styles={{\n            textContainer: [\n              {\n                marginRight:\n                  hasImage || messageType === 'video'\n                    ? Number(\n                        stylesProp.imageAttachment?.height ||\n                          imageAttachment.height ||\n                          styles.imageAttachment.height,\n                      ) +\n                      Number(\n                        stylesProp.imageAttachment?.marginLeft ||\n                          imageAttachment.marginLeft ||\n                          styles.imageAttachment.marginLeft,\n                      )\n                    : messageType === 'file'\n                    ? attachmentSize +\n                      Number(\n                        stylesProp.fileAttachmentContainer?.paddingLeft ||\n                          fileAttachmentContainer.paddingLeft ||\n                          styles.fileAttachmentContainer.paddingLeft,\n                      )\n                    : undefined,\n              },\n              styles.textContainer,\n              textContainer,\n              stylesProp.textContainer,\n            ],\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: ReplyPropsWithContext<StreamChatGenerics>,\n  nextProps: ReplyPropsWithContext<StreamChatGenerics>,\n) => {\n  const { quotedMessage: prevQuotedMessage } = prevProps;\n  const { quotedMessage: nextQuotedMessage } = nextProps;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id &&\n        prevQuotedMessage.deleted_at === nextQuotedMessage.deleted_at\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n\n  if (!quotedMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedReply = React.memo(ReplyWithContext, areEqual) as typeof ReplyWithContext;\n\nexport type ReplyProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<ReplyPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for reply\n */\nexport const Reply = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ReplyProps<StreamChatGenerics>,\n) => {\n  const { message } = useMessageContext<StreamChatGenerics>();\n\n  const { FileAttachmentIcon = FileIconDefault, MessageAvatar = MessageAvatarDefault } =\n    useMessagesContext<StreamChatGenerics>();\n\n  const { editing, quotedMessage } = useMessageInputContext<StreamChatGenerics>();\n\n  const quotedEditingMessage = (\n    typeof editing !== 'boolean' ? editing?.quoted_message || false : false\n  ) as MessageInputContextValue<StreamChatGenerics>['quotedMessage'];\n\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedReply\n      {...{\n        FileAttachmentIcon,\n        MessageAvatar,\n        quotedMessage: message\n          ? (message.quoted_message as MessageInputContextValue<StreamChatGenerics>['quotedMessage'])\n          : quotedMessage || quotedEditingMessage,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n\nReply.displayName = 'Reply{reply}';\n"]}