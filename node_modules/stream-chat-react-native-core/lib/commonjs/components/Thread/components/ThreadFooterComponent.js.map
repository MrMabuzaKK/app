{"version":3,"sources":["ThreadFooterComponent.tsx"],"names":["styles","StyleSheet","create","absolute","position","messagePadding","paddingHorizontal","newThread","alignItems","height","justifyContent","marginTop","text","fontSize","textAlign","threadHeaderContainer","marginVertical","ThreadFooterComponentWithContext","props","Message","thread","t","theme","colors","bg_gradient_end","bg_gradient_start","grey","backgroundGradientStart","backgroundGradientStop","replyCount","reply_count","color","areEqual","prevProps","nextProps","prevThread","nextThread","threadEqual","id","latestReactionsEqual","Array","isArray","latest_reactions","length","every","index","type","MemoizedThreadFooter","React","memo","ThreadFooterComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Svg, { Defs, LinearGradient, Rect, Stop } from 'react-native-svg';\n\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport {\n  ThreadContextValue,\n  useThreadContext,\n} from '../../../contexts/threadContext/ThreadContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { vw } from '../../../utils/utils';\n\nconst styles = StyleSheet.create({\n  absolute: { position: 'absolute' },\n  messagePadding: {\n    paddingHorizontal: 8,\n  },\n  newThread: {\n    alignItems: 'center',\n    height: 24,\n    justifyContent: 'center',\n    marginTop: 8,\n  },\n  text: {\n    fontSize: 12,\n    textAlign: 'center',\n  },\n  threadHeaderContainer: {\n    marginVertical: 8,\n  },\n});\n\ntype ThreadFooterComponentPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<MessagesContextValue<StreamChatGenerics>, 'Message'> &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'>;\n\nconst ThreadFooterComponentWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: ThreadFooterComponentPropsWithContext<StreamChatGenerics>,\n) => {\n  const { Message, thread } = props;\n  const { t } = useTranslationContext();\n\n  const {\n    theme: {\n      colors: { bg_gradient_end, bg_gradient_start, grey },\n      thread: {\n        newThread: { backgroundGradientStart, backgroundGradientStop, text, ...newThread },\n      },\n    },\n  } = useTheme();\n\n  if (!thread) return null;\n\n  const replyCount = thread.reply_count;\n\n  return (\n    <View style={styles.threadHeaderContainer} testID='thread-footer-component'>\n      <View style={styles.messagePadding}>\n        <Message groupStyles={['single']} message={thread} preventPress threadList />\n      </View>\n      <View style={[styles.newThread, newThread]}>\n        <Svg height={newThread.height ?? 24} style={styles.absolute} width={vw(100)}>\n          <Rect fill='url(#gradient)' height={newThread.height ?? 24} width={vw(100)} x={0} y={0} />\n          <Defs>\n            <LinearGradient\n              gradientUnits='userSpaceOnUse'\n              id='gradient'\n              x1={0}\n              x2={0}\n              y1={0}\n              y2={newThread.height ?? 24}\n            >\n              <Stop\n                offset={1}\n                stopColor={backgroundGradientStart || bg_gradient_end}\n                stopOpacity={1}\n              />\n              <Stop\n                offset={0}\n                stopColor={backgroundGradientStop || bg_gradient_start}\n                stopOpacity={1}\n              />\n            </LinearGradient>\n          </Defs>\n        </Svg>\n        <Text style={[styles.text, { color: grey }, text]}>\n          {replyCount === 1\n            ? t('1 Reply')\n            : t('{{ replyCount }} Replies', {\n                replyCount,\n              })}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: ThreadFooterComponentPropsWithContext<StreamChatGenerics>,\n  nextProps: ThreadFooterComponentPropsWithContext<StreamChatGenerics>,\n) => {\n  const { thread: prevThread } = prevProps;\n  const { thread: nextThread } = nextProps;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const latestReactionsEqual =\n    prevThread &&\n    nextThread &&\n    Array.isArray(prevThread.latest_reactions) &&\n    Array.isArray(nextThread.latest_reactions)\n      ? prevThread.latest_reactions.length === nextThread.latest_reactions.length &&\n        prevThread.latest_reactions.every(\n          ({ type }, index) => type === nextThread.latest_reactions?.[index].type,\n        )\n      : prevThread?.latest_reactions === nextThread?.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedThreadFooter = React.memo(\n  ThreadFooterComponentWithContext,\n  areEqual,\n) as typeof ThreadFooterComponentWithContext;\n\nexport const ThreadFooterComponent = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const { Message } = useMessagesContext<StreamChatGenerics>();\n  const { thread } = useThreadContext<StreamChatGenerics>();\n\n  return (\n    <MemoizedThreadFooter\n      {...{\n        Message,\n        thread,\n      }}\n    />\n  );\n};\n"]}