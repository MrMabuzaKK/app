{"version":3,"sources":["useCreateMessageContext.ts"],"names":["useCreateMessageContext","actionsEnabled","alignment","channel","disabled","files","goToMessage","groupStyles","handleAction","handleDeleteMessage","handleEditMessage","handleQuotedReplyMessage","handleResendMessage","handleToggleBanUser","handleToggleMuteUser","handleToggleReaction","hasReactions","images","isMyMessage","lastGroupMessage","lastReceivedId","members","message","messageContentOrder","onLongPress","onlyEmojis","onOpenThread","onPress","onPressIn","otherAttachments","preventPress","reactions","showAvatar","showMessageOverlay","showMessageStatus","threadList","videos","groupStylesLength","length","reactionsValue","map","own","type","join","latestReactions","latest_reactions","undefined","readBy","messageValue","updated_at","deleted_at","status","text","reply_count","membersValue","JSON","stringify","quotedMessageDeletedValue","quoted_message","messageContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { isMessageWithStylesReadByAndDateSeparator } from '../../MessageList/hooks/useMessageList';\n\nexport const useCreateMessageContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  actionsEnabled,\n  alignment,\n  channel,\n  disabled,\n  files,\n  goToMessage,\n  groupStyles,\n  handleAction,\n  handleDeleteMessage,\n  handleEditMessage,\n  handleQuotedReplyMessage,\n  handleResendMessage,\n  handleToggleBanUser,\n  handleToggleMuteUser,\n  handleToggleReaction,\n  hasReactions,\n  images,\n  isMyMessage,\n  lastGroupMessage,\n  lastReceivedId,\n  members,\n  message,\n  messageContentOrder,\n  onLongPress,\n  onlyEmojis,\n  onOpenThread,\n  onPress,\n  onPressIn,\n  otherAttachments,\n  preventPress,\n  reactions,\n  showAvatar,\n  showMessageOverlay,\n  showMessageStatus,\n  threadList,\n  videos,\n}: MessageContextValue<StreamChatGenerics>) => {\n  const groupStylesLength = groupStyles.length;\n  const reactionsValue = reactions.map(({ own, type }) => `${own}${type}`).join();\n  const latestReactions = message.latest_reactions ? message.latest_reactions : undefined;\n  const readBy = isMessageWithStylesReadByAndDateSeparator(message) && message.readBy;\n  const messageValue = `${latestReactions ? latestReactions.map(({ type }) => type).join() : ''}${\n    message.updated_at\n  }${message.deleted_at}${readBy}${message.status}${message.type}${message.text}${\n    message.reply_count\n  }`;\n  const membersValue = JSON.stringify(members);\n\n  const quotedMessageDeletedValue = message.quoted_message?.deleted_at;\n\n  const messageContext: MessageContextValue<StreamChatGenerics> = useMemo(\n    () => ({\n      actionsEnabled,\n      alignment,\n      channel,\n      disabled,\n      files,\n      goToMessage,\n      groupStyles,\n      handleAction,\n      handleDeleteMessage,\n      handleEditMessage,\n      handleQuotedReplyMessage,\n      handleResendMessage,\n      handleToggleBanUser,\n      handleToggleMuteUser,\n      handleToggleReaction,\n      hasReactions,\n      images,\n      isMyMessage,\n      lastGroupMessage,\n      lastReceivedId,\n      members,\n      message,\n      messageContentOrder,\n      onLongPress,\n      onlyEmojis,\n      onOpenThread,\n      onPress,\n      onPressIn,\n      otherAttachments,\n      preventPress,\n      reactions,\n      showAvatar,\n      showMessageOverlay,\n      showMessageStatus,\n      threadList,\n      videos,\n    }),\n    [\n      actionsEnabled,\n      quotedMessageDeletedValue,\n      alignment,\n      disabled,\n      goToMessage,\n      groupStylesLength,\n      hasReactions,\n      lastGroupMessage,\n      lastReceivedId,\n      membersValue,\n      messageValue,\n      reactionsValue,\n      showAvatar,\n      showMessageStatus,\n      threadList,\n    ],\n  );\n\n  return messageContext;\n};\n"]}