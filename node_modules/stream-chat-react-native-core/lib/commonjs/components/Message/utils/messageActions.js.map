{"version":3,"sources":["messageActions.ts"],"names":["messageActions","blockUser","copyMessage","deleteMessage","editMessage","error","flagMessage","isMyMessage","isThreadMessage","message","messageReactions","ownCapabilities","pinMessage","quotedReply","retry","threadReply","unpinMessage","undefined","actions","push","quoteMessage","sendReply","updateOwnMessage","updateAnyMessage","text","pinned","banChannelMembers","deleteOwnMessage","deleteAnyMessage"],"mappings":";;;;;AA8BO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAmBkB;AAAA,MAhB9CC,SAgB8C,QAhB9CA,SAgB8C;AAAA,MAf9CC,WAe8C,QAf9CA,WAe8C;AAAA,MAd9CC,aAc8C,QAd9CA,aAc8C;AAAA,MAb9CC,WAa8C,QAb9CA,WAa8C;AAAA,MAZ9CC,KAY8C,QAZ9CA,KAY8C;AAAA,MAX9CC,WAW8C,QAX9CA,WAW8C;AAAA,MAV9CC,WAU8C,QAV9CA,WAU8C;AAAA,MAT9CC,eAS8C,QAT9CA,eAS8C;AAAA,MAR9CC,OAQ8C,QAR9CA,OAQ8C;AAAA,MAP9CC,gBAO8C,QAP9CA,gBAO8C;AAAA,MAN9CC,eAM8C,QAN9CA,eAM8C;AAAA,MAL9CC,UAK8C,QAL9CA,UAK8C;AAAA,MAJ9CC,WAI8C,QAJ9CA,WAI8C;AAAA,MAH9CC,KAG8C,QAH9CA,KAG8C;AAAA,MAF9CC,WAE8C,QAF9CA,WAE8C;AAAA,MAD9CC,YAC8C,QAD9CA,YAC8C;;AAC9C,MAAIN,gBAAJ,EAAsB;AACpB,WAAOO,SAAP;AACD;;AAED,MAAMC,OAAwC,GAAG,EAAjD;;AAEA,MAAIb,KAAK,IAAIE,WAAb,EAA0B;AACxBW,IAAAA,OAAO,CAACC,IAAR,CAAaL,KAAb;AACD;;AAED,MAAIH,eAAe,CAACS,YAAhB,IAAgC,CAACZ,eAAjC,IAAoD,CAACH,KAAzD,EAAgE;AAC9Da,IAAAA,OAAO,CAACC,IAAR,CAAaN,WAAb;AACD;;AAED,MAAIF,eAAe,CAACU,SAAhB,IAA6B,CAACb,eAA9B,IAAiD,CAACH,KAAtD,EAA6D;AAC3Da,IAAAA,OAAO,CAACC,IAAR,CAAaJ,WAAb;AACD;;AAED,MACGR,WAAW,IAAII,eAAe,CAACW,gBAAhC,IACC,CAACf,WAAD,IAAgBI,eAAe,CAACY,gBAFnC,EAGE;AACAL,IAAAA,OAAO,CAACC,IAAR,CAAaf,WAAb;AACD;;AAED,MAAIK,OAAO,CAACe,IAAR,IAAgB,CAACnB,KAArB,EAA4B;AAC1Ba,IAAAA,OAAO,CAACC,IAAR,CAAajB,WAAb;AACD;;AAED,MAAI,CAACK,WAAD,IAAgBI,eAAe,CAACL,WAApC,EAAiD;AAC/CY,IAAAA,OAAO,CAACC,IAAR,CAAab,WAAb;AACD;;AAED,MAAIK,eAAe,CAACC,UAAhB,IAA8B,CAACH,OAAO,CAACgB,MAA3C,EAAmD;AACjDP,IAAAA,OAAO,CAACC,IAAR,CAAaP,UAAb;AACD;;AAED,MAAID,eAAe,CAACC,UAAhB,IAA8BH,OAAO,CAACgB,MAA1C,EAAkD;AAChDP,IAAAA,OAAO,CAACC,IAAR,CAAaH,YAAb;AACD;;AAED,MAAI,CAACT,WAAD,IAAgBI,eAAe,CAACe,iBAApC,EAAuD;AACrDR,IAAAA,OAAO,CAACC,IAAR,CAAalB,SAAb;AACD;;AAED,MACGM,WAAW,IAAII,eAAe,CAACgB,gBAAhC,IACC,CAACpB,WAAD,IAAgBI,eAAe,CAACiB,gBAFnC,EAGE;AACAV,IAAAA,OAAO,CAACC,IAAR,CAAahB,aAAb;AACD;;AAED,SAAOe,OAAP;AACD,CAzEM","sourcesContent":["import type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';\nimport type { OwnCapabilitiesContextValue } from '../../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport type { MessageActionType } from '../../MessageOverlay/MessageActionListItem';\n\nexport type MessageActionsParams<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  blockUser: MessageActionType;\n  copyMessage: MessageActionType;\n  deleteMessage: MessageActionType;\n  dismissOverlay: () => void;\n  editMessage: MessageActionType;\n  error: boolean | Error;\n  flagMessage: MessageActionType;\n  isThreadMessage: boolean;\n  messageReactions: boolean;\n  muteUser: MessageActionType;\n  ownCapabilities: OwnCapabilitiesContextValue;\n  pinMessage: MessageActionType;\n  quotedReply: MessageActionType;\n  retry: MessageActionType;\n  threadReply: MessageActionType;\n  unpinMessage: MessageActionType;\n} & Pick<MessageContextValue<StreamChatGenerics>, 'message' | 'isMyMessage'>;\n\nexport type MessageActionsProp<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = (param: MessageActionsParams<StreamChatGenerics>) => MessageActionType[];\n\nexport const messageActions = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  blockUser,\n  copyMessage,\n  deleteMessage,\n  editMessage,\n  error,\n  flagMessage,\n  isMyMessage,\n  isThreadMessage,\n  message,\n  messageReactions,\n  ownCapabilities,\n  pinMessage,\n  quotedReply,\n  retry,\n  threadReply,\n  unpinMessage,\n}: MessageActionsParams<StreamChatGenerics>) => {\n  if (messageReactions) {\n    return undefined;\n  }\n\n  const actions: Array<MessageActionType | null> = [];\n\n  if (error && isMyMessage) {\n    actions.push(retry);\n  }\n\n  if (ownCapabilities.quoteMessage && !isThreadMessage && !error) {\n    actions.push(quotedReply);\n  }\n\n  if (ownCapabilities.sendReply && !isThreadMessage && !error) {\n    actions.push(threadReply);\n  }\n\n  if (\n    (isMyMessage && ownCapabilities.updateOwnMessage) ||\n    (!isMyMessage && ownCapabilities.updateAnyMessage)\n  ) {\n    actions.push(editMessage);\n  }\n\n  if (message.text && !error) {\n    actions.push(copyMessage);\n  }\n\n  if (!isMyMessage && ownCapabilities.flagMessage) {\n    actions.push(flagMessage);\n  }\n\n  if (ownCapabilities.pinMessage && !message.pinned) {\n    actions.push(pinMessage);\n  }\n\n  if (ownCapabilities.pinMessage && message.pinned) {\n    actions.push(unpinMessage);\n  }\n\n  if (!isMyMessage && ownCapabilities.banChannelMembers) {\n    actions.push(blockUser);\n  }\n\n  if (\n    (isMyMessage && ownCapabilities.deleteOwnMessage) ||\n    (!isMyMessage && ownCapabilities.deleteAnyMessage)\n  ) {\n    actions.push(deleteMessage);\n  }\n\n  return actions;\n};\n"]}