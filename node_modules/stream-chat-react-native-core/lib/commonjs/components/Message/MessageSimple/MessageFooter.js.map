{"version":3,"sources":["MessageFooter.tsx"],"names":["MessageFooterWithContext","props","alignment","deletedMessagesVisibilityType","formattedDate","isDeleted","lastGroupMessage","members","message","MessageStatus","otherAttachments","showMessageStatus","theme","colors","grey","grey_dark","messageSimple","content","deletedMetaText","eyeIcon","messageUser","metaContainer","metaText","t","color","textAlign","length","actions","Object","keys","user","name","areEqual","prevProps","nextProps","prevAlignment","prevFormattedDate","prevLastGroupMessage","prevMembers","prevMessage","prevOtherAttachments","prevShowMessageStatus","nextAlignment","nextFormattedDate","nextLastGroupMessage","nextMembers","nextMessage","nextOtherAttachments","nextShowMessageStatus","alignmentEqual","membersEqual","lastGroupMessageEqual","deletedMessagesVisibilityTypeEqual","isPrevMessageTypeDeleted","type","isNextMessageTypeDeleted","messageEqual","reply_count","status","text","pinned","otherAttachmentsEqual","showMessageStatusEqual","formattedDateEqual","MemoizedMessageFooter","React","memo","MessageFooter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\n\nimport type { Attachment } from 'stream-chat';\n\nimport type { MessageStatusProps } from './MessageStatus';\n\nimport type { ChannelContextValue } from '../../../contexts/channelContext/ChannelContext';\nimport {\n  Alignment,\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\n\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\nimport { Eye } from '../../../icons';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport type { MessageType } from '../../MessageList/hooks/useMessageList';\n\ntype MessageFooterComponentProps = {\n  formattedDate: string | Date;\n  isDeleted?: boolean;\n};\n\ntype MessageFooterPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  | 'alignment'\n  | 'members'\n  | 'message'\n  | 'otherAttachments'\n  | 'showMessageStatus'\n  | 'lastGroupMessage'\n> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    'deletedMessagesVisibilityType' | 'MessageStatus'\n  > &\n  MessageFooterComponentProps;\n\nconst MessageFooterWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageFooterPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    deletedMessagesVisibilityType,\n    formattedDate,\n    isDeleted,\n    lastGroupMessage,\n    members,\n    message,\n    MessageStatus,\n    otherAttachments,\n    showMessageStatus,\n  } = props;\n\n  const {\n    theme: {\n      colors: { grey, grey_dark },\n      messageSimple: {\n        content: { deletedMetaText, eyeIcon, messageUser, metaContainer, metaText },\n      },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  if (isDeleted) {\n    return (\n      <View style={metaContainer} testID='message-deleted'>\n        {deletedMessagesVisibilityType === 'sender' && (\n          <>\n            <Eye pathFill={grey_dark} {...eyeIcon} />\n            <Text\n              style={[\n                {\n                  color: grey_dark,\n                  textAlign: alignment,\n                },\n                metaText,\n                deletedMetaText,\n              ]}\n              testID='only-visible-to-you'\n            >\n              {t('Only visible to you')}\n            </Text>\n          </>\n        )}\n        <Text\n          style={[\n            {\n              color: grey,\n              textAlign: alignment,\n            },\n            metaText,\n          ]}\n        >\n          {formattedDate}\n        </Text>\n      </View>\n    );\n  }\n\n  if (lastGroupMessage === false) {\n    return null;\n  }\n\n  return (\n    <View style={metaContainer} testID='message-status-time'>\n      {otherAttachments.length && otherAttachments[0].actions ? (\n        <>\n          <Eye pathFill={grey_dark} {...eyeIcon} />\n          <Text\n            style={[\n              {\n                color: grey_dark,\n                textAlign: alignment,\n              },\n              metaText,\n              deletedMetaText,\n            ]}\n          >\n            {t('Only visible to you')}\n          </Text>\n        </>\n      ) : null}\n      {Object.keys(members).length > 2 && alignment === 'left' && message.user?.name ? (\n        <Text style={[{ color: grey }, messageUser]}>{message.user.name}</Text>\n      ) : null}\n      {showMessageStatus && <MessageStatus />}\n      <Text style={[{ color: grey, textAlign: alignment }, metaText]}>{formattedDate}</Text>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageFooterPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageFooterPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment: prevAlignment,\n    formattedDate: prevFormattedDate,\n    lastGroupMessage: prevLastGroupMessage,\n    members: prevMembers,\n    message: prevMessage,\n    otherAttachments: prevOtherAttachments,\n    showMessageStatus: prevShowMessageStatus,\n  } = prevProps;\n  const {\n    alignment: nextAlignment,\n    formattedDate: nextFormattedDate,\n    lastGroupMessage: nextLastGroupMessage,\n    members: nextMembers,\n    message: nextMessage,\n    otherAttachments: nextOtherAttachments,\n    showMessageStatus: nextShowMessageStatus,\n  } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const lastGroupMessageEqual = prevLastGroupMessage === nextLastGroupMessage;\n  if (!lastGroupMessageEqual) return false;\n\n  const deletedMessagesVisibilityTypeEqual =\n    prevProps.deletedMessagesVisibilityType === nextProps.deletedMessagesVisibilityType;\n  if (!deletedMessagesVisibilityTypeEqual) return false;\n\n  const isPrevMessageTypeDeleted = prevMessage.type === 'deleted';\n  const isNextMessageTypeDeleted = nextMessage.type === 'deleted';\n\n  const messageEqual =\n    isPrevMessageTypeDeleted === isNextMessageTypeDeleted &&\n    prevMessage.reply_count === nextMessage.reply_count &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text &&\n    prevMessage.pinned === nextMessage.pinned;\n  if (!messageEqual) return false;\n\n  const otherAttachmentsEqual =\n    prevOtherAttachments.length === nextOtherAttachments.length &&\n    prevOtherAttachments?.[0]?.actions?.length === nextOtherAttachments?.[0]?.actions?.length;\n  if (!otherAttachmentsEqual) return false;\n\n  const showMessageStatusEqual = prevShowMessageStatus === nextShowMessageStatus;\n  if (!showMessageStatusEqual) return false;\n\n  const formattedDateEqual = prevFormattedDate === nextFormattedDate;\n  if (!formattedDateEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageFooter = React.memo(\n  MessageFooterWithContext,\n  areEqual,\n) as typeof MessageFooterWithContext;\n\nexport type MessageFooterProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Pick<ChannelContextValue<StreamChatGenerics>, 'members'>> &\n  MessageFooterComponentProps & {\n    alignment?: Alignment;\n    lastGroupMessage?: boolean;\n    message?: MessageType<StreamChatGenerics>;\n    MessageStatus?: React.ComponentType<MessageStatusProps<StreamChatGenerics>>;\n    otherAttachments?: Attachment<StreamChatGenerics>[];\n    showMessageStatus?: boolean;\n  };\n\nexport const MessageFooter = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageFooterProps<StreamChatGenerics>,\n) => {\n  const { alignment, lastGroupMessage, members, message, otherAttachments, showMessageStatus } =\n    useMessageContext<StreamChatGenerics>();\n\n  const { deletedMessagesVisibilityType, MessageStatus } = useMessagesContext<StreamChatGenerics>();\n\n  return (\n    <MemoizedMessageFooter\n      {...{\n        alignment,\n        deletedMessagesVisibilityType,\n        lastGroupMessage,\n        members,\n        message,\n        MessageStatus,\n        otherAttachments,\n        showMessageStatus,\n      }}\n      {...props}\n    />\n  );\n};\n"]}