{"version":3,"sources":["MessageSimple.tsx"],"names":["styles","StyleSheet","create","container","alignItems","flexDirection","MessageSimpleWithContext","props","alignment","channel","enableMessageGroupingByUser","groupStyles","hasReactions","message","MessageAvatar","MessageContent","MessagePinnedHeader","ReactionList","theme","messageSimple","messageContentWidth","setMessageContentWidth","isVeryLastMessage","state","messages","length","id","hasMarginBottom","includes","showReactions","pinned","justifyContent","marginBottom","marginTop","areEqual","prevProps","nextProps","prevChannel","prevGroupStyles","prevHasReactions","prevMessage","nextChannel","nextGroupStyles","nextHasReactions","nextMessage","hasReactionsEqual","repliesEqual","reply_count","groupStylesEqual","JSON","stringify","isPrevMessageTypeDeleted","type","isNextMessageTypeDeleted","messageEqual","status","text","isPrevQuotedMessageTypeDeleted","quoted_message","isNextQuotedMessageTypeDeleted","quotedMessageEqual","channelEqual","prevMessageAttachments","attachments","nextMessageAttachments","attachmentsEqual","Array","isArray","every","attachment","index","attachmentKeysEqual","image_url","og_scrape_url","thumb_url","latestReactionsEqual","latest_reactions","MemoizedMessageSimple","React","memo","MessageSimple","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n});\n\nexport type MessageSimplePropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  'alignment' | 'channel' | 'groupStyles' | 'hasReactions' | 'message'\n> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    | 'enableMessageGroupingByUser'\n    | 'MessageAvatar'\n    | 'MessageContent'\n    | 'MessagePinnedHeader'\n    | 'ReactionList'\n  >;\n\nconst MessageSimpleWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageSimplePropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    channel,\n    enableMessageGroupingByUser,\n    groupStyles,\n    hasReactions,\n    message,\n    MessageAvatar,\n    MessageContent,\n    MessagePinnedHeader,\n    ReactionList,\n  } = props;\n\n  const {\n    theme: {\n      messageSimple: { container },\n    },\n  } = useTheme();\n\n  const [messageContentWidth, setMessageContentWidth] = useState(0);\n\n  const isVeryLastMessage =\n    channel?.state.messages[channel?.state.messages.length - 1]?.id === message.id;\n\n  const hasMarginBottom = groupStyles.includes('single') || groupStyles.includes('bottom');\n\n  const showReactions = hasReactions && ReactionList;\n\n  return (\n    <>\n      {message.pinned && <MessagePinnedHeader />}\n      <View\n        style={[\n          styles.container,\n          {\n            justifyContent: alignment === 'left' ? 'flex-start' : 'flex-end',\n            marginBottom: hasMarginBottom\n              ? isVeryLastMessage && enableMessageGroupingByUser\n                ? 30\n                : 8\n              : 0,\n            marginTop: showReactions ? 2 : 0,\n          },\n          container,\n        ]}\n        testID='message-simple-wrapper'\n      >\n        {alignment === 'left' && <MessageAvatar />}\n        <MessageContent setMessageContentWidth={setMessageContentWidth} />\n        {showReactions && <ReactionList messageContentWidth={messageContentWidth} />}\n      </View>\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageSimplePropsWithContext<StreamChatGenerics>,\n  nextProps: MessageSimplePropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    channel: prevChannel,\n    groupStyles: prevGroupStyles,\n    hasReactions: prevHasReactions,\n    message: prevMessage,\n  } = prevProps;\n  const {\n    channel: nextChannel,\n    groupStyles: nextGroupStyles,\n    hasReactions: nextHasReactions,\n    message: nextMessage,\n  } = nextProps;\n\n  const hasReactionsEqual = prevHasReactions === nextHasReactions;\n  if (!hasReactionsEqual) return false;\n\n  const repliesEqual = prevMessage.reply_count === nextMessage.reply_count;\n  if (!repliesEqual) return false;\n\n  const groupStylesEqual = JSON.stringify(prevGroupStyles) === JSON.stringify(nextGroupStyles);\n  if (!groupStylesEqual) return false;\n\n  const isPrevMessageTypeDeleted = prevMessage.type === 'deleted';\n  const isNextMessageTypeDeleted = nextMessage.type === 'deleted';\n\n  const messageEqual =\n    isPrevMessageTypeDeleted === isNextMessageTypeDeleted &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text &&\n    prevMessage.pinned === nextMessage.pinned;\n  if (!messageEqual) return false;\n\n  const isPrevQuotedMessageTypeDeleted = prevMessage.quoted_message?.type === 'deleted';\n  const isNextQuotedMessageTypeDeleted = nextMessage.quoted_message?.type === 'deleted';\n\n  const quotedMessageEqual =\n    prevMessage.quoted_message?.id === nextMessage.quoted_message?.id &&\n    isPrevQuotedMessageTypeDeleted === isNextQuotedMessageTypeDeleted;\n\n  if (!quotedMessageEqual) return false;\n\n  const channelEqual = prevChannel?.state.messages.length === nextChannel?.state.messages.length;\n  if (!channelEqual) return false;\n\n  const prevMessageAttachments = prevMessage.attachments;\n  const nextMessageAttachments = nextMessage.attachments;\n  const attachmentsEqual =\n    Array.isArray(prevMessageAttachments) && Array.isArray(nextMessageAttachments)\n      ? prevMessageAttachments.length === nextMessageAttachments.length &&\n        prevMessageAttachments.every((attachment, index) => {\n          const attachmentKeysEqual =\n            attachment.image_url === nextMessageAttachments[index].image_url &&\n            attachment.og_scrape_url === nextMessageAttachments[index].og_scrape_url &&\n            attachment.thumb_url === nextMessageAttachments[index].thumb_url;\n\n          return attachmentKeysEqual;\n        })\n      : prevMessageAttachments === nextMessageAttachments;\n  if (!attachmentsEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageSimple = React.memo(\n  MessageSimpleWithContext,\n  areEqual,\n) as typeof MessageSimpleWithContext;\n\nexport type MessageSimpleProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageSimplePropsWithContext<StreamChatGenerics>>;\n\n/**\n *\n * Message UI component\n */\nexport const MessageSimple = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageSimpleProps<StreamChatGenerics>,\n) => {\n  const { alignment, channel, groupStyles, hasReactions, message } =\n    useMessageContext<StreamChatGenerics>();\n  const {\n    enableMessageGroupingByUser,\n    MessageAvatar,\n    MessageContent,\n    MessagePinnedHeader,\n    ReactionList,\n  } = useMessagesContext<StreamChatGenerics>();\n\n  return (\n    <MemoizedMessageSimple<StreamChatGenerics>\n      {...{\n        alignment,\n        channel,\n        enableMessageGroupingByUser,\n        groupStyles,\n        hasReactions,\n        message,\n        MessageAvatar,\n        MessageContent,\n        MessagePinnedHeader,\n        ReactionList,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageSimple.displayName = 'MessageSimple{messageSimple{container}}';\n"]}