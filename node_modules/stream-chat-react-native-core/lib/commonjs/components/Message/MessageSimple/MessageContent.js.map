{"version":3,"sources":["MessageContent.tsx"],"names":["styles","StyleSheet","create","containerInner","borderTopLeftRadius","borderTopRightRadius","borderWidth","overflow","leftAlignContent","justifyContent","leftAlignItems","alignItems","replyBorder","borderLeftWidth","bottom","position","replyContainer","flexDirection","paddingHorizontal","paddingTop","rightAlignContent","rightAlignItems","MessageContentWithContext","props","additionalTouchableProps","alignment","Attachment","disabled","FileAttachmentGroup","formatDate","Gallery","groupStyles","hasReactions","isMyMessage","lastGroupMessage","members","message","messageContentOrder","MessageDeleted","MessageFooter","MessageHeader","MessageReplies","MessageStatus","onLongPress","onlyEmojis","onPress","onPressIn","otherAttachments","preventPress","Reply","setMessageContentWidth","showMessageStatus","tDateTimeParser","threadList","theme","colors","accent_red","blue_alice","grey_gainsboro","grey_whisper","transparent","white","messageSimple","content","container","borderBottomLeftRadius","borderBottomRightRadius","borderRadius","borderRadiusL","borderRadiusS","errorContainer","errorIcon","errorIconContainer","wrapper","reactionList","radius","reactionSize","getDateText","formatter","created_at","parserOutput","format","onLayout","width","nativeEvent","layout","error","type","status","MessageStatusTypes","FAILED","groupStyle","toLowerCase","hasThreadReplies","reply_count","noBorder","quoted_message","length","isMessageTypeDeleted","backgroundColor","repliesCurveColor","isBorderColor","getBorderRadius","groupPosition","isBottomOrSingle","getBorderRadiusFromTheme","bordersFromTheme","key","undefined","event","emitter","borderColor","height","left","right","map","messageContentType","messageContentOrderIndex","messageContainer","maxWidth","attachment","attachmentIndex","id","actions","absoluteFill","areEqual","prevProps","nextProps","prevGoToMessage","goToMessage","prevGroupStyles","prevHasReactions","isAttachmentEqual","prevLastGroupMessage","prevMembers","prevMessage","prevMessageContentOrder","prevOnlyEmojis","prevOtherAttachments","prevT","t","prevTDateTimeParser","nextGoToMessage","nextGroupStyles","nextHasReactions","nextLastGroupMessage","nextMembers","nextMessage","nextMessageContentOrder","nextOnlyEmojis","nextOtherAttachments","nextT","nextTDateTimeParser","hasReactionsEqual","lastGroupMessageEqual","goToMessageChangedAndMatters","quoted_message_id","onlyEmojisEqual","otherAttachmentsEqual","membersEqual","Object","keys","groupStylesEqual","isPrevMessageTypeDeleted","isNextMessageTypeDeleted","messageEqual","text","pinned","isPrevQuotedMessageTypeDeleted","isNextQuotedMessageTypeDeleted","quotedMessageEqual","prevMessageAttachments","attachments","nextMessageAttachments","attachmentsEqual","Array","isArray","every","index","attachmentKeysEqual","image_url","og_scrape_url","thumb_url","latestReactionsEqual","latest_reactions","messageContentOrderEqual","tEqual","tDateTimeParserEqual","MemoizedMessageContent","React","memo","MessageContent","lastReceivedId","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LayoutChangeEvent, StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { MessageTextContainer } from './MessageTextContainer';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport {\n  isDayOrMoment,\n  TDateTimeParserInput,\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../../contexts/translationContext/TranslationContext';\n\nimport { Error } from '../../../icons';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { MessageStatusTypes, vw } from '../../../utils/utils';\n\nconst styles = StyleSheet.create({\n  containerInner: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  leftAlignContent: {\n    justifyContent: 'flex-start',\n  },\n  leftAlignItems: {\n    alignItems: 'flex-start',\n  },\n  replyBorder: {\n    borderLeftWidth: 1,\n    bottom: 0,\n    position: 'absolute',\n  },\n  replyContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 8,\n    paddingTop: 8,\n  },\n  rightAlignContent: {\n    justifyContent: 'flex-end',\n  },\n  rightAlignItems: {\n    alignItems: 'flex-end',\n  },\n});\n\nexport type MessageContentPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageContextValue<StreamChatGenerics>,\n  | 'alignment'\n  | 'disabled'\n  | 'goToMessage'\n  | 'groupStyles'\n  | 'hasReactions'\n  | 'isMyMessage'\n  | 'lastGroupMessage'\n  | 'members'\n  | 'message'\n  | 'messageContentOrder'\n  | 'onLongPress'\n  | 'onlyEmojis'\n  | 'onPress'\n  | 'onPressIn'\n  | 'otherAttachments'\n  | 'preventPress'\n  | 'showMessageStatus'\n  | 'threadList'\n> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    | 'additionalTouchableProps'\n    | 'Attachment'\n    | 'FileAttachmentGroup'\n    | 'formatDate'\n    | 'Gallery'\n    | 'isAttachmentEqual'\n    | 'MessageFooter'\n    | 'MessageHeader'\n    | 'MessageDeleted'\n    | 'MessageReplies'\n    | 'MessageStatus'\n    | 'onPressInMessage'\n    | 'Reply'\n  > &\n  Pick<TranslationContextValue, 't' | 'tDateTimeParser'> & {\n    setMessageContentWidth: React.Dispatch<React.SetStateAction<number>>;\n  };\n\n/**\n * Child of MessageSimple that displays a message's content\n */\nconst MessageContentWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageContentPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTouchableProps,\n    alignment,\n    Attachment,\n    disabled,\n    FileAttachmentGroup,\n    formatDate,\n    Gallery,\n    groupStyles,\n    hasReactions,\n    isMyMessage,\n    lastGroupMessage,\n    members,\n    message,\n    messageContentOrder,\n    MessageDeleted,\n    MessageFooter,\n    MessageHeader,\n    MessageReplies,\n    MessageStatus,\n    onLongPress,\n    onlyEmojis,\n    onPress,\n    onPressIn,\n    otherAttachments,\n    preventPress,\n    Reply,\n    setMessageContentWidth,\n    showMessageStatus,\n    tDateTimeParser,\n    threadList,\n  } = props;\n\n  const {\n    theme: {\n      colors: { accent_red, blue_alice, grey_gainsboro, grey_whisper, transparent, white },\n      messageSimple: {\n        content: {\n          container: {\n            borderBottomLeftRadius,\n            borderBottomRightRadius,\n            borderRadius,\n            borderRadiusL,\n            borderRadiusS,\n            borderTopLeftRadius,\n            borderTopRightRadius,\n            ...container\n          },\n          containerInner,\n          errorContainer,\n          errorIcon,\n          errorIconContainer,\n          replyBorder,\n          replyContainer,\n          wrapper,\n        },\n        reactionList: { radius, reactionSize },\n      },\n    },\n  } = useTheme();\n\n  const getDateText = (formatter?: (date: TDateTimeParserInput) => string) => {\n    if (!message.created_at) return '';\n\n    if (formatter) {\n      return formatter(message.created_at);\n    }\n\n    const parserOutput = tDateTimeParser(message.created_at);\n\n    if (isDayOrMoment(parserOutput)) {\n      return parserOutput.format('LT');\n    }\n    return message.created_at;\n  };\n\n  const onLayout: (event: LayoutChangeEvent) => void = ({\n    nativeEvent: {\n      layout: { width },\n    },\n  }) => {\n    setMessageContentWidth(width);\n  };\n\n  const error = message.type === 'error' || message.status === MessageStatusTypes.FAILED;\n\n  const groupStyle = `${alignment}_${groupStyles?.[0]?.toLowerCase?.()}`;\n\n  const hasThreadReplies = !!message?.reply_count;\n\n  let noBorder = onlyEmojis && !message.quoted_message;\n  if (otherAttachments.length) {\n    if (otherAttachments[0].type === 'giphy' && !isMyMessage) {\n      noBorder = false;\n    } else {\n      noBorder = true;\n    }\n  }\n\n  const isMessageTypeDeleted = message.type === 'deleted';\n\n  if (isMessageTypeDeleted) {\n    return (\n      <MessageDeleted\n        formattedDate={getDateText(formatDate)}\n        groupStyle={groupStyle}\n        noBorder={noBorder}\n        onLayout={onLayout}\n      />\n    );\n  }\n\n  let backgroundColor = grey_gainsboro;\n  if (onlyEmojis && !message.quoted_message) {\n    backgroundColor = transparent;\n  } else if (otherAttachments.length) {\n    if (otherAttachments[0].type === 'giphy') {\n      backgroundColor = message.quoted_message ? grey_gainsboro : transparent;\n    } else {\n      backgroundColor = blue_alice;\n    }\n  } else if (alignment === 'left' || error) {\n    backgroundColor = white;\n  }\n\n  const repliesCurveColor = isMyMessage && !error ? backgroundColor : grey_whisper;\n\n  const isBorderColor = isMyMessage && !error;\n\n  const getBorderRadius = () => {\n    // enum('top', 'middle', 'bottom', 'single')\n    const groupPosition = groupStyles?.[0];\n\n    const isBottomOrSingle = groupPosition === 'single' || groupPosition === 'bottom';\n    let borderBottomLeftRadius = borderRadiusL;\n    let borderBottomRightRadius = borderRadiusL;\n\n    if (isBottomOrSingle && (!hasThreadReplies || threadList)) {\n      // add relevant sharp corner\n      if (alignment === 'left') {\n        borderBottomLeftRadius = borderRadiusS;\n      } else {\n        borderBottomRightRadius = borderRadiusS;\n      }\n    }\n\n    return {\n      borderBottomLeftRadius,\n      borderBottomRightRadius,\n    };\n  };\n\n  const getBorderRadiusFromTheme = () => {\n    const bordersFromTheme: Record<string, number | undefined> = {\n      borderBottomLeftRadius,\n      borderBottomRightRadius,\n      borderRadius,\n      borderTopLeftRadius,\n      borderTopRightRadius,\n    };\n\n    // filter out undefined values\n    for (const key in bordersFromTheme) {\n      if (bordersFromTheme[key] === undefined) {\n        delete bordersFromTheme[key];\n      }\n    }\n\n    return bordersFromTheme;\n  };\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.7}\n      disabled={disabled || preventPress}\n      onLongPress={(event) => {\n        if (onLongPress) {\n          onLongPress({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      onPress={(event) => {\n        if (onPress) {\n          onPress({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      onPressIn={(event) => {\n        if (onPressIn) {\n          onPressIn({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      testID='message-content'\n      {...additionalTouchableProps}\n      /**\n       * Border radii are useful for the case of error message types only.\n       * Otherwise background is transparent, so border radius is not really visible.\n       */\n      style={[\n        alignment === 'left' ? styles.leftAlignItems : styles.rightAlignItems,\n        { paddingTop: hasReactions ? reactionSize / 2 + radius : 2 },\n        error ? errorContainer : {},\n        container,\n      ]}\n    >\n      {MessageHeader && (\n        <MessageHeader\n          alignment={alignment}\n          formattedDate={getDateText(formatDate)}\n          isDeleted={!!isMessageTypeDeleted}\n          lastGroupMessage={lastGroupMessage}\n          members={members}\n          message={message}\n          MessageStatus={MessageStatus}\n          otherAttachments={otherAttachments}\n          showMessageStatus={showMessageStatus}\n        />\n      )}\n      <View onLayout={onLayout} style={wrapper}>\n        {hasThreadReplies && !threadList && !noBorder && (\n          <View\n            style={[\n              styles.replyBorder,\n              {\n                borderColor: repliesCurveColor,\n                height: borderRadiusL,\n                left: alignment === 'left' ? 0 : undefined,\n                right: alignment === 'right' ? 0 : undefined,\n              },\n              replyBorder,\n            ]}\n          />\n        )}\n        <View\n          style={[\n            styles.containerInner,\n            {\n              backgroundColor,\n              borderColor: isBorderColor ? backgroundColor : grey_whisper,\n              ...getBorderRadius(),\n              ...getBorderRadiusFromTheme(),\n            },\n            noBorder ? { borderWidth: 0 } : {},\n            containerInner,\n          ]}\n          testID='message-content-wrapper'\n        >\n          {messageContentOrder.map((messageContentType, messageContentOrderIndex) => {\n            switch (messageContentType) {\n              case 'quoted_reply':\n                return (\n                  message.quoted_message && (\n                    <View\n                      key={`quoted_reply_${messageContentOrderIndex}`}\n                      style={[styles.replyContainer, replyContainer]}\n                    >\n                      <Reply styles={{ messageContainer: { maxWidth: vw(60) } }} />\n                    </View>\n                  )\n                );\n              case 'attachments':\n                return otherAttachments.map((attachment, attachmentIndex) => (\n                  <Attachment attachment={attachment} key={`${message.id}-${attachmentIndex}`} />\n                ));\n              case 'files':\n                return (\n                  <FileAttachmentGroup\n                    key={`file_attachment_group_${messageContentOrderIndex}`}\n                    messageId={message.id}\n                  />\n                );\n              case 'gallery':\n                return <Gallery key={`gallery_${messageContentOrderIndex}`} />;\n              case 'text':\n              default:\n                return otherAttachments.length && otherAttachments[0].actions ? null : (\n                  <MessageTextContainer<StreamChatGenerics>\n                    key={`message_text_container_${messageContentOrderIndex}`}\n                  />\n                );\n            }\n          })}\n        </View>\n        {error && (\n          <View style={StyleSheet.absoluteFill} testID='message-error'>\n            <View style={errorIconContainer}>\n              <Error pathFill={accent_red} {...errorIcon} />\n            </View>\n          </View>\n        )}\n      </View>\n      <MessageReplies noBorder={noBorder} repliesCurveColor={repliesCurveColor} />\n      <MessageFooter formattedDate={getDateText(formatDate)} isDeleted={!!isMessageTypeDeleted} />\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageContentPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageContentPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    goToMessage: prevGoToMessage,\n    groupStyles: prevGroupStyles,\n    hasReactions: prevHasReactions,\n    isAttachmentEqual,\n    lastGroupMessage: prevLastGroupMessage,\n    members: prevMembers,\n    message: prevMessage,\n    messageContentOrder: prevMessageContentOrder,\n    onlyEmojis: prevOnlyEmojis,\n    otherAttachments: prevOtherAttachments,\n    t: prevT,\n    tDateTimeParser: prevTDateTimeParser,\n  } = prevProps;\n  const {\n    goToMessage: nextGoToMessage,\n    groupStyles: nextGroupStyles,\n    hasReactions: nextHasReactions,\n    lastGroupMessage: nextLastGroupMessage,\n    members: nextMembers,\n    message: nextMessage,\n    messageContentOrder: nextMessageContentOrder,\n    onlyEmojis: nextOnlyEmojis,\n    otherAttachments: nextOtherAttachments,\n    t: nextT,\n    tDateTimeParser: nextTDateTimeParser,\n  } = nextProps;\n\n  const hasReactionsEqual = prevHasReactions === nextHasReactions;\n  if (!hasReactionsEqual) return false;\n\n  const lastGroupMessageEqual = prevLastGroupMessage === nextLastGroupMessage;\n  if (!lastGroupMessageEqual) return false;\n\n  const goToMessageChangedAndMatters =\n    nextMessage.quoted_message_id && prevGoToMessage !== nextGoToMessage;\n  if (goToMessageChangedAndMatters) return false;\n\n  const onlyEmojisEqual = prevOnlyEmojis === nextOnlyEmojis;\n  if (!onlyEmojisEqual) return false;\n\n  const otherAttachmentsEqual =\n    prevOtherAttachments.length === nextOtherAttachments.length &&\n    prevOtherAttachments?.[0]?.actions?.length === nextOtherAttachments?.[0]?.actions?.length;\n  if (!otherAttachmentsEqual) return false;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const groupStylesEqual =\n    prevGroupStyles.length === nextGroupStyles.length &&\n    prevGroupStyles?.[0] === nextGroupStyles?.[0];\n  if (!groupStylesEqual) return false;\n\n  const isPrevMessageTypeDeleted = prevMessage.type === 'deleted';\n  const isNextMessageTypeDeleted = nextMessage.type === 'deleted';\n\n  const messageEqual =\n    isPrevMessageTypeDeleted === isNextMessageTypeDeleted &&\n    prevMessage.reply_count === nextMessage.reply_count &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text &&\n    prevMessage.pinned === nextMessage.pinned;\n  if (!messageEqual) return false;\n\n  const isPrevQuotedMessageTypeDeleted = prevMessage.quoted_message?.type === 'deleted';\n  const isNextQuotedMessageTypeDeleted = nextMessage.quoted_message?.type === 'deleted';\n\n  const quotedMessageEqual =\n    prevMessage.quoted_message?.id === nextMessage.quoted_message?.id &&\n    isPrevQuotedMessageTypeDeleted === isNextQuotedMessageTypeDeleted;\n  if (!quotedMessageEqual) return false;\n\n  const prevMessageAttachments = prevMessage.attachments;\n  const nextMessageAttachments = nextMessage.attachments;\n  const attachmentsEqual =\n    Array.isArray(prevMessageAttachments) && Array.isArray(nextMessageAttachments)\n      ? prevMessageAttachments.length === nextMessageAttachments.length &&\n        prevMessageAttachments.every((attachment, index) => {\n          const attachmentKeysEqual =\n            attachment.image_url === nextMessageAttachments[index].image_url &&\n            attachment.og_scrape_url === nextMessageAttachments[index].og_scrape_url &&\n            attachment.thumb_url === nextMessageAttachments[index].thumb_url;\n\n          if (isAttachmentEqual)\n            return (\n              attachmentKeysEqual && !!isAttachmentEqual(attachment, nextMessageAttachments[index])\n            );\n\n          return attachmentKeysEqual;\n        })\n      : prevMessageAttachments === nextMessageAttachments;\n  if (!attachmentsEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  const messageContentOrderEqual =\n    prevMessageContentOrder.length === nextMessageContentOrder.length &&\n    prevMessageContentOrder.every(\n      (messageContentType, index) => messageContentType === nextMessageContentOrder[index],\n    );\n  if (!messageContentOrderEqual) return false;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const tDateTimeParserEqual = prevTDateTimeParser === nextTDateTimeParser;\n  if (!tDateTimeParserEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageContent = React.memo(\n  MessageContentWithContext,\n  areEqual,\n) as typeof MessageContentWithContext;\n\nexport type MessageContentProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessageContentPropsWithContext<StreamChatGenerics>, 'setMessageContentWidth'>> &\n  Pick<MessageContentPropsWithContext<StreamChatGenerics>, 'setMessageContentWidth'>;\n\n/**\n * Child of MessageSimple that displays a message's content\n */\nexport const MessageContent = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageContentProps<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    disabled,\n    goToMessage,\n    groupStyles,\n    hasReactions,\n    isMyMessage,\n    lastGroupMessage,\n    lastReceivedId,\n    members,\n    message,\n    messageContentOrder,\n    onLongPress,\n    onlyEmojis,\n    onPress,\n    onPressIn,\n    otherAttachments,\n    preventPress,\n    showMessageStatus,\n    threadList,\n  } = useMessageContext<StreamChatGenerics>();\n  const {\n    additionalTouchableProps,\n    Attachment,\n    FileAttachmentGroup,\n    formatDate,\n    Gallery,\n    isAttachmentEqual,\n    MessageDeleted,\n    MessageFooter,\n    MessageHeader,\n    MessageReplies,\n    MessageStatus,\n    Reply,\n  } = useMessagesContext<StreamChatGenerics>();\n  const { t, tDateTimeParser } = useTranslationContext();\n\n  return (\n    <MemoizedMessageContent<StreamChatGenerics>\n      {...{\n        additionalTouchableProps,\n        alignment,\n        Attachment,\n        disabled,\n        FileAttachmentGroup,\n        formatDate,\n        Gallery,\n        goToMessage,\n        groupStyles,\n        hasReactions,\n        isAttachmentEqual,\n        isMyMessage,\n        lastGroupMessage,\n        lastReceivedId,\n        members,\n        message,\n        messageContentOrder,\n        MessageDeleted,\n        MessageFooter,\n        MessageHeader,\n        MessageReplies,\n        MessageStatus,\n        onLongPress,\n        onlyEmojis,\n        onPress,\n        onPressIn,\n        otherAttachments,\n        preventPress,\n        Reply,\n        showMessageStatus,\n        t,\n        tDateTimeParser,\n        threadList,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageContent.displayName = 'MessageContent{messageSimple{content}}';\n"]}