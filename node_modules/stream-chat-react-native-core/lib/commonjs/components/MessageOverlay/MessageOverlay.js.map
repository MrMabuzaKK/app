{"version":3,"sources":["MessageOverlay.tsx"],"names":["styles","StyleSheet","create","alignEnd","alignItems","alignStart","center","flexGrow","justifyContent","containerInner","borderTopLeftRadius","borderTopRightRadius","borderWidth","overflow","flex","overlayPadding","padding","replyContainer","flexDirection","paddingHorizontal","paddingTop","row","scrollView","Platform","OS","screenHeight","halfScreenHeight","DefaultMessageTextNumberOfLines","MessageOverlayWithContext","props","alignment","ownCapabilities","clientId","files","groupStyles","handleReaction","images","message","messageActions","MessageActionList","DefaultMessageActionList","MessageActionListItem","messageContext","messageReactionTitle","messageTextNumberOfLines","messagesContext","onlyEmojis","otherAttachments","overlay","overlayOpacity","OverlayReactionList","OverlayReactionListDefault","OverlayReactions","DefaultOverlayReactions","OverlayReactionsAvatar","OverlayReactionsAvatarDefault","setOverlay","threadList","videos","isMyMessage","messageReactions","error","isThreadMessage","messageActionProps","theme","myMessageTheme","wrapMessageInTheme","user","id","JSON","stringify","myMessageThemeString","setMyMessageThemeString","modifiedTheme","style","colors","blue_alice","grey_gainsboro","grey_whisper","transparent","white_smoke","messageSimple","content","container","borderRadiusL","borderRadiusS","containerStyle","messageHeight","messageLayout","x","y","messageWidth","offsetY","translateY","scale","showScreen","fadeScreen","value","damping","mass","restDisplacementThreshold","restSpeedThreshold","stiffness","velocity","Keyboard","dismiss","onPan","onActive","evt","translationY","Extrapolate","CLAMP","onFinish","finalYPosition","velocityY","duration","easing","Easing","out","ease","onStart","panStyle","transform","showScreenStyle","translateX","groupStyle","toLowerCase","hasThreadReplies","reply_count","Attachment","FileAttachmentGroup","Gallery","MessageAvatar","Reply","absoluteFillObject","state","nativeEvent","State","END","sendReaction","own_reactions","map","reaction","type","layout","layoutHeight","height","layoutWidth","width","showAvatar","backgroundColor","quoted_message","length","borderBottomLeftRadius","borderBottomRightRadius","borderColor","messageContentOrder","messageContentType","messageContentOrderIndex","messageContainer","maxWidth","attachment","attachmentIndex","actions","latest_reactions","image","name","user_id","supportedReactions","areEqual","prevProps","nextProps","prevAlignment","prevMessage","prevMessageReactionTitle","nextAlignment","nextMessage","nextMessageReactionTitle","alignmentEqual","messageReactionTitleEqual","latestReactionsEqual","Array","isArray","every","index","MemoizedMessageOverlay","React","memo","MessageOverlay","data","componentProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Keyboard, Platform, SafeAreaView, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  State,\n  TapGestureHandler,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  cancelAnimation,\n  Easing,\n  Extrapolate,\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withDecay,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { MessageActionList as DefaultMessageActionList } from './MessageActionList';\nimport { OverlayReactionList as OverlayReactionListDefault } from './OverlayReactionList';\nimport { OverlayReactionsAvatar as OverlayReactionsAvatarDefault } from './OverlayReactionsAvatar';\n\nimport { MessageProvider } from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageOverlayContextValue,\n  MessageOverlayData,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\n\nimport { MessagesProvider } from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  OverlayProviderProps,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { mergeThemes, ThemeProvider, useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { vh, vw } from '../../utils/utils';\nimport { MessageTextContainer } from '../Message/MessageSimple/MessageTextContainer';\nimport {\n  OverlayReactions as DefaultOverlayReactions,\n  Reaction,\n} from '../MessageOverlay/OverlayReactions';\nimport type { ReplyProps } from '../Reply/Reply';\n\nconst styles = StyleSheet.create({\n  alignEnd: { alignItems: 'flex-end' },\n  alignStart: { alignItems: 'flex-start' },\n  center: {\n    flexGrow: 1,\n    justifyContent: 'center',\n  },\n  containerInner: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  flex: {\n    flex: 1,\n  },\n  overlayPadding: {\n    padding: 8,\n  },\n  replyContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 8,\n    paddingTop: 8,\n  },\n  row: { flexDirection: 'row' },\n  scrollView: { overflow: Platform.OS === 'ios' ? 'visible' : 'scroll' },\n});\n\nconst screenHeight = vh(100);\nconst halfScreenHeight = vh(50);\nconst DefaultMessageTextNumberOfLines = 5;\n\nexport type MessageOverlayPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageOverlayContextValue<StreamChatGenerics>,\n  | 'MessageActionList'\n  | 'MessageActionListItem'\n  | 'OverlayReactionList'\n  | 'OverlayReactions'\n  | 'OverlayReactionsAvatar'\n> &\n  Omit<MessageOverlayData<StreamChatGenerics>, 'supportedReactions'> &\n  Pick<OverlayContextValue, 'overlay' | 'setOverlay'> &\n  Pick<\n    OverlayProviderProps<StreamChatGenerics>,\n    | 'error'\n    | 'isMyMessage'\n    | 'isThreadMessage'\n    | 'message'\n    | 'messageReactions'\n    | 'messageTextNumberOfLines'\n  > & {\n    overlayOpacity: Animated.SharedValue<number>;\n    showScreen?: Animated.SharedValue<number>;\n  };\n\nconst MessageOverlayWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageOverlayPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    ownCapabilities,\n    clientId,\n    files,\n    groupStyles,\n    handleReaction,\n    images,\n    message,\n    messageActions,\n    MessageActionList = DefaultMessageActionList,\n    MessageActionListItem,\n    messageContext,\n    messageReactionTitle,\n    messageTextNumberOfLines = DefaultMessageTextNumberOfLines,\n    messagesContext,\n    onlyEmojis,\n    otherAttachments,\n    overlay,\n    overlayOpacity,\n    OverlayReactionList = OverlayReactionListDefault,\n    OverlayReactions = DefaultOverlayReactions,\n    OverlayReactionsAvatar = OverlayReactionsAvatarDefault,\n    setOverlay,\n    threadList,\n    videos,\n    isMyMessage,\n    messageReactions,\n    error,\n    isThreadMessage,\n  } = props;\n\n  const messageActionProps = {\n    error,\n    isMyMessage,\n    isThreadMessage,\n    message,\n    messageReactions,\n  };\n\n  const { theme } = useTheme();\n\n  const myMessageTheme = messagesContext?.myMessageTheme;\n  const wrapMessageInTheme = clientId === message?.user?.id && !!myMessageTheme;\n\n  const [myMessageThemeString, setMyMessageThemeString] = useState(JSON.stringify(myMessageTheme));\n\n  useEffect(() => {\n    if (myMessageTheme) {\n      setMyMessageThemeString(JSON.stringify(myMessageTheme));\n    }\n  }, [myMessageTheme]);\n\n  const modifiedTheme = useMemo(\n    () => mergeThemes({ style: myMessageTheme, theme }),\n    [myMessageThemeString, theme],\n  );\n\n  const {\n    colors: { blue_alice, grey_gainsboro, grey_whisper, transparent, white_smoke },\n    messageSimple: {\n      content: {\n        container: { borderRadiusL, borderRadiusS },\n        containerInner,\n        replyContainer,\n      },\n    },\n    overlay: { container: containerStyle, padding: overlayPadding },\n  } = wrapMessageInTheme ? modifiedTheme : theme;\n\n  const messageHeight = useSharedValue(0);\n  const messageLayout = useSharedValue({ x: 0, y: 0 });\n  const messageWidth = useSharedValue(0);\n\n  const offsetY = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const scale = useSharedValue(1);\n\n  const showScreen = useSharedValue(0);\n  const fadeScreen = () => {\n    'worklet';\n\n    offsetY.value = 0;\n    translateY.value = 0;\n    scale.value = 1;\n    showScreen.value = withSpring(1, {\n      damping: 600,\n      mass: 0.5,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01,\n      stiffness: 200,\n      velocity: 32,\n    });\n  };\n\n  useEffect(() => {\n    Keyboard.dismiss();\n    fadeScreen();\n  }, []);\n\n  const onPan = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n    onActive: (evt) => {\n      translateY.value = offsetY.value + evt.translationY;\n      overlayOpacity.value = interpolate(\n        translateY.value,\n        [0, halfScreenHeight],\n        [1, 0.75],\n        Extrapolate.CLAMP,\n      );\n      scale.value = interpolate(\n        translateY.value,\n        [0, halfScreenHeight],\n        [1, 0.85],\n        Extrapolate.CLAMP,\n      );\n    },\n    onFinish: (evt) => {\n      const finalYPosition = evt.translationY + evt.velocityY * 0.1;\n\n      if (finalYPosition > halfScreenHeight && translateY.value > 0) {\n        cancelAnimation(translateY);\n        overlayOpacity.value = withTiming(\n          0,\n          {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          },\n          () => {\n            runOnJS(setOverlay)('none');\n          },\n        );\n        translateY.value =\n          evt.velocityY > 1000\n            ? withDecay({\n                velocity: evt.velocityY,\n              })\n            : withTiming(screenHeight, {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              });\n      } else {\n        translateY.value = withTiming(0);\n        scale.value = withTiming(1);\n        overlayOpacity.value = withTiming(1);\n      }\n    },\n    onStart: () => {\n      cancelAnimation(translateY);\n      offsetY.value = translateY.value;\n    },\n  });\n\n  const panStyle = useAnimatedStyle<ViewStyle>(() => ({\n    transform: [\n      {\n        translateY: translateY.value,\n      },\n      {\n        scale: scale.value,\n      },\n    ],\n  }));\n\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [messageHeight.value / 2, 0]),\n        },\n        {\n          translateX: interpolate(\n            showScreen.value,\n            [0, 1],\n            [alignment === 'left' ? -messageWidth.value / 2 : messageWidth.value / 2, 0],\n          ),\n        },\n        {\n          scale: showScreen.value,\n        },\n      ],\n    }),\n    [alignment],\n  );\n\n  const groupStyle = `${alignment}_${(groupStyles?.[0] || 'bottom').toLowerCase()}`;\n\n  const hasThreadReplies = !!message?.reply_count;\n\n  const { Attachment, FileAttachmentGroup, Gallery, MessageAvatar, Reply } = messagesContext || {};\n\n  return (\n    <MessagesProvider value={messagesContext}>\n      <MessageProvider value={messageContext}>\n        <ThemeProvider mergedStyle={wrapMessageInTheme ? modifiedTheme : theme}>\n          <Animated.View\n            pointerEvents={'auto'}\n            style={[StyleSheet.absoluteFillObject, containerStyle]}\n          >\n            <PanGestureHandler\n              enabled={overlay === 'message'}\n              maxPointers={1}\n              minDist={10}\n              onGestureEvent={onPan}\n            >\n              <Animated.View style={[StyleSheet.absoluteFillObject]}>\n                <SafeAreaView style={styles.flex}>\n                  <TapGestureHandler\n                    maxDist={32}\n                    onHandlerStateChange={({ nativeEvent: { state } }) => {\n                      if (state === State.END) {\n                        setOverlay('none');\n                      }\n                    }}\n                  >\n                    <Animated.View style={[styles.flex, panStyle]}>\n                      {message && (\n                        <View\n                          style={[\n                            styles.center,\n                            styles.overlayPadding,\n                            { padding: overlayPadding },\n                            alignment === 'left' ? styles.alignStart : styles.alignEnd,\n                          ]}\n                        >\n                          {handleReaction && ownCapabilities?.sendReaction ? (\n                            <OverlayReactionList\n                              messageLayout={messageLayout}\n                              ownReactionTypes={\n                                message?.own_reactions?.map((reaction) => reaction.type) || []\n                              }\n                              showScreen={showScreen}\n                            />\n                          ) : null}\n                          <Animated.View\n                            onLayout={({\n                              nativeEvent: {\n                                layout: { height: layoutHeight, width: layoutWidth, x, y },\n                              },\n                            }) => {\n                              messageLayout.value = {\n                                x: alignment === 'left' ? x + layoutWidth : x,\n                                y,\n                              };\n                              messageWidth.value = layoutWidth;\n                              messageHeight.value = layoutHeight;\n                            }}\n                            style={[styles.alignEnd, styles.row, showScreenStyle]}\n                          >\n                            {alignment === 'left' && MessageAvatar && (\n                              <MessageAvatar {...{ alignment, message, showAvatar: true }} />\n                            )}\n                            <View\n                              style={[\n                                styles.containerInner,\n                                {\n                                  backgroundColor:\n                                    onlyEmojis && !message.quoted_message\n                                      ? transparent\n                                      : otherAttachments?.length\n                                      ? otherAttachments[0].type === 'giphy'\n                                        ? !message.quoted_message\n                                          ? transparent\n                                          : grey_gainsboro\n                                        : blue_alice\n                                      : alignment === 'left'\n                                      ? white_smoke\n                                      : grey_gainsboro,\n                                  borderBottomLeftRadius:\n                                    (groupStyle === 'left_bottom' ||\n                                      groupStyle === 'left_single') &&\n                                    (!hasThreadReplies || threadList)\n                                      ? borderRadiusS\n                                      : borderRadiusL,\n                                  borderBottomRightRadius:\n                                    (groupStyle === 'right_bottom' ||\n                                      groupStyle === 'right_single') &&\n                                    (!hasThreadReplies || threadList)\n                                      ? borderRadiusS\n                                      : borderRadiusL,\n                                  borderColor: grey_whisper,\n                                },\n                                (onlyEmojis && !message.quoted_message) || otherAttachments?.length\n                                  ? { borderWidth: 0 }\n                                  : {},\n                                containerInner,\n                              ]}\n                            >\n                              {messagesContext?.messageContentOrder?.map(\n                                (messageContentType, messageContentOrderIndex) => {\n                                  switch (messageContentType) {\n                                    case 'quoted_reply':\n                                      return (\n                                        message.quoted_message &&\n                                        Reply && (\n                                          <View\n                                            key={`quoted_reply_${messageContentOrderIndex}`}\n                                            style={[styles.replyContainer, replyContainer]}\n                                          >\n                                            <Reply\n                                              quotedMessage={\n                                                message.quoted_message as ReplyProps<StreamChatGenerics>['quotedMessage']\n                                              }\n                                              styles={{\n                                                messageContainer: {\n                                                  maxWidth: vw(60),\n                                                },\n                                              }}\n                                            />\n                                          </View>\n                                        )\n                                      );\n                                    case 'attachments':\n                                      return otherAttachments?.map(\n                                        (attachment, attachmentIndex) =>\n                                          Attachment && (\n                                            <Attachment\n                                              attachment={attachment}\n                                              key={`${message.id}-${attachmentIndex}`}\n                                            />\n                                          ),\n                                      );\n                                    case 'files':\n                                      return (\n                                        FileAttachmentGroup && (\n                                          <FileAttachmentGroup\n                                            files={files}\n                                            key={`file_attachment_group_${messageContentOrderIndex}`}\n                                            messageId={message.id}\n                                          />\n                                        )\n                                      );\n                                    case 'gallery':\n                                      return (\n                                        Gallery && (\n                                          <Gallery\n                                            alignment={alignment}\n                                            groupStyles={groupStyles}\n                                            hasThreadReplies={!!message?.reply_count}\n                                            images={images}\n                                            key={`gallery_${messageContentOrderIndex}`}\n                                            message={message}\n                                            threadList={threadList}\n                                            videos={videos}\n                                          />\n                                        )\n                                      );\n                                    case 'text':\n                                    default:\n                                      return otherAttachments?.length &&\n                                        otherAttachments[0].actions ? null : (\n                                        <MessageTextContainer<StreamChatGenerics>\n                                          key={`message_text_container_${messageContentOrderIndex}`}\n                                          message={message}\n                                          messageOverlay\n                                          messageTextNumberOfLines={messageTextNumberOfLines}\n                                          onlyEmojis={onlyEmojis}\n                                        />\n                                      );\n                                  }\n                                },\n                              )}\n                            </View>\n                          </Animated.View>\n                          {messageActions && (\n                            <MessageActionList\n                              MessageActionListItem={MessageActionListItem}\n                              showScreen={showScreen}\n                              {...messageActionProps}\n                              message={message}\n                            />\n                          )}\n                          {!!messageReactionTitle &&\n                          message.latest_reactions &&\n                          message.latest_reactions.length > 0 ? (\n                            <OverlayReactions\n                              alignment={alignment}\n                              OverlayReactionsAvatar={OverlayReactionsAvatar}\n                              reactions={\n                                message.latest_reactions.map((reaction) => ({\n                                  alignment:\n                                    clientId && clientId === reaction.user?.id ? 'right' : 'left',\n                                  id: reaction?.user?.id || '',\n                                  image: reaction?.user?.image,\n                                  name: reaction?.user?.name || reaction.user_id || '',\n                                  type: reaction.type,\n                                })) as Reaction[]\n                              }\n                              showScreen={showScreen}\n                              supportedReactions={messagesContext?.supportedReactions}\n                              title={messageReactionTitle}\n                            />\n                          ) : null}\n                        </View>\n                      )}\n                    </Animated.View>\n                  </TapGestureHandler>\n                </SafeAreaView>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </ThemeProvider>\n      </MessageProvider>\n    </MessagesProvider>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageOverlayPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageOverlayPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment: prevAlignment,\n    message: prevMessage,\n    messageReactionTitle: prevMessageReactionTitle,\n  } = prevProps;\n  const {\n    alignment: nextAlignment,\n    message: nextMessage,\n    messageReactionTitle: nextMessageReactionTitle,\n  } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const messageReactionTitleEqual = prevMessageReactionTitle === nextMessageReactionTitle;\n  if (!messageReactionTitleEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage?.latest_reactions) && Array.isArray(nextMessage?.latest_reactions)\n      ? prevMessage?.latest_reactions.length === nextMessage?.latest_reactions.length &&\n        prevMessage?.latest_reactions.every(\n          ({ type }, index) => type === nextMessage?.latest_reactions?.[index].type,\n        )\n      : prevMessage?.latest_reactions === nextMessage?.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageOverlay = React.memo(\n  MessageOverlayWithContext,\n  areEqual,\n) as typeof MessageOverlayWithContext;\n\nexport type MessageOverlayProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessageOverlayPropsWithContext<StreamChatGenerics>, 'overlayOpacity'>> &\n  Pick<MessageOverlayPropsWithContext<StreamChatGenerics>, 'overlayOpacity'> &\n  Pick<\n    MessageOverlayPropsWithContext<StreamChatGenerics>,\n    'isMyMessage' | 'error' | 'isThreadMessage' | 'message' | 'messageReactions'\n  >;\n\n/**\n * MessageOverlay - A high level component which implements all the logic required for a message overlay\n */\nexport const MessageOverlay = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageOverlayProps<StreamChatGenerics>,\n) => {\n  const {\n    data,\n    MessageActionList,\n    MessageActionListItem,\n    OverlayReactionList,\n    OverlayReactions,\n    OverlayReactionsAvatar,\n  } = useMessageOverlayContext<StreamChatGenerics>();\n  const { overlay, setOverlay } = useOverlayContext();\n\n  const componentProps = {\n    MessageActionList: props.MessageActionList || MessageActionList,\n    MessageActionListItem: props.MessageActionListItem || MessageActionListItem,\n    OverlayReactionList:\n      props.OverlayReactionList || OverlayReactionList || data?.OverlayReactionList,\n    OverlayReactions: props.OverlayReactions || OverlayReactions,\n    OverlayReactionsAvatar: props.OverlayReactionsAvatar || OverlayReactionsAvatar,\n  };\n\n  return (\n    <MemoizedMessageOverlay\n      {...{\n        overlay,\n        setOverlay,\n      }}\n      {...componentProps}\n      {...(data || {})}\n      {...props}\n    />\n  );\n};\n"]}