{"version":3,"sources":["AttachmentPickerContext.tsx"],"names":["AttachmentPickerContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","AttachmentPickerProvider","children","value","bottomInsetValue","bottomInset","topInsetValue","topInset","setBottomInset","maxNumberOfFiles","setMaxNumberOfFiles","selectedImages","setSelectedImages","selectedFiles","setSelectedFiles","selectedPicker","setSelectedPicker","setTopInset","combinedValue","useAttachmentPickerContext","contextValue","Error","withAttachmentPickerContext","Component","WithAttachmentPickerContextComponent","props","attachmentPickerContext","displayName"],"mappings":"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","sourcesContent":["import React, { PropsWithChildren, useContext, useEffect, useState } from 'react';\n\nimport type { Asset, DefaultStreamChatGenerics, File } from '../../types/types';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type AttachmentPickerIconProps = {\n  numberOfImageUploads: number;\n  selectedPicker?: 'images';\n};\n\nexport type AttachmentPickerContextValue = {\n  /**\n   * `bottomInset` determine the height of the `AttachmentPicker` and the underlying shift to the `MessageList` when it is opened.\n   * This can also be set via the `setBottomInset` function provided by the `useAttachmentPickerContext` hook.\n   *\n   * Please check [OverlayProvider](https://github.com/GetStream/stream-chat-react-native/wiki/Cookbook-v3.0#overlayprovider) section in Cookbook\n   * for more details.\n   */\n  bottomInset: number;\n  /**\n   * Custom UI component for [camera selector icon](https://github.com/GetStream/stream-chat-react-native/blob/main/screenshots/docs/1.png)\n   *\n   * **Default: ** [CameraSelectorIcon](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/AttachmentPicker/components/CameraSelectorIcon.tsx)\n   */\n  CameraSelectorIcon: React.ComponentType<AttachmentPickerIconProps>;\n  closePicker: () => void;\n  /**\n   * Custom UI component for [file selector icon](https://github.com/GetStream/stream-chat-react-native/blob/main/screenshots/docs/1.png)\n   *\n   * **Default: ** [FileSelectorIcon](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/AttachmentPicker/components/FileSelectorIcon.tsx)\n   */\n  FileSelectorIcon: React.ComponentType<AttachmentPickerIconProps>;\n  /**\n   * Custom UI component for [image selector icon](https://github.com/GetStream/stream-chat-react-native/blob/main/screenshots/docs/1.png)\n   *\n   * **Default: ** [ImageSelectorIcon](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/AttachmentPicker/components/ImageSelectorIcon.tsx)\n   */\n  ImageSelectorIcon: React.ComponentType<AttachmentPickerIconProps>;\n  /**\n   * Limit for maximum files that can be attached per message.\n   */\n  maxNumberOfFiles: number;\n  openPicker: () => void;\n  selectedFiles: File[];\n  selectedImages: Asset[];\n  setBottomInset: React.Dispatch<React.SetStateAction<number>>;\n  setMaxNumberOfFiles: React.Dispatch<React.SetStateAction<number>>;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  setSelectedImages: React.Dispatch<React.SetStateAction<Asset[]>>;\n  setSelectedPicker: React.Dispatch<React.SetStateAction<'images' | undefined>>;\n  setTopInset: React.Dispatch<React.SetStateAction<number>>;\n  topInset: number;\n  attachmentPickerBottomSheetHeight?: number;\n  attachmentSelectionBarHeight?: number;\n  selectedPicker?: 'images';\n};\n\nexport const AttachmentPickerContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as AttachmentPickerContextValue,\n);\n\nexport const AttachmentPickerProvider = ({\n  children,\n  value,\n}: PropsWithChildren<{\n  value?: Pick<\n    AttachmentPickerContextValue,\n    | 'attachmentSelectionBarHeight'\n    | 'attachmentPickerBottomSheetHeight'\n    | 'CameraSelectorIcon'\n    | 'closePicker'\n    | 'FileSelectorIcon'\n    | 'ImageSelectorIcon'\n    | 'openPicker'\n  > &\n    Partial<Pick<AttachmentPickerContextValue, 'bottomInset' | 'topInset'>>;\n}>) => {\n  const bottomInsetValue = value?.bottomInset;\n  const topInsetValue = value?.topInset;\n\n  const [bottomInset, setBottomInset] = useState<number>(bottomInsetValue ?? 0);\n  const [maxNumberOfFiles, setMaxNumberOfFiles] = useState(10);\n  const [selectedImages, setSelectedImages] = useState<Asset[]>([]);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [selectedPicker, setSelectedPicker] = useState<'images'>();\n  const [topInset, setTopInset] = useState<number>(value?.topInset ?? 0);\n\n  useEffect(() => {\n    setBottomInset(bottomInsetValue ?? 0);\n  }, [bottomInsetValue]);\n\n  useEffect(() => {\n    setTopInset(topInsetValue ?? 0);\n  }, [topInsetValue]);\n\n  const combinedValue = {\n    maxNumberOfFiles,\n    selectedFiles,\n    selectedImages,\n    selectedPicker,\n    setBottomInset,\n    setMaxNumberOfFiles,\n    setSelectedFiles,\n    setSelectedImages,\n    setSelectedPicker,\n    setTopInset,\n    ...value,\n    bottomInset,\n    topInset,\n  };\n\n  return (\n    <AttachmentPickerContext.Provider\n      value={combinedValue as unknown as AttachmentPickerContextValue}\n    >\n      {children}\n    </AttachmentPickerContext.Provider>\n  );\n};\n\nexport const useAttachmentPickerContext = () => {\n  const contextValue = useContext(\n    AttachmentPickerContext,\n  ) as unknown as AttachmentPickerContextValue;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useAttachmentPickerContext hook was called outside the AttachmentPickerContext provider. Make sure you have configured OverlayProvider component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#overlay-provider`,\n    );\n  }\n\n  return contextValue;\n};\n\nexport const withAttachmentPickerContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<StreamChatGenerics>,\n): React.FC<Omit<StreamChatGenerics, keyof AttachmentPickerContextValue>> => {\n  const WithAttachmentPickerContextComponent = (\n    props: Omit<StreamChatGenerics, keyof AttachmentPickerContextValue>,\n  ) => {\n    const attachmentPickerContext = useAttachmentPickerContext();\n\n    return <Component {...(props as StreamChatGenerics)} {...attachmentPickerContext} />;\n  };\n  WithAttachmentPickerContextComponent.displayName = `WithAttachmentPickerContext${getDisplayName(\n    Component as React.ComponentType,\n  )}`;\n  return WithAttachmentPickerContextComponent;\n};\n"]}