{"version":3,"sources":["queryMembers.js"],"names":["queryMembersApi","members","result","ONE_CHANNEL_MEMBER_MOCK","okey","banned","channel_role","created_at","role","shadow_banned","updated_at","user","id","name","user_id","GROUP_CHANNEL_MEMBERS_MOCK","ben","nick","qatest1","thierry","ONE_MEMBER_WITH_EMPTY_USER_MOCK"],"mappings":"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","sourcesContent":["import { mockedApiResponse } from './utils';\n\n/**\n * Returns the api response for queryMembers api\n *\n * api - /query_members\n *\n * @param {*} members Array of User objects.\n */\nexport const queryMembersApi = (members = []) => {\n  const result = {\n    members,\n  };\n\n  return mockedApiResponse(result, 'get');\n};\n\nexport const ONE_CHANNEL_MEMBER_MOCK = {\n  okey: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'okechukwu nwagba martin',\n      name: 'okechukwu nwagba martin',\n    },\n    user_id: 'okechukwu nwagba martin',\n  },\n};\n\nexport const GROUP_CHANNEL_MEMBERS_MOCK = {\n  ben: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'ben',\n      name: 'ben',\n    },\n    user_id: 'ben',\n  },\n  nick: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'nick',\n      name: 'nick',\n    },\n    user_id: 'nick',\n  },\n  okey: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'okechukwu nwagba',\n      name: 'okechukwu nwagba',\n    },\n    user_id: 'okechukwu nwagba',\n  },\n  qatest1: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-28T09:08:43.274508Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'qatest1',\n      name: 'qatest1',\n    },\n    user_id: 'qatest1',\n  },\n\n  thierry: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {\n      id: 'thierry',\n      name: 'thierry',\n    },\n    user_id: 'thierry',\n  },\n};\n\nexport const ONE_MEMBER_WITH_EMPTY_USER_MOCK = {\n  okey: {\n    banned: false,\n    channel_role: 'channel_member',\n    created_at: '2021-01-27T11:54:34.173125Z',\n    role: 'member',\n    shadow_banned: false,\n    updated_at: '2021-02-12T12:12:35.862282Z',\n    user: {},\n    user_id: 'okechukwu nwagba martin',\n  },\n};\n"]}