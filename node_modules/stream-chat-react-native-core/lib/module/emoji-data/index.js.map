{"version":3,"sources":["index.js"],"names":["emojiNames","require","emojis","emojiLib","reduce","acc","cur","name","names","skin_variations","Object","values","map","skin","String","fromCodePoint","apply","unicode","split","sort_order","emojiArray","Set","sort","a","b","module","exports"],"mappings":";;;;;;AACA,IAAMA,UAAU,GAAGC,OAAO,mBAA1B;;AACA,IAAMC,MAAM,GAAGD,OAAO,eAAtB;;AAEA,IAAME,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CD,EAAAA,GAAG,CAACC,GAAG,CAACC,IAAL,CAAH;AACEA,IAAAA,IAAI,EAAED,GAAG,CAACC,IADZ;AAEEC,IAAAA,KAAK,EAAEF,GAAG,CAACE;AAFb,KAGMF,GAAG,CAACG,eAAJ,GACA;AACEA,IAAAA,eAAe,EAAEC,MAAM,CAACC,MAAP,CAAcL,GAAG,CAACG,eAAlB,EAAmCG,GAAnC,CAAuC,UAACC,IAAD;AAAA,aACtDC,MAAM,CAACC,aAAP,CAAqBC,KAArB,CACE,IADF,EAEEH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,GAAnB,EAAwBN,GAAxB,CAA4B,UAACK,OAAD;AAAA,sBAAkBA,OAAlB;AAAA,OAA5B,CAFF,CADsD;AAAA,KAAvC;AADnB,GADA,GASA,EAZN;AAaEE,IAAAA,UAAU,EAAEb,GAAG,CAACa,UAblB;AAcEF,IAAAA,OAAO,EAAEH,MAAM,CAACC,aAAP,CAAqBC,KAArB,CACP,IADO,EAEPV,GAAG,CAACW,OAAJ,CAAYC,KAAZ,CAAkB,GAAlB,EAAuBN,GAAvB,CAA2B,UAACK,OAAD;AAAA,oBAAkBA,OAAlB;AAAA,KAA3B,CAFO;AAdX;AAmBA,SAAOZ,GAAP;AACD,CArBgB,EAqBd,EArBc,CAAjB;AAuBA,IAAMe,UAAU,GAAGpB,UAAU,CAC1BY,GADgB,CACZ;AAAA;;AAAA,MAAGL,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SAAsB;AACzBD,IAAAA,IAAI,EAAJA,IADyB;AAEzBC,IAAAA,KAAK,EAAE,kBAAAL,QAAQ,CAACI,IAAD,CAAR,4BAAgBC,KAAhB,uCAA4B,IAAIa,GAAJ,+CAAYlB,QAAQ,CAACI,IAAD,CAAR,CAAeC,KAA3B,uCAAqCA,KAArC,GAA5B,IAA4EA;AAF1D,GAAtB;AAAA,CADY,EAKhBc,IALgB,CAKX,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAWD,CAAC,CAAChB,IAAF,GAASiB,CAAC,CAACjB,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAlC;AAAA,CALW,CAAnB;AAOAkB,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,UAAU,EAAVA,UADe;AAEfjB,EAAAA,QAAQ,EAARA;AAFe,CAAjB","sourcesContent":["/* eslint-disable no-undef */\nconst emojiNames = require('./emojiNames.ts');\nconst emojis = require('./emojis.ts');\n\nconst emojiLib = emojis.reduce((acc, cur) => {\n  acc[cur.name] = {\n    name: cur.name,\n    names: cur.names,\n    ...(cur.skin_variations\n      ? {\n          skin_variations: Object.values(cur.skin_variations).map((skin) =>\n            String.fromCodePoint.apply(\n              null,\n              skin.unicode.split('-').map((unicode) => `0x${unicode}`),\n            ),\n          ),\n        }\n      : {}),\n    sort_order: cur.sort_order,\n    unicode: String.fromCodePoint.apply(\n      null,\n      cur.unicode.split('-').map((unicode) => `0x${unicode}`),\n    ),\n  };\n  return acc;\n}, {});\n\nconst emojiArray = emojiNames\n  .map(({ name, names }) => ({\n    name,\n    names: emojiLib[name]?.names ? [...new Set([...emojiLib[name].names, ...names])] : names,\n  }))\n  .sort((a, b) => (a.name < b.name ? -1 : 1));\n\nmodule.exports = {\n  emojiArray,\n  emojiLib,\n};\n"]}