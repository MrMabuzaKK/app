{"version":3,"sources":["ActiveChannelsRefContext.tsx"],"names":["ActiveChannelsContext","React","createContext","current","ActiveChannelsProvider","children","value","useActiveChannelsRefContext","withActiveChannelsRefContext","Component","WithActiveChannelsContextComponent","props","displayName"],"mappings":";;;;;;;;;;;AAAA;;AAIA;;;;;;;;;AAIA,IAAMA,qBAAqB,GAAGC,kBAAMC,aAAN,CAAoB;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAApB,CAA9B;;AAEO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MACpCC,QADoC,QACpCA,QADoC;AAAA,MAEpCC,KAFoC,QAEpCA,KAFoC;AAAA,SAK/B,gCAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CD,QAA/C,CAL+B;AAAA,CAA/B;;;;AAOA,IAAME,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SACzC,uBAAWP,qBAAX,CADyC;AAAA,CAApC;;;;AAGA,IAAMQ,4BAA4B,GAAG,SAA/BA,4BAA+B,CAC1CC,SAD0C,EAEF;AACxC,MAAMC,kCAAkC,GAAG,SAArCA,kCAAqC,CAACC,KAAD,EAAsC;AAC/E,QAAMX,qBAAqB,GAAGO,2BAA2B,EAAzD;AAEA,WAAO,gCAAC,SAAD,gCAAgBI,KAAhB;AAA6B,MAAA,cAAc,EAAEX,qBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAJD;;AAKAU,EAAAA,kCAAkC,CAACE,WAAnC,iCAA6E,oCAC3EH,SAD2E,CAA7E;AAGA,SAAOC,kCAAP;AACD,CAZM","sourcesContent":["import React, { PropsWithChildren, useContext } from 'react';\n\nimport type { UnknownType } from '../../types/types';\n\nimport { getDisplayName } from '../utils/getDisplayName';\n\ntype ActiveChannels = React.MutableRefObject<string[]>;\n\nconst ActiveChannelsContext = React.createContext({ current: [] } as ActiveChannels);\n\nexport const ActiveChannelsProvider = ({\n  children,\n  value,\n}: PropsWithChildren<{\n  value: ActiveChannels;\n}>) => <ActiveChannelsContext.Provider value={value}>{children}</ActiveChannelsContext.Provider>;\n\nexport const useActiveChannelsRefContext = () =>\n  useContext(ActiveChannelsContext) as unknown as ActiveChannels;\n\nexport const withActiveChannelsRefContext = <P extends UnknownType>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, 'activeChannels'>> => {\n  const WithActiveChannelsContextComponent = (props: Omit<P, 'activeChannels'>) => {\n    const ActiveChannelsContext = useActiveChannelsRefContext();\n\n    return <Component {...(props as P)} activeChannels={ActiveChannelsContext} />;\n  };\n  WithActiveChannelsContextComponent.displayName = `WithActiveChannelsContext${getDisplayName(\n    Component,\n  )}`;\n  return WithActiveChannelsContextComponent;\n};\n"]}