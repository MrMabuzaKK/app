{"version":3,"sources":["useMessageDetailsForState.ts"],"names":["isEditingBoolean","editing","useMessageDetailsForState","message","initialValue","fileUploads","setFileUploads","imageUploads","setImageUploads","mentionedUsers","setMentionedUsers","numberOfUploads","setNumberOfUploads","showMoreOptions","setShowMoreOptions","initialTextValue","text","setText","messageValue","id","updated_at","Array","isArray","mentioned_users","map","user","newFileUploads","newImageUploads","attachments","attachment","type","push","file","name","title","size","file_size","mime_type","state","url","asset_url","fallback","image_url","thumb_url","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\nimport { generateRandomId } from '../../../utils/utils';\n\nimport type { FileUpload, ImageUpload, MessageInputContextValue } from '../MessageInputContext';\n\nexport const isEditingBoolean = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  editing: MessageInputContextValue<StreamChatGenerics>['editing'],\n): editing is boolean => typeof editing === 'boolean';\n\nexport const useMessageDetailsForState = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  message: MessageInputContextValue<StreamChatGenerics>['editing'],\n  initialValue?: string,\n) => {\n  const [fileUploads, setFileUploads] = useState<FileUpload[]>([]);\n  const [imageUploads, setImageUploads] = useState<ImageUpload[]>([]);\n  const [mentionedUsers, setMentionedUsers] = useState<string[]>([]);\n  const [numberOfUploads, setNumberOfUploads] = useState(0);\n  const [showMoreOptions, setShowMoreOptions] = useState(true);\n  const initialTextValue = initialValue || '';\n  const [text, setText] = useState(initialTextValue);\n\n  useEffect(() => {\n    if (text !== initialTextValue) {\n      setShowMoreOptions(false);\n    }\n  }, [text]);\n\n  const messageValue =\n    typeof message === 'boolean' ? '' : `${message.id}${message.text}${message.updated_at}`;\n\n  useEffect(() => {\n    if (!isEditingBoolean<StreamChatGenerics>(message) && Array.isArray(message?.mentioned_users)) {\n      const mentionedUsers = message.mentioned_users.map((user) => user.id);\n      setMentionedUsers(mentionedUsers);\n    }\n  }, [messageValue]);\n\n  useEffect(() => {\n    if (message && !isEditingBoolean<StreamChatGenerics>(message)) {\n      setText(message?.text || '');\n      const newFileUploads: FileUpload[] = [];\n      const newImageUploads: ImageUpload[] = [];\n\n      const attachments = Array.isArray(message.attachments) ? message.attachments : [];\n\n      for (const attachment of attachments) {\n        if (attachment.type === 'file') {\n          const id = generateRandomId();\n          newFileUploads.push({\n            file: {\n              name: attachment.title || '',\n              size: attachment.file_size,\n              type: attachment.mime_type,\n            },\n            id,\n            state: 'finished',\n            url: attachment.asset_url,\n          });\n        } else if (attachment.type === 'image') {\n          const id = generateRandomId();\n          newImageUploads.push({\n            file: {\n              name: attachment.fallback,\n              size: attachment.file_size,\n              type: attachment.type,\n            },\n            id,\n            state: 'finished',\n            url: attachment.image_url || attachment.asset_url || attachment.thumb_url,\n          });\n        } else if (attachment.type === 'video') {\n          const id = generateRandomId();\n          newFileUploads.push({\n            file: {\n              name: attachment.title || '',\n              size: attachment.file_size,\n              type: attachment.mime_type,\n            },\n            id,\n            state: 'finished',\n            url: attachment.asset_url,\n          });\n        }\n      }\n      if (newFileUploads.length) {\n        setFileUploads(newFileUploads);\n      }\n      if (newImageUploads.length) {\n        setImageUploads(newImageUploads);\n      }\n    }\n  }, [messageValue]);\n\n  return {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  };\n};\n"]}