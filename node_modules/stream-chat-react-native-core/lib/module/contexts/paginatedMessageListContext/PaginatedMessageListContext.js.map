{"version":3,"sources":["PaginatedMessageListContext.tsx"],"names":["PaginatedMessageListContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","PaginatedMessageListProvider","children","value","usePaginatedMessageListContext","contextValue","Error","withPaginatedMessageListContext","Component","WithPaginatedMessageListContextComponent","props","paginatedMessageListContext","displayName"],"mappings":";;;;;;;;;;;AAAA;;AAKA;;AAEA;;AACA;;;;;;;;;AAuCO,IAAMA,2BAA2B,GAAGC,kBAAMC,aAAN,CACzCC,mDADyC,CAApC;;;;AAIA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B;AAAA,MAG1CC,QAH0C,QAG1CA,QAH0C;AAAA,MAI1CC,KAJ0C,QAI1CA,KAJ0C;AAAA,SAQ1C,gCAAC,2BAAD,CAA6B,QAA7B;AACE,IAAA,KAAK,EAAEA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,QAHH,CAR0C;AAAA,CAArC;;;;AAeA,IAAME,8BAA8B,GAAG,SAAjCA,8BAAiC,GAEvC;AACL,MAAMC,YAAY,GAAG,uBACnBR,2BADmB,CAArB;;AAIA,MAAIQ,YAAY,KAAKL,mDAAjB,IAA+C,CAAC,2CAApD,EAAyE;AACvE,UAAM,IAAIM,KAAJ,iPAAN;AAGD;;AAED,SAAOD,YAAP;AACD,CAdM;;;;AAqBA,IAAME,+BAA+B,GAAG,SAAlCA,+BAAkC,CAI7CC,SAJ6C,EAKqC;AAClF,MAAMC,wCAAwC,GAAG,SAA3CA,wCAA2C,CAC/CC,KAD+C,EAE5C;AACH,QAAMC,2BAA2B,GAAGP,8BAA8B,EAAlE;AAEA,WAAO,gCAAC,SAAD,gCAAgBM,KAAhB,EAAiCC,2BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAND;;AAOAF,EAAAA,wCAAwC,CAACG,WAAzC,uCAAyF,oCACvFJ,SADuF,CAAzF;AAGA,SAAOC,wCAAP;AACD,CAjBM","sourcesContent":["import React, { PropsWithChildren, useContext } from 'react';\n\nimport type { ChannelState } from 'stream-chat';\n\nimport type { DefaultStreamChatGenerics, UnknownType } from '../../types/types';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type PaginatedMessageListContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Has more messages to load\n   */\n  hasMore: boolean;\n  /**\n   * Is loading more messages\n   */\n  loadingMore: boolean;\n  /**\n   * Is loading more recent messages\n   */\n  loadingMoreRecent: boolean;\n  /**\n   * Load more messages\n   */\n  loadMore: (limit?: number) => Promise<void>;\n  /**\n   * Load more recent messages\n   */\n  loadMoreRecent: (limit?: number) => Promise<void>;\n  /**\n   * Messages from client state\n   */\n  messages: ChannelState<StreamChatGenerics>['messages'];\n  /**\n   * Set loadingMore\n   */\n  setLoadingMore: React.Dispatch<React.SetStateAction<boolean>>;\n  /**\n   * Set loadingMoreRecent\n   */\n  setLoadingMoreRecent: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const PaginatedMessageListContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as PaginatedMessageListContextValue,\n);\n\nexport const PaginatedMessageListProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{\n  value?: PaginatedMessageListContextValue<StreamChatGenerics>;\n}>) => (\n  <PaginatedMessageListContext.Provider\n    value={value as unknown as PaginatedMessageListContextValue}\n  >\n    {children}\n  </PaginatedMessageListContext.Provider>\n);\n\nexport const usePaginatedMessageListContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    PaginatedMessageListContext,\n  ) as unknown as PaginatedMessageListContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The usePaginatedMessageListContext hook was called outside of the PaginatedMessageList provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\n/**\n * Typescript currently does not support partial inference so if MessageListContextValue\n * typing is desired while using the HOC withMessageListContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withPaginatedMessageListContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof PaginatedMessageListContextValue<StreamChatGenerics>>> => {\n  const WithPaginatedMessageListContextComponent = (\n    props: Omit<P, keyof PaginatedMessageListContextValue<StreamChatGenerics>>,\n  ) => {\n    const paginatedMessageListContext = usePaginatedMessageListContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...paginatedMessageListContext} />;\n  };\n  WithPaginatedMessageListContextComponent.displayName = `WithPaginatedMessageListContext${getDisplayName(\n    Component,\n  )}`;\n  return WithPaginatedMessageListContextComponent;\n};\n"]}