{"version":3,"sources":["parseLinks.test.ts"],"names":["describe","it","each","link","expected","result","expect","encoded","toBe","input","toEqual","raw","scheme","email","toHaveLength"],"mappings":"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","sourcesContent":["import { parseLinksFromText } from './parseLinks';\n\ndescribe('parseLinksFromText', () => {\n  it.each([\n    ['www.getstream.io', 'www.getstream.io'],\n    ['getstream.io', 'getstream.io'],\n    ['scrn://team-chat', 'team-chat'],\n    ['https://localhost', 'localhost'],\n    [\n      'https://localhost/with/path?and=query&multiple=params',\n      'localhost/with/path?and=query&multiple=params',\n    ],\n    ['https://localhost/with/path?and=query#fragment', 'localhost/with/path?and=query#fragment'],\n    ['reactnative.stream', 'reactnative.stream'],\n    [\n      'https://zh.wikipedia.org/wiki/挪威牛油危機',\n      'zh.wikipedia.org/wiki/%E6%8C%AA%E5%A8%81%E7%89%9B%E6%B2%B9%E5%8D%B1%E6%A9%9F',\n    ],\n    [\n      'https://getstream.io/chat/docs/react-native/?language=javascript',\n      'getstream.io/chat/docs/react-native/?language=javascript',\n    ],\n    ['127.0.0.1/local_(development)_server', '127.0.0.1/local_(development)_server'],\n    ['https://a.co:8999/ab.php?p=12', 'a.co:8999/ab.php?p=12'],\n  ])('Returns the encoded value of %p as %p', (link, expected) => {\n    const result = parseLinksFromText(link);\n\n    expect(result[0].encoded).toBe(expected);\n  });\n\n  it('parses fqdn', () => {\n    const input = `We have put the apim bol,\ntemporarily so :sj: we can later put the monitors on my grasp\non reality right now is\nhttps://www.contrived-example.com:8080/sub/page.php?p1=1🇳🇴&p2=2#fragment-identifier\n:)`;\n\n    const result = parseLinksFromText(input);\n\n    expect(result).toEqual([\n      {\n        encoded:\n          'www.contrived-example.com:8080/sub/page.php?p1=1%F0%9F%87%B3%F0%9F%87%B4&p2=2#fragment-identifier',\n        raw: 'https://www.contrived-example.com:8080/sub/page.php?p1=1🇳🇴&p2=2#fragment-identifier',\n        scheme: 'https://',\n      },\n    ]);\n  });\n\n  it.each([\n    ['support+rn@getstream.io'],\n    ['support.rn@getstream.io'],\n    ['support-rn@getstream.io'],\n    ['support_rn@getstream.io'],\n  ])('Can parse the email address %p', (email) => {\n    const result = parseLinksFromText(email);\n\n    expect(result[0].encoded).toBe(email);\n    expect(result[0].scheme).toBe('mailto:');\n  });\n\n  it(\"doesn't double the mailto prefix\", () => {\n    const input = 'mailto:support@getstream.io';\n\n    const result = parseLinksFromText(input);\n\n    expect(result[0]).toEqual({\n      encoded: 'support@getstream.io',\n      raw: input,\n      scheme: 'mailto:',\n    });\n  });\n\n  it('Does not falsely parse LINKs from text content', () => {\n    const input = `#This string exists to test that we don't produce false positives\n\nExisting links:\n[already a parsed link](https://getstream.io/blog/react-native-how-to-build-bidirectional-infinite-scroll/)\n[even a bogus one]( should not match )\n\n## These should, however, be parsed:\nwww.getstream.io\ngetstream.io\n`;\n    const result = parseLinksFromText(input);\n\n    expect(result).toHaveLength(2);\n  });\n\n  it('Encodes incomplete emoji unicode', () => {\n    const input = 'https://getstream.io/�';\n    const result = parseLinksFromText(input);\n\n    expect(result[0]).toEqual({\n      encoded: 'getstream.io/%EF%BF%BD',\n      raw: 'https://getstream.io/�',\n      scheme: 'https://',\n    });\n  });\n\n  it('does not parse a decimal number as a URL', () => {\n    const input = '123.456';\n    const result = parseLinksFromText(input);\n\n    expect(result).toHaveLength(0);\n  });\n});\n"]}