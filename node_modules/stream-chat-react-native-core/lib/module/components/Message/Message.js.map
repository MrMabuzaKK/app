{"version":3,"sources":["Message.tsx"],"names":["MessageWithContext","props","isMessageTypeDeleted","message","type","channel","client","disabled","dismissKeyboard","dismissKeyboardOnMessageTouch","enableLongPress","enforceUniqueReaction","forceAlignMessages","goToMessage","groupStyles","handleBlock","handleCopy","handleDelete","handleEdit","handleFlag","handleMute","handlePinMessage","handleQuotedReply","handleReactionProp","handleReaction","handleRetry","handleThreadReply","lastReceivedId","members","messageActions","messageActionsProp","defaultMessageActions","messageContentOrderProp","messageContentOrder","messagesContext","MessageSimple","onLongPressProp","onLongPress","onLongPressMessageProp","onLongPressMessage","onPressProp","onPress","onPressMessageProp","onPressMessage","onPressInProp","onPressIn","onPressInMessageProp","onPressInMessage","onThreadSelect","openThread","OverlayReactionList","preventPress","removeMessage","retrySendMessage","selectReaction","setData","setEditingState","setOverlay","setQuotedMessageState","showAvatar","showMessageStatus","showUnreadUnderlay","style","supportedReactions","t","isTargetedMessage","threadList","updateMessage","theme","colors","bg_gradient_start","targetedMessageBackground","targetedMessageUnderlay","messageSimple","actionsEnabled","status","MessageStatusTypes","RECEIVED","isMyMessage","userID","user","id","handleAction","name","value","sendAction","data","parent_id","onPressQuotedMessage","quotedMessage","errorOrFailed","FAILED","error","Keyboard","dismiss","quoted_message","showMessageOverlay","alignment","attachments","Array","isArray","reduce","acc","cur","files","push","other","og_scrape_url","videos","image_url","asset_url","title_link","thumb_url","images","length","hasAttachmentActions","some","attachment","actions","filter","content","text","onlyEmojis","emojiRegex","test","onOpenThread","hasReactions","latest_reactions","clientId","reactions","reactionType","reactionsOfReactionType","reaction","hasOwnReaction","user_id","own","ownCapabilities","handleDeleteMessage","handleEditMessage","handleQuotedReplyMessage","handleResendMessage","handleToggleBanUser","handleToggleMuteUser","handleTogglePinMessage","handleToggleReaction","blockUser","copyMessage","deleteMessage","editMessage","flagMessage","muteUser","pinMessage","quotedReply","retry","threadReply","unpinMessage","messageReactions","isThreadMessage","dismissOverlay","sendReaction","undefined","Boolean","messageContext","messageReactionTitle","otherAttachments","actionHandlers","resendMessage","toggleBanUser","toggleMuteUser","toggleReaction","payload","defaultHandler","emitter","event","lastGroupMessage","onPressArgs","additionalInfo","handleOnPress","onPressInArgs","handleOnpressIn","pinned","backgroundColor","areEqual","prevProps","nextProps","prevGoToMessage","isAttachmentEqual","prevIsTargetedMessage","prevLastReceivedId","prevMembers","prevMessage","prevMutedUsers","mutedUsers","prevShowUnreadUnderlay","prevT","nextGoToMessage","nextIsTargetedMessage","nextLastReceivedId","nextMembers","nextMessage","nextMutedUsers","nextShowUnreadUnderlay","nextT","membersEqual","Object","keys","repliesEqual","reply_count","lastReceivedIdChangedAndMatters","goToMessageChangedAndMatters","quoted_message_id","isPrevMessageTypeDeleted","isNextMessageTypeDeleted","messageEqual","readBy","updated_at","isPrevQuotedMessageTypeDeleted","isNextQuotedMessageTypeDeleted","quotedMessageEqual","messageUserBannedEqual","banned","prevMessageAttachments","nextMessageAttachments","attachmentsEqual","every","index","attachmentKeysEqual","latestReactionsEqual","mutedUserSame","mutedUser","target","showUnreadUnderlayEqual","tEqual","targetedMessageEqual","MemoizedMessage","React","memo","Message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GestureResponderEvent, Keyboard, StyleProp, View, ViewStyle } from 'react-native';\n\nimport type { Attachment, UserResponse } from 'stream-chat';\n\nimport { useCreateMessageContext } from './hooks/useCreateMessageContext';\nimport { useMessageActionHandlers } from './hooks/useMessageActionHandlers';\nimport { useMessageActions } from './hooks/useMessageActions';\nimport { messageActions as defaultMessageActions } from './utils/messageActions';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport { ChatContextValue, useChatContext } from '../../contexts/chatContext/ChatContext';\nimport {\n  KeyboardContextValue,\n  useKeyboardContext,\n} from '../../contexts/keyboardContext/KeyboardContext';\nimport {\n  MessageContextValue,\n  MessageProvider,\n  Reactions,\n} from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageOverlayContextValue,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport { isVideoPackageAvailable, triggerHaptic } from '../../native';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { emojiRegex, MessageStatusTypes } from '../../utils/utils';\n\nimport {\n  isMessageWithStylesReadByAndDateSeparator,\n  MessageType,\n} from '../MessageList/hooks/useMessageList';\nimport type { MessageActionListItemProps } from '../MessageOverlay/MessageActionListItem';\n\nexport type TouchableEmitter =\n  | 'fileAttachment'\n  | 'gallery'\n  | 'giphy'\n  | 'message'\n  | 'messageContent'\n  | 'messageReplies'\n  | 'reactionList';\n\nexport type TextMentionTouchableHandlerPayload<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  emitter: 'textMention';\n  additionalInfo?: { user?: UserResponse<StreamChatGenerics> };\n};\n\nexport type UrlTouchableHandlerPayload = {\n  emitter: 'textLink' | 'card';\n  additionalInfo?: { url?: string };\n};\n\nexport type TouchableHandlerPayload = {\n  defaultHandler?: () => void;\n  event?: GestureResponderEvent;\n} & (\n  | {\n      emitter?: TouchableEmitter;\n    }\n  | TextMentionTouchableHandlerPayload\n  | UrlTouchableHandlerPayload\n);\n\nexport type MessageTouchableHandlerPayload<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = TouchableHandlerPayload & {\n  actionHandlers?: MessageActionHandlers;\n  additionalInfo?: Record<string, unknown>;\n  message?: MessageType<StreamChatGenerics>;\n};\n\nexport type MessageActionHandlers = {\n  deleteMessage: () => Promise<void>;\n  editMessage: () => void;\n  pinMessage: () => Promise<void>;\n  quotedReply: () => void;\n  resendMessage: () => Promise<void>;\n  showMessageOverlay: () => void;\n  toggleBanUser: () => Promise<void>;\n  toggleMuteUser: () => Promise<void>;\n  toggleReaction: (reactionType: string) => Promise<void>;\n};\n\nexport type MessagePropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  ChannelContextValue<StreamChatGenerics>,\n  'channel' | 'disabled' | 'enforceUniqueReaction' | 'members'\n> &\n  Pick<ChatContextValue<StreamChatGenerics>, 'client' | 'mutedUsers'> &\n  Pick<KeyboardContextValue, 'dismissKeyboard'> &\n  Partial<Omit<MessageContextValue<StreamChatGenerics>, 'groupStyles' | 'message'>> &\n  Pick<MessageContextValue<StreamChatGenerics>, 'groupStyles' | 'message'> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    | 'dismissKeyboardOnMessageTouch'\n    | 'forceAlignMessages'\n    | 'handleBlock'\n    | 'handleCopy'\n    | 'handleDelete'\n    | 'handleEdit'\n    | 'handleFlag'\n    | 'handleMute'\n    | 'handlePinMessage'\n    | 'handleQuotedReply'\n    | 'handleReaction'\n    | 'handleRetry'\n    | 'handleThreadReply'\n    | 'isAttachmentEqual'\n    | 'messageActions'\n    | 'messageContentOrder'\n    | 'MessageSimple'\n    | 'onLongPressMessage'\n    | 'onPressInMessage'\n    | 'onPressMessage'\n    | 'OverlayReactionList'\n    | 'removeMessage'\n    | 'retrySendMessage'\n    | 'selectReaction'\n    | 'setEditingState'\n    | 'setQuotedMessageState'\n    | 'supportedReactions'\n    | 'updateMessage'\n  > &\n  Pick<MessageOverlayContextValue<StreamChatGenerics>, 'setData'> &\n  Pick<OverlayContextValue, 'setOverlay'> &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'openThread'> &\n  Pick<TranslationContextValue, 't'> & {\n    messagesContext: MessagesContextValue<StreamChatGenerics>;\n    /**\n     * Whether or not users are able to long press messages.\n     */\n    enableLongPress?: boolean;\n    goToMessage?: (messageId: string) => void;\n    isTargetedMessage?: boolean;\n    /**\n     * Array of allowed actions or null on message, this can also be a function returning the array.\n     * If all the actions need to be disabled an empty array should be provided as value of prop\n     */\n    /**\n     * You can call methods available on the Message\n     * component such as handleEdit, handleDelete, handleAction etc.\n     *\n     * Source - [Message](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/Message/Message.tsx)\n     *\n     * By default, we show the overlay with all the message actions on long press.\n     *\n     * @param message Message object which was long pressed\n     * @param event   Event object for onLongPress event\n     **/\n    onLongPress?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n\n    /**\n     * You can call methods available on the Message\n     * component such as handleEdit, handleDelete, handleAction etc.\n     *\n     * Source - [Message](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/Message/Message.tsx)\n     *\n     * By default, we will dismiss the keyboard on press.\n     *\n     * @param message Message object which was long pressed\n     * @param event   Event object for onLongPress event\n     * */\n    onPress?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n    onPressIn?: (payload: Partial<MessageTouchableHandlerPayload<StreamChatGenerics>>) => void;\n    /**\n     * Handler to open the thread on message. This is callback for touch event for replies button.\n     *\n     * @param message A message object to open the thread upon.\n     */\n    onThreadSelect?: (message: MessageType<StreamChatGenerics>) => void;\n    showUnreadUnderlay?: boolean;\n    style?: StyleProp<ViewStyle>;\n  };\n\n/**\n * Since this component doesn't consume `messages` from `MessagesContext`,\n * we memoized and broke it up to prevent new messages from re-rendering\n * each individual Message component.\n */\nconst MessageWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessagePropsWithContext<StreamChatGenerics>,\n) => {\n  const isMessageTypeDeleted = props.message.type === 'deleted';\n\n  const {\n    channel,\n    client,\n    disabled,\n    dismissKeyboard,\n    dismissKeyboardOnMessageTouch,\n    enableLongPress = true,\n    enforceUniqueReaction,\n    forceAlignMessages = false,\n    goToMessage,\n    groupStyles = ['bottom'],\n    handleBlock,\n    handleCopy,\n    handleDelete,\n    handleEdit,\n    handleFlag,\n    handleMute,\n    handlePinMessage,\n    handleQuotedReply,\n    handleReaction: handleReactionProp,\n    handleRetry,\n    handleThreadReply,\n    lastReceivedId,\n    members,\n    message,\n    messageActions: messageActionsProp = defaultMessageActions,\n    messageContentOrder: messageContentOrderProp,\n    messagesContext,\n    MessageSimple,\n    onLongPress: onLongPressProp,\n    onLongPressMessage: onLongPressMessageProp,\n    onPress: onPressProp,\n    onPressMessage: onPressMessageProp,\n    onPressIn: onPressInProp,\n    onPressInMessage: onPressInMessageProp,\n    onThreadSelect,\n    openThread,\n    OverlayReactionList,\n    preventPress,\n    removeMessage,\n    retrySendMessage,\n    selectReaction,\n    setData,\n    setEditingState,\n    setOverlay,\n    setQuotedMessageState,\n    showAvatar,\n    showMessageStatus,\n    showUnreadUnderlay,\n    style,\n    supportedReactions,\n    t,\n    isTargetedMessage,\n    threadList = false,\n    updateMessage,\n  } = props;\n\n  const {\n    theme: {\n      colors: { bg_gradient_start, targetedMessageBackground },\n      messageSimple: { targetedMessageUnderlay },\n    },\n  } = useTheme();\n\n  const actionsEnabled =\n    message.type === 'regular' && message.status === MessageStatusTypes.RECEIVED;\n\n  const isMyMessage = client && message && client.userID === message.user?.id;\n\n  const handleAction = async (name: string, value: string) => {\n    if (message.id) {\n      const data = await channel?.sendAction(message.id, { [name]: value });\n      if (data?.message) {\n        updateMessage(data.message);\n      } else {\n        removeMessage({\n          id: message.id,\n          parent_id: message.parent_id,\n        });\n      }\n    }\n  };\n\n  const onPressQuotedMessage = (quotedMessage: MessageType<StreamChatGenerics>) => {\n    if (!goToMessage) return;\n\n    goToMessage(quotedMessage.id);\n  };\n\n  const errorOrFailed = message.type === 'error' || message.status === MessageStatusTypes.FAILED;\n\n  const onPress = (error = errorOrFailed) => {\n    if (dismissKeyboardOnMessageTouch) {\n      Keyboard.dismiss();\n    }\n    const quotedMessage = message.quoted_message as MessageType<StreamChatGenerics>;\n    if (error) {\n      showMessageOverlay(false, true);\n    } else if (quotedMessage) {\n      onPressQuotedMessage(quotedMessage);\n    }\n  };\n\n  const alignment =\n    forceAlignMessages && (forceAlignMessages === 'left' || forceAlignMessages === 'right')\n      ? forceAlignMessages\n      : isMyMessage\n      ? 'right'\n      : 'left';\n\n  /**\n   * attachments contain files/images or other attachments\n   *\n   * if a URL attachment is present with a file/image then we\n   * show just the text and markdown should make the link\n   * clickable\n   */\n  const attachments =\n    !isMessageTypeDeleted && Array.isArray(message.attachments)\n      ? message.attachments.reduce(\n          (acc, cur) => {\n            if (cur.type === 'file') {\n              acc.files.push(cur);\n              acc.other = []; // remove other attachments if a file exists\n            } else if (cur.type === 'video' && !cur.og_scrape_url && isVideoPackageAvailable()) {\n              acc.videos.push({ image_url: cur.asset_url, type: 'video' });\n              acc.other = [];\n            } else if (cur.type === 'video' && !cur.og_scrape_url) {\n              acc.files.push(cur);\n              acc.other = []; // remove other attachments if a file exists\n            } else if (cur.type === 'image' && !cur.title_link && !cur.og_scrape_url) {\n              /**\n               * this next if is not combined with the above one for cases where we have\n               * an image with no url links at all falling back to being an attachment\n               */\n              if (cur.image_url || cur.thumb_url) {\n                acc.images.push(cur);\n                acc.other = []; // remove other attachments if an image exists\n              }\n              // only add other attachments if there are no files/images\n            } else if (!acc.files.length && !acc.images.length && !acc.videos.length) {\n              acc.other.push(cur);\n            }\n\n            return acc;\n          },\n          {\n            files: [] as Attachment<StreamChatGenerics>[],\n            images: [] as Attachment<StreamChatGenerics>[],\n            other: [] as Attachment<StreamChatGenerics>[],\n            videos: [] as Attachment<StreamChatGenerics>[],\n          },\n        )\n      : {\n          files: [] as Attachment<StreamChatGenerics>[],\n          images: [] as Attachment<StreamChatGenerics>[],\n          other: [] as Attachment<StreamChatGenerics>[],\n          videos: [] as Attachment<StreamChatGenerics>[],\n        };\n\n  /**\n   * Check if any actions to prevent long press\n   */\n  const hasAttachmentActions =\n    !isMessageTypeDeleted &&\n    Array.isArray(message.attachments) &&\n    message.attachments.some((attachment) => attachment.actions && attachment.actions.length);\n\n  const messageContentOrder = messageContentOrderProp.filter((content) => {\n    if (content === 'quoted_reply') {\n      return !!message.quoted_message;\n    }\n\n    switch (content) {\n      case 'attachments':\n        return !!attachments.other.length;\n      case 'files':\n        return !!attachments.files.length;\n      case 'gallery':\n        return !!attachments.images.length || !!attachments.videos.length;\n      case 'text':\n      default:\n        return !!message.text;\n    }\n  });\n\n  const onlyEmojis =\n    !attachments.files.length &&\n    !attachments.images.length &&\n    !attachments.other.length &&\n    !!message.text &&\n    emojiRegex.test(message.text);\n\n  const onOpenThread = () => {\n    if (onThreadSelect) {\n      onThreadSelect(message);\n    }\n    if (openThread) {\n      openThread(message);\n    }\n  };\n\n  const hasReactions =\n    !isMessageTypeDeleted && !!message.latest_reactions && message.latest_reactions.length > 0;\n\n  const clientId = client.userID;\n\n  const reactions = hasReactions\n    ? supportedReactions.reduce((acc, cur) => {\n        const reactionType = cur.type;\n        const reactionsOfReactionType = message.latest_reactions?.filter(\n          (reaction) => reaction.type === reactionType,\n        );\n\n        if (reactionsOfReactionType?.length) {\n          const hasOwnReaction = reactionsOfReactionType.some(\n            (reaction) => reaction.user_id === clientId,\n          );\n          acc.push({ own: hasOwnReaction, type: reactionType });\n        }\n\n        return acc;\n      }, [] as Reactions)\n    : [];\n\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const {\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleTogglePinMessage,\n    handleToggleReaction,\n  } = useMessageActionHandlers({\n    channel,\n    client,\n    enforceUniqueReaction,\n    message,\n    removeMessage,\n    retrySendMessage,\n    setEditingState,\n    setQuotedMessageState,\n    supportedReactions,\n    updateMessage,\n  });\n\n  const {\n    blockUser,\n    copyMessage,\n    deleteMessage,\n    editMessage,\n    flagMessage,\n    handleReaction,\n    muteUser,\n    pinMessage,\n    quotedReply,\n    retry,\n    threadReply,\n    unpinMessage,\n  } = useMessageActions({\n    channel,\n    client,\n    enforceUniqueReaction,\n    handleBlock,\n    handleCopy,\n    handleDelete,\n    handleEdit,\n    handleFlag,\n    handleMute,\n    handlePinMessage,\n    handleQuotedReply,\n    handleReaction: handleReactionProp,\n    handleRetry,\n    handleThreadReply,\n    message,\n    onThreadSelect,\n    openThread,\n    removeMessage,\n    retrySendMessage,\n    selectReaction,\n    setEditingState,\n    setOverlay,\n    setQuotedMessageState,\n    supportedReactions,\n    t,\n    updateMessage,\n  });\n\n  const showMessageOverlay = async (messageReactions = false, error = errorOrFailed) => {\n    await dismissKeyboard();\n\n    const isThreadMessage = threadList || !!message.parent_id;\n\n    const dismissOverlay = () => setOverlay('none');\n\n    const messageActions =\n      typeof messageActionsProp !== 'function'\n        ? messageActionsProp\n        : messageActionsProp({\n            blockUser,\n            copyMessage,\n            deleteMessage,\n            dismissOverlay,\n            editMessage,\n            error,\n            flagMessage,\n            isMyMessage,\n            isThreadMessage,\n            message,\n            messageReactions,\n            muteUser,\n            ownCapabilities,\n            pinMessage,\n            quotedReply,\n            retry,\n            threadReply,\n            unpinMessage,\n          });\n\n    setData({\n      alignment,\n      clientId: client.userID,\n      files: attachments.files,\n      groupStyles,\n      handleReaction: ownCapabilities.sendReaction ? handleReaction : undefined,\n      images: attachments.images,\n      message,\n      messageActions: messageActions?.filter(Boolean) as MessageActionListItemProps[] | undefined,\n      messageContext: { ...messageContext, disabled: true, preventPress: true },\n      messageReactionTitle: !error && messageReactions ? t('Message Reactions') : undefined,\n      messagesContext: { ...messagesContext, messageContentOrder },\n      onlyEmojis,\n      otherAttachments: attachments.other,\n      OverlayReactionList,\n      ownCapabilities,\n      supportedReactions,\n      threadList,\n      videos: attachments.videos,\n    });\n\n    setOverlay('message');\n  };\n\n  const actionHandlers: MessageActionHandlers = {\n    deleteMessage: handleDeleteMessage,\n    editMessage: handleEditMessage,\n    pinMessage: handleTogglePinMessage,\n    quotedReply: handleQuotedReplyMessage,\n    resendMessage: handleResendMessage,\n    showMessageOverlay,\n    toggleBanUser: handleToggleBanUser,\n    toggleMuteUser: handleToggleMuteUser,\n    toggleReaction: handleToggleReaction,\n  };\n\n  const onLongPressMessage =\n    disabled || hasAttachmentActions\n      ? () => null\n      : onLongPressMessageProp\n      ? (payload?: TouchableHandlerPayload) =>\n          onLongPressMessageProp({\n            actionHandlers,\n            defaultHandler: payload?.defaultHandler || showMessageOverlay,\n            emitter: payload?.emitter || 'message',\n            event: payload?.event,\n            message,\n          })\n      : onLongPressProp\n      ? (payload?: TouchableHandlerPayload) =>\n          onLongPressProp({\n            actionHandlers,\n            defaultHandler: payload?.defaultHandler || showMessageOverlay,\n            emitter: payload?.emitter || 'message',\n            event: payload?.event,\n          })\n      : enableLongPress\n      ? () => {\n          triggerHaptic('impactMedium');\n          showMessageOverlay(false);\n        }\n      : () => null;\n\n  const messageContext = useCreateMessageContext({\n    actionsEnabled,\n    alignment,\n    channel,\n    disabled,\n    files: attachments.files,\n    goToMessage,\n    groupStyles,\n    handleAction,\n    handleDeleteMessage,\n    handleEditMessage,\n    handleQuotedReplyMessage,\n    handleResendMessage,\n    handleToggleBanUser,\n    handleToggleMuteUser,\n    handleToggleReaction,\n    hasReactions,\n    images: attachments.images,\n    isMyMessage,\n    lastGroupMessage: groupStyles?.[0] === 'single' || groupStyles?.[0] === 'bottom',\n    lastReceivedId,\n    members,\n    message,\n    messageContentOrder,\n    onLongPress: onLongPressMessage,\n    onlyEmojis,\n    onOpenThread,\n    onPress: (payload) => {\n      const onPressArgs = {\n        actionHandlers,\n        additionalInfo: payload.additionalInfo,\n        defaultHandler: payload.defaultHandler || onPress,\n        emitter: payload.emitter || 'message',\n        event: payload.event,\n        message,\n      };\n\n      const handleOnPress = () => {\n        if (onPressProp) return onPressProp(onPressArgs);\n        if (onPressMessageProp) return onPressMessageProp(onPressArgs);\n        if (payload.defaultHandler) return payload.defaultHandler();\n\n        return onPress();\n      };\n\n      handleOnPress();\n    },\n    onPressIn:\n      onPressInProp || onPressInMessageProp\n        ? (payload) => {\n            const onPressInArgs = {\n              actionHandlers,\n              defaultHandler: payload.defaultHandler,\n              emitter: payload.emitter || 'message',\n              event: payload.event,\n              message,\n            };\n            const handleOnpressIn = () => {\n              if (onPressInProp) return onPressInProp(onPressInArgs);\n              if (onPressInMessageProp) return onPressInMessageProp(onPressInArgs);\n            };\n            handleOnpressIn();\n          }\n        : null,\n    otherAttachments: attachments.other,\n    preventPress,\n    reactions,\n    showAvatar,\n    showMessageOverlay,\n    showMessageStatus: typeof showMessageStatus === 'boolean' ? showMessageStatus : isMyMessage,\n    threadList,\n    videos: attachments.videos,\n  });\n\n  if (!(isMessageTypeDeleted || messageContentOrder.length)) return null;\n\n  return (\n    <View\n      style={[message.pinned && { backgroundColor: targetedMessageBackground }]}\n      testID='message-wrapper'\n    >\n      <View\n        style={[\n          style,\n          {\n            backgroundColor: showUnreadUnderlay ? bg_gradient_start : undefined,\n          },\n        ]}\n      >\n        <View\n          style={[\n            isTargetedMessage\n              ? { backgroundColor: targetedMessageBackground, ...targetedMessageUnderlay }\n              : {},\n          ]}\n        >\n          <MessageProvider value={messageContext}>\n            <MessageSimple />\n          </MessageProvider>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessagePropsWithContext<StreamChatGenerics>,\n  nextProps: MessagePropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    goToMessage: prevGoToMessage,\n    isAttachmentEqual,\n    isTargetedMessage: prevIsTargetedMessage,\n    lastReceivedId: prevLastReceivedId,\n    members: prevMembers,\n    message: prevMessage,\n    mutedUsers: prevMutedUsers,\n    showUnreadUnderlay: prevShowUnreadUnderlay,\n    t: prevT,\n  } = prevProps;\n  const {\n    goToMessage: nextGoToMessage,\n    isTargetedMessage: nextIsTargetedMessage,\n    lastReceivedId: nextLastReceivedId,\n    members: nextMembers,\n    message: nextMessage,\n    mutedUsers: nextMutedUsers,\n    showUnreadUnderlay: nextShowUnreadUnderlay,\n    t: nextT,\n  } = nextProps;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const repliesEqual = prevMessage.reply_count === nextMessage.reply_count;\n  if (!repliesEqual) return false;\n\n  const lastReceivedIdChangedAndMatters =\n    prevLastReceivedId !== nextLastReceivedId &&\n    (prevLastReceivedId === prevMessage.id ||\n      prevLastReceivedId === nextMessage.id ||\n      nextLastReceivedId === prevMessage.id ||\n      nextLastReceivedId === nextMessage.id);\n\n  if (lastReceivedIdChangedAndMatters) return false;\n\n  const goToMessageChangedAndMatters =\n    nextMessage.quoted_message_id && prevGoToMessage !== nextGoToMessage;\n\n  if (goToMessageChangedAndMatters) return false;\n\n  const isPrevMessageTypeDeleted = prevMessage.type === 'deleted';\n  const isNextMessageTypeDeleted = nextMessage.type === 'deleted';\n\n  const messageEqual =\n    isPrevMessageTypeDeleted === isNextMessageTypeDeleted &&\n    (isMessageWithStylesReadByAndDateSeparator(prevMessage) && prevMessage.readBy) ===\n      (isMessageWithStylesReadByAndDateSeparator(nextMessage) && nextMessage.readBy) &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text &&\n    prevMessage.pinned === nextMessage.pinned &&\n    prevMessage.updated_at === nextMessage.updated_at;\n\n  if (!messageEqual) return false;\n\n  const isPrevQuotedMessageTypeDeleted = prevMessage.quoted_message?.type === 'deleted';\n  const isNextQuotedMessageTypeDeleted = nextMessage.quoted_message?.type === 'deleted';\n\n  const quotedMessageEqual =\n    prevMessage.quoted_message?.id === nextMessage.quoted_message?.id &&\n    isPrevQuotedMessageTypeDeleted === isNextQuotedMessageTypeDeleted;\n\n  if (!quotedMessageEqual) return false;\n\n  const messageUserBannedEqual = prevMessage.user?.banned === nextMessage.user?.banned;\n  if (!messageUserBannedEqual) return false;\n\n  const prevMessageAttachments = prevMessage.attachments;\n  const nextMessageAttachments = nextMessage.attachments;\n  const attachmentsEqual =\n    (Array.isArray(prevMessageAttachments) &&\n      Array.isArray(nextMessageAttachments) &&\n      prevMessageAttachments.length === nextMessageAttachments.length &&\n      prevMessageAttachments.every((attachment, index) => {\n        const attachmentKeysEqual =\n          attachment.type === 'image'\n            ? attachment.image_url === nextMessageAttachments[index].image_url &&\n              attachment.thumb_url === nextMessageAttachments[index].thumb_url\n            : attachment.type === nextMessageAttachments[index].type;\n\n        if (isAttachmentEqual)\n          return (\n            attachmentKeysEqual && !!isAttachmentEqual(attachment, nextMessageAttachments[index])\n          );\n\n        return attachmentKeysEqual;\n      })) ||\n    prevMessageAttachments === nextMessageAttachments;\n  if (!attachmentsEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  const mutedUserSame =\n    prevMutedUsers.length === nextMutedUsers.length ||\n    prevMutedUsers.some((mutedUser) => mutedUser.target.id === prevMessage.user?.id) ===\n      nextMutedUsers.some((mutedUser) => mutedUser.target.id === nextMessage.user?.id);\n  if (!mutedUserSame) return false;\n\n  const showUnreadUnderlayEqual = prevShowUnreadUnderlay === nextShowUnreadUnderlay;\n  if (!showUnreadUnderlayEqual) return false;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const targetedMessageEqual = prevIsTargetedMessage === nextIsTargetedMessage;\n  if (!targetedMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessage = React.memo(MessageWithContext, areEqual) as typeof MessageWithContext;\n\nexport type MessageProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessagePropsWithContext<StreamChatGenerics>, 'groupStyles' | 'message'>> &\n  Pick<MessagePropsWithContext<StreamChatGenerics>, 'groupStyles' | 'message'>;\n\n/**\n * Message - A high level component which implements all the logic required for a message.\n * The actual rendering of the message is delegated via the \"Message\" property\n *\n * @example ./Message.md\n */\nexport const Message = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageProps<StreamChatGenerics>,\n) => {\n  const { channel, disabled, enforceUniqueReaction, members } =\n    useChannelContext<StreamChatGenerics>();\n  const { client, mutedUsers } = useChatContext<StreamChatGenerics>();\n  const { dismissKeyboard } = useKeyboardContext();\n  const { setData } = useMessageOverlayContext<StreamChatGenerics>();\n  const messagesContext = useMessagesContext<StreamChatGenerics>();\n  const { setOverlay } = useOverlayContext();\n  const { openThread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedMessage<StreamChatGenerics>\n      {...messagesContext}\n      {...{\n        channel,\n        client,\n        disabled,\n        dismissKeyboard,\n        enforceUniqueReaction,\n        members,\n        messagesContext,\n        mutedUsers,\n        openThread,\n        setData,\n        setOverlay,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n"]}