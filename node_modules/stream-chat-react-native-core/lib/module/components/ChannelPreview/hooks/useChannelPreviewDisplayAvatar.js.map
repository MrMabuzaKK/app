{"version":3,"sources":["useChannelPreviewDisplayAvatar.ts"],"names":["getChannelPreviewDisplayAvatar","channel","client","currentUserId","user","id","channelId","channelData","data","channelName","name","channelImage","image","members","Object","values","state","otherMembers","filter","member","length","ids","slice","map","images","names","useChannelPreviewDisplayAvatar","displayAvatar","setDisplayAvatar"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { Channel, StreamChat } from 'stream-chat';\n\nimport { useChatContext } from '../../../contexts/chatContext/ChatContext';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport const getChannelPreviewDisplayAvatar = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  channel: Channel<StreamChatGenerics>,\n  client: StreamChat<StreamChatGenerics>,\n) => {\n  const currentUserId = client?.user?.id;\n  const channelId = channel?.id;\n  const channelData = channel?.data;\n  const channelName = channelData?.name;\n  const channelImage = channelData?.image;\n\n  if (channelImage) {\n    return {\n      id: channelId,\n      image: channelImage,\n      name: channelName,\n    };\n  } else if (currentUserId) {\n    const members = Object.values(channel.state?.members);\n    const otherMembers = members.filter((member) => member.user?.id !== currentUserId);\n\n    if (otherMembers.length === 1) {\n      return {\n        id: otherMembers[0].user?.id,\n        image: otherMembers[0].user?.image,\n        name: channelName || otherMembers[0].user?.name,\n      };\n    }\n\n    return {\n      ids: otherMembers.slice(0, 4).map((member) => member.user?.id || ''),\n      images: otherMembers.slice(0, 4).map((member) => member.user?.image || ''),\n      names: otherMembers.slice(0, 4).map((member) => member.user?.name || ''),\n    };\n  }\n  return {\n    id: channelId,\n    name: channelName,\n  };\n};\n\n/**\n * Hook to set the display avatar for channel preview\n * @param {*} channel\n *\n * @returns {object} e.g., { image: 'http://dummyurl.com/test.png', name: 'Uhtred Bebbanburg' }\n */\nexport const useChannelPreviewDisplayAvatar = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  channel: Channel<StreamChatGenerics>,\n) => {\n  const { client } = useChatContext<StreamChatGenerics>();\n\n  const channelData = channel?.data;\n  const image = channelData?.image;\n  const name = channelData?.name;\n  const id = client?.user?.id;\n\n  const [displayAvatar, setDisplayAvatar] = useState(\n    getChannelPreviewDisplayAvatar(channel, client),\n  );\n\n  useEffect(() => {\n    setDisplayAvatar(getChannelPreviewDisplayAvatar(channel, client));\n  }, [id, image, name]);\n\n  return displayAvatar;\n};\n"]}