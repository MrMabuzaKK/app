{"version":3,"sources":["openUrlSafely.ts"],"names":["openUrlSafely","url","finalUrl","pattern","RegExp","test","Linking","canOpenURL","supported","openURL","console","warn"],"mappings":";;;;;;;;;;;AAAA;;AAEO,IAAMA,aAAa;AAAA,6EAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,QADuB,GACZD,GADY;AAErBE,YAAAA,OAFqB,GAEX,IAAIC,MAAJ,CAAW,WAAX,CAFW;;AAI3B,gBAAI,CAACD,OAAO,CAACE,IAAR,CAAaH,QAAb,CAAL,EAA6B;AAC3BA,cAAAA,QAAQ,GAAG,YAAYD,GAAvB;AACD;;AAN0B;AAAA,mBAOHK,qBAAQC,UAAR,CAAmBL,QAAnB,CAPG;;AAAA;AAOrBM,YAAAA,SAPqB;;AAS3B,gBAAIA,SAAJ,EAAe;AACbF,mCAAQG,OAAR,CAAgBP,QAAhB;AACD,aAFD,MAEO;AACLQ,cAAAA,OAAO,CAACC,IAAR,kCAA4CT,QAA5C;AACD;;AAb0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbF,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import { Linking } from 'react-native';\n\nexport const openUrlSafely = async (url?: string) => {\n  let finalUrl = url as string;\n  const pattern = new RegExp(/^\\S+:\\/\\//);\n\n  if (!pattern.test(finalUrl)) {\n    finalUrl = 'http://' + url;\n  }\n  const supported = await Linking.canOpenURL(finalUrl);\n\n  if (supported) {\n    Linking.openURL(finalUrl);\n  } else {\n    console.warn(`Don't know how to open URI: ${finalUrl}`);\n  }\n};\n"]}