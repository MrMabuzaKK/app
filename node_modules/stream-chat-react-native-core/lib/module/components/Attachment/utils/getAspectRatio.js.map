{"version":3,"sources":["getAspectRatio.ts"],"names":["getAspectRatio","attachment","type","Error","original_width","original_height"],"mappings":";;;;;AAUO,SAASA,cAAT,CAELC,UAFK,EAEuC;AAC5C,MAAI,EAAEA,UAAU,CAACC,IAAX,KAAoB,OAApB,IAA+BD,UAAU,CAACC,IAAX,KAAoB,OAArD,CAAJ,EAAmE;AACjE,UAAM,IAAIC,KAAJ,CACJ,+EADI,CAAN;AAGD;;AAED,MAAI,CAACF,UAAU,CAACG,cAAZ,IAA8B,CAACH,UAAU,CAACI,eAA9C,EAA+D,OAAO,CAAP;AAE/D,SAAOJ,UAAU,CAACG,cAAX,GAA4BH,UAAU,CAACI,eAA9C;AACD","sourcesContent":["import type { Attachment } from 'stream-chat';\n\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\n/**\n * Returns the aspect ratio of an image attachment.\n *\n * @param image Image attachment.\n * @returns {number}\n */\nexport function getAspectRatio<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(attachment: Attachment<StreamChatGenerics>) {\n  if (!(attachment.type === 'image' || attachment.type === 'video')) {\n    throw new Error(\n      'getAspectRatio() can only be called on an image attachment or video thumbnail',\n    );\n  }\n\n  if (!attachment.original_width || !attachment.original_height) return 1;\n\n  return attachment.original_width / attachment.original_height;\n}\n"]}