var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageGalleryVideoControl = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _dayjs = _interopRequireDefault(require("dayjs"));

var _ProgressControl = require("./ProgressControl");

var _ThemeContext = require("../../../contexts/themeContext/ThemeContext");

var _icons = require("../../../icons");

var _this = this,
    _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/ImageGallery/components/ImageGalleryVideoControl.tsx";

var styles = _reactNative.StyleSheet.create({
  durationTextStyle: {
    color: '#fff',
    fontWeight: 'bold'
  },
  roundedView: {
    alignItems: 'center',
    backgroundColor: '#fff',
    borderRadius: 50,
    display: 'flex',
    elevation: 2,
    height: 36,
    justifyContent: 'center',
    width: 36
  },
  videoContainer: {
    alignItems: 'center',
    backgroundColor: 'rgba(52, 52, 52, 0.1)',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    padding: 10
  }
});

var ImageGalleryVideoControl = _react["default"].memo(function (props) {
  var duration = props.duration,
      onPlayPause = props.onPlayPause,
      onProgressDrag = props.onProgressDrag,
      paused = props.paused,
      progress = props.progress;
  var videoDuration = duration ? duration / 3600 >= 1 ? _dayjs["default"].duration(duration, 'second').format('HH:mm:ss') : _dayjs["default"].duration(duration, 'second').format('mm:ss') : null;
  var progressValueInSeconds = progress * duration;
  var progressDuration = progressValueInSeconds ? progressValueInSeconds / 3600 >= 1 ? _dayjs["default"].duration(progressValueInSeconds, 'second').format('HH:mm:ss') : _dayjs["default"].duration(progressValueInSeconds, 'second').format('mm:ss') : null;

  var _useTheme = (0, _ThemeContext.useTheme)(),
      _useTheme$theme$image = _useTheme.theme.imageGallery.videoControl,
      durationTextStyle = _useTheme$theme$image.durationTextStyle,
      roundedView = _useTheme$theme$image.roundedView,
      videoContainer = _useTheme$theme$image.videoContainer;

  return _react["default"].createElement(_reactNative.View, {
    style: [styles.videoContainer, videoContainer],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 7
    }
  }, _react["default"].createElement(_reactNative.TouchableOpacity, {
    onPress: onPlayPause,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 9
    }
  }, _react["default"].createElement(_reactNative.View, {
    style: [styles.roundedView, roundedView],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 11
    }
  }, paused ? _react["default"].createElement(_icons.Play, {
    height: 24,
    pathFill: '#000',
    width: 24,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 15
    }
  }) : _react["default"].createElement(_icons.Pause, {
    height: 24,
    width: 24,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 15
    }
  }))), _react["default"].createElement(_reactNative.Text, {
    style: [styles.durationTextStyle, durationTextStyle],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 9
    }
  }, progressDuration ? progressDuration : '00:00'), _react["default"].createElement(_ProgressControl.ProgressControl, {
    duration: duration,
    onPlayPause: onPlayPause,
    onProgressDrag: onProgressDrag,
    progress: progress,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 9
    }
  }), _react["default"].createElement(_reactNative.Text, {
    style: [styles.durationTextStyle, durationTextStyle],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 9
    }
  }, videoDuration ? videoDuration : '00:00'));
}, function (prevProps, nextProps) {
  if (prevProps.duration === nextProps.duration && prevProps.paused === nextProps.paused && prevProps.progress === nextProps.progress) {
    return true;
  } else {
    return false;
  }
});

exports.ImageGalleryVideoControl = ImageGalleryVideoControl;
ImageGalleryVideoControl.displayName = 'ImageGalleryVideoControl{imageGallery{videoControl}}';
//# sourceMappingURL=ImageGalleryVideoControl.js.map