{"version":3,"sources":["ImageGalleryOverlay.tsx"],"names":["ImageGalleryOverlay","props","animatedBottomSheetIndex","closeGridView","currentBottomSheetIndex","theme","overlayColor","colors","overlay","imageGallery","grid","visible","setVisible","fadedIn","setFadedIn","opacity","value","duration","easing","Easing","out","ease","showOverlayStyle","tapEvent","event","nativeEvent","state","State","END","StyleSheet","absoluteFillObject","backgroundColor","displayName"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKA;;AAQA;;;;;;;;;AAQO,IAAMA,mBAAoC,GAAG,SAAvCA,mBAAuC,CAACC,KAAD,EAAW;AAC7D,MAAQC,wBAAR,GAA6ED,KAA7E,CAAQC,wBAAR;AAAA,MAAkCC,aAAlC,GAA6EF,KAA7E,CAAkCE,aAAlC;AAAA,MAAiDC,uBAAjD,GAA6EH,KAA7E,CAAiDG,uBAAjD;;AAEA,kBAOI,6BAPJ;AAAA,kCACEC,KADF;AAAA,MAEuBC,YAFvB,mBAEIC,MAFJ,CAEcC,OAFd;AAAA,MAIcA,OAJd,mBAGIC,YAHJ,CAIMC,IAJN,CAIcF,OAJd;;AASA,kBAA8B,qBAAS,KAAT,CAA9B;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8B,qBAAS,KAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,OAAO,GAAG,2CAAe,CAAf,CAAhB;AAEA,wBAAU,YAAM;AACd,QAAIX,uBAAuB,GAAG,CAA9B,EAAiC;AAC/BQ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,OAAO,CAACC,KAAR,GAAgB,uCACd,CADc,EAEd;AACEC,QAAAA,QAAQ,EAAE,GADZ;AAEEC,QAAAA,MAAM,EAAEC,8BAAOC,GAAP,CAAWD,8BAAOE,IAAlB;AAFV,OAFc,EAMd;AAAA,eAAM,oCAAQP,UAAR,EAAoB,IAApB,CAAN;AAAA,OANc,CAAhB;AAQD,KAVD,MAUO;AACLF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACC,KAAR,GAAgB,CAAhB;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAhBD,EAgBG,CAACV,uBAAD,CAhBH;AAkBA,MAAMkB,gBAAgB,GAAG,6CACvB;AAAA,WAAO;AACLP,MAAAA,OAAO,EAAEF,OAAO,GAAGX,wBAAwB,CAACc,KAA5B,GAAoCD,OAAO,CAACC;AADvD,KAAP;AAAA,GADuB,EAIvB,CAACH,OAAD,CAJuB,CAAzB;;AAOA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAA8C;AAC7D,QAAIA,KAAK,CAACC,WAAN,CAAkBC,KAAlB,KAA4BC,iCAAMC,GAAtC,EAA2C;AACzCzB,MAAAA,aAAa;AACd;AACF,GAJD;;AAMA,MAAI,CAACQ,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,SACE,gCAAC,4CAAD;AAAmB,IAAA,SAAS,EAAE,EAA9B;AAAkC,IAAA,SAAS,EAAE,EAA7C;AAAiD,IAAA,oBAAoB,EAAEY,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,iCAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLM,wBAAWC,kBADN,EAEL;AAAEC,MAAAA,eAAe,EAAEzB;AAAnB,KAFK,EAGLE,OAHK,EAILc,gBAJK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CAhEM;;;AAkEPtB,mBAAmB,CAACgC,WAApB,GAAkC,wCAAlC","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport {\n  State,\n  TapGestureHandler,\n  TapGestureHandlerStateChangeEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  Easing,\n  runOnJS,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\n\ntype Props = {\n  animatedBottomSheetIndex: Animated.SharedValue<number>;\n  closeGridView: () => void;\n  currentBottomSheetIndex: number;\n};\n\nexport const ImageGalleryOverlay: React.FC<Props> = (props) => {\n  const { animatedBottomSheetIndex, closeGridView, currentBottomSheetIndex } = props;\n\n  const {\n    theme: {\n      colors: { overlay: overlayColor },\n      imageGallery: {\n        grid: { overlay },\n      },\n    },\n  } = useTheme();\n\n  const [visible, setVisible] = useState(false);\n  const [fadedIn, setFadedIn] = useState(false);\n\n  const opacity = useSharedValue(0);\n\n  useEffect(() => {\n    if (currentBottomSheetIndex > 0) {\n      setVisible(true);\n      opacity.value = withTiming(\n        1,\n        {\n          duration: 200,\n          easing: Easing.out(Easing.ease),\n        },\n        () => runOnJS(setFadedIn)(true),\n      );\n    } else {\n      setVisible(false);\n      opacity.value = 0;\n      setFadedIn(false);\n    }\n  }, [currentBottomSheetIndex]);\n\n  const showOverlayStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      opacity: fadedIn ? animatedBottomSheetIndex.value : opacity.value,\n    }),\n    [fadedIn],\n  );\n\n  const tapEvent = (event: TapGestureHandlerStateChangeEvent) => {\n    if (event.nativeEvent.state === State.END) {\n      closeGridView();\n    }\n  };\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <TapGestureHandler maxDeltaX={16} maxDeltaY={16} onHandlerStateChange={tapEvent}>\n      <Animated.View\n        style={[\n          StyleSheet.absoluteFillObject,\n          { backgroundColor: overlayColor },\n          overlay,\n          showOverlayStyle,\n        ]}\n      />\n    </TapGestureHandler>\n  );\n};\n\nImageGalleryOverlay.displayName = 'ImageGrid{imageGallery{grid{overlay}}}';\n"]}