{"version":3,"sources":["AnimatedGalleryVideo.tsx"],"names":["screenWidth","halfScreenWidth","oneEighth","styles","StyleSheet","create","activityIndicator","alignSelf","videoPlayer","height","width","AnimatedGalleryVideo","React","memo","props","opacity","setOpacity","handleEnd","handleLoad","handleProgress","index","offsetScale","paused","previous","scale","screenHeight","selected","shouldRender","source","style","translateX","translateY","videoRef","onLoadStart","onLoad","payload","onEnd","onProgress","data","onBuffer","isBuffering","onPlayBackStatusUpdate","playbackStatus","isLoaded","error","console","duration","durationMillis","isPlaying","currentTime","positionMillis","seekableDuration","didJustFinish","isLooping","animatedViewStyles","xScaleOffset","yScaleOffset","transform","value","scaleX","uri","prevProps","nextProps","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport type { StyleProp } from 'react-native';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\n\nimport {\n  isVideoPackageAvailable,\n  PlaybackStatus,\n  Video,\n  VideoPayloadData,\n  VideoProgressData,\n  VideoType,\n} from '../../../native';\n\nimport { vw } from '../../../utils/utils';\nimport { Spinner } from '../../Spinner/Spinner';\n\nconst screenWidth = vw(100);\nconst halfScreenWidth = vw(50);\nconst oneEighth = 1 / 8;\n\ntype Props = {\n  handleEnd: () => void;\n  handleLoad: (payload: VideoPayloadData) => void;\n  handleProgress: (data: VideoProgressData) => void;\n  index: number;\n  offsetScale: Animated.SharedValue<number>;\n  paused: boolean;\n  previous: boolean;\n  scale: Animated.SharedValue<number>;\n  screenHeight: number;\n  selected: boolean;\n  shouldRender: boolean;\n  source: { uri: string };\n  translateX: Animated.SharedValue<number>;\n  translateY: Animated.SharedValue<number>;\n  videoRef: React.RefObject<VideoType>;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst styles = StyleSheet.create({\n  activityIndicator: {\n    alignSelf: 'center',\n  },\n  videoPlayer: {\n    height: '100%',\n    width: '100%',\n  },\n});\n\nexport const AnimatedGalleryVideo: React.FC<Props> = React.memo(\n  (props) => {\n    const [opacity, setOpacity] = useState<number>(1);\n    const {\n      handleEnd,\n      handleLoad,\n      handleProgress,\n      index,\n      offsetScale,\n      paused,\n      previous,\n      scale,\n      screenHeight,\n      selected,\n      shouldRender,\n      source,\n      style,\n      translateX,\n      translateY,\n      videoRef,\n    } = props;\n\n    const onLoadStart = () => {\n      setOpacity(1);\n    };\n\n    const onLoad = (payload: VideoPayloadData) => {\n      setOpacity(0);\n      handleLoad(payload);\n    };\n\n    const onEnd = () => {\n      handleEnd();\n    };\n\n    const onProgress = (data: VideoProgressData) => {\n      handleProgress(data);\n    };\n\n    const onBuffer = ({ isBuffering }: { isBuffering: boolean }) => {\n      if (isBuffering) setOpacity(1);\n      else setOpacity(0);\n    };\n\n    const onPlayBackStatusUpdate = (playbackStatus: PlaybackStatus) => {\n      if (!playbackStatus.isLoaded) {\n        // Update your UI for the unloaded state\n        setOpacity(1);\n        if (playbackStatus.error) {\n          console.error(`Encountered a fatal error during playback: ${playbackStatus.error}`);\n        }\n      } else {\n        // Update your UI for the loaded state\n        setOpacity(0);\n        handleLoad({ duration: playbackStatus.durationMillis / 1000 });\n        if (playbackStatus.isPlaying) {\n          // Update your UI for the playing state\n          handleProgress({\n            currentTime: playbackStatus.positionMillis / 1000,\n            seekableDuration: playbackStatus.durationMillis / 1000,\n          });\n        }\n\n        if (playbackStatus.isBuffering) {\n          // Update your UI for the buffering state\n          setOpacity(1);\n        }\n\n        if (playbackStatus.didJustFinish && !playbackStatus.isLooping) {\n          // The player has just finished playing and will stop. Maybe you want to play something else?\n          handleEnd();\n        }\n      }\n    };\n\n    const animatedViewStyles = useAnimatedStyle<ViewStyle>(() => {\n      const xScaleOffset = -7 * screenWidth * (0.5 + index);\n      const yScaleOffset = -screenHeight * 3.5;\n      return {\n        transform: [\n          {\n            translateX: selected\n              ? translateX.value + xScaleOffset\n              : scale.value < 1 || scale.value !== offsetScale.value\n              ? xScaleOffset\n              : previous\n              ? translateX.value - halfScreenWidth * (scale.value - 1) + xScaleOffset\n              : translateX.value + halfScreenWidth * (scale.value - 1) + xScaleOffset,\n          },\n          {\n            translateY: selected ? translateY.value + yScaleOffset : yScaleOffset,\n          },\n          {\n            scale: selected ? scale.value / 8 : oneEighth,\n          },\n          { scaleX: -1 },\n        ],\n      };\n    }, [previous, selected]);\n\n    /**\n     * An empty view is rendered for images not close to the currently\n     * selected in order to maintain spacing while reducing the image\n     * load on memory.\n     */\n    if (!shouldRender) {\n      return <View style={[style, { transform: [{ scale: oneEighth }] }]} />;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          style,\n          animatedViewStyles,\n          {\n            transform: [\n              { scaleX: -1 },\n              { translateY: -screenHeight * 3.5 },\n              {\n                translateX: -translateX.value + 7 * screenWidth * (0.5 + index),\n              },\n              { scale: oneEighth },\n            ],\n          },\n        ]}\n      >\n        {isVideoPackageAvailable() && (\n          <Video\n            onBuffer={onBuffer}\n            onEnd={onEnd}\n            onLoad={onLoad}\n            onLoadStart={onLoadStart}\n            onPlaybackStatusUpdate={onPlayBackStatusUpdate}\n            onProgress={onProgress}\n            paused={paused}\n            resizeMode='contain'\n            style={style}\n            uri={source.uri}\n            videoRef={videoRef}\n          />\n        )}\n        <Animated.View\n          style={[\n            styles.activityIndicator,\n            {\n              opacity,\n              transform: [\n                { scaleX: -1 },\n                { translateY: -screenHeight * 4 },\n                { scale: 1 / oneEighth },\n              ],\n            },\n          ]}\n        >\n          <Spinner height={40} width={40} />\n        </Animated.View>\n      </Animated.View>\n    );\n  },\n\n  (prevProps, nextProps) => {\n    if (\n      prevProps.paused === nextProps.paused &&\n      prevProps.shouldRender === nextProps.shouldRender &&\n      prevProps.source.uri === nextProps.source.uri &&\n      prevProps.screenHeight === nextProps.screenHeight &&\n      prevProps.selected === nextProps.selected &&\n      prevProps.previous === nextProps.previous &&\n      prevProps.index === nextProps.index\n    ) {\n      return true;\n    }\n    return false;\n  },\n);\n\nAnimatedGalleryVideo.displayName = 'AnimatedGalleryVideo';\n"]}