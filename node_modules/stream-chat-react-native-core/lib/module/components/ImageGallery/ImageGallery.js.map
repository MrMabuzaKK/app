{"version":3,"sources":["ImageGallery.tsx"],"names":["isAndroid","Platform","OS","fullScreenHeight","Dimensions","get","height","measuredScreenHeight","screenWidth","halfScreenWidth","MARGIN","HasPinched","IsSwiping","ImageGallery","props","giphyVersion","imageGalleryCustomComponents","imageGalleryGridHandleHeight","imageGalleryGridSnapPoints","numberOfImageGalleryGridColumns","overlayOpacity","paused","setPaused","progress","setProgress","duration","setDuration","theme","white_snow","colors","imageGallery","backgroundColor","pager","slide","gridPhotos","setGridPhotos","overlay","translucentStatusBar","image","images","setImage","statusBarHeight","StatusBar","currentHeight","bottomBarHeight","androidScreenHeightAdjustment","screenHeight","halfScreenHeight","quarterScreenHeight","snapPoints","React","useMemo","bottomSheetModalRef","currentBottomSheetIndex","setCurrentBottomSheetIndex","animatedBottomSheetIndex","screenTranslateY","showScreen","value","easing","Easing","out","ease","Keyboard","dismiss","currentImageHeight","setCurrentImageHeight","selectedIndex","setSelectedIndex","index","headerFooterVisible","doubleTapRef","panRef","pinchRef","singleTapRef","translateX","translateY","offsetScale","scale","translationX","photos","reduce","acc","cur","attachmentImages","attachments","filter","attachment","type","giphy","url","thumb_url","image_url","title_link","og_scrape_url","attachmentPhotos","map","a","imageUrl","channelId","cid","created_at","id","messageId","mime_type","original_height","original_width","uri","width","user","user_id","photoLength","length","updatePosition","newIndex","findIndex","photo","uriForCurrentImage","imageHeight","Math","floor","Image","getSize","onDoubleTap","onPan","onPinch","onSingleTap","headerFooterOpacity","pagerStyle","transform","scaleX","containerBackground","opacity","showScreenStyle","closeGridView","current","close","openGridView","present","videoRef","handleEnd","handleLoad","payload","handleProgress","data","currentTime","seekableDuration","handlePlayPause","seek","replayAsync","state","onProgressDrag","setPositionAsync","StyleSheet","absoluteFillObject","absoluteFill","undefined","styles","animatedContainer","i","abs","marginRight","header","footer","gridHandle","grid","clamp","lowerBound","upperBound","min","max","create","alignItems","flexDirection","displayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  ImageStyle,\n  Keyboard,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  PanGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n} from 'react-native-gesture-handler';\n\nimport Animated, {\n  Easing,\n  runOnJS,\n  runOnUI,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { BottomSheetModal, BottomSheetModalProvider } from '@gorhom/bottom-sheet';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport { AnimatedGalleryImage } from './components/AnimatedGalleryImage';\nimport { AnimatedGalleryVideo } from './components/AnimatedGalleryVideo';\nimport {\n  ImageGalleryFooter,\n  ImageGalleryFooterCustomComponentProps,\n} from './components/ImageGalleryFooter';\nimport {\n  ImageGalleryHeader,\n  ImageGalleryHeaderCustomComponentProps,\n} from './components/ImageGalleryHeader';\nimport { ImageGalleryOverlay } from './components/ImageGalleryOverlay';\nimport { ImageGalleryGridImageComponents, ImageGrid } from './components/ImageGrid';\nimport {\n  ImageGalleryGridHandleCustomComponentProps,\n  ImageGridHandle,\n} from './components/ImageGridHandle';\n\nimport { useImageGalleryGestures } from './hooks/useImageGalleryGestures';\n\nimport { useImageGalleryContext } from '../../contexts/imageGalleryContext/ImageGalleryContext';\nimport {\n  OverlayProviderProps,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  isVideoPackageAvailable,\n  VideoPayloadData,\n  VideoProgressData,\n  VideoType,\n} from '../../native';\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { getResizedImageUrl } from '../../utils/getResizedImageUrl';\nimport { getUrlOfImageAttachment } from '../../utils/getUrlOfImageAttachment';\nimport { vh, vw } from '../../utils/utils';\n\nconst isAndroid = Platform.OS === 'android';\nconst fullScreenHeight = Dimensions.get('screen').height;\nconst measuredScreenHeight = vh(100);\nconst screenWidth = vw(100);\nconst halfScreenWidth = vw(50);\nconst MARGIN = 32;\n\nexport enum HasPinched {\n  FALSE = 0,\n  TRUE,\n}\n\nexport enum IsSwiping {\n  UNDETERMINED = 0,\n  TRUE,\n  FALSE,\n}\n\nexport type ImageGalleryCustomComponents<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Override props for following UI components, which are part of [image gallery](https://github.com/GetStream/stream-chat-react-native/wiki/Cookbook-v3.0#gallery-components).\n   *\n   * - [ImageGalleryFooter](#ImageGalleryFooter)\n   *\n   * - [ImageGrid](#ImageGrid)\n   *\n   * - [ImageGridHandle](#ImageGridHandle)\n   *\n   * - [ImageGalleryHeader](#ImageGalleryHeader)\n   *\n   * e.g.,\n   *\n   * ```js\n   * {\n   *  footer: {\n   *    ShareIcon: CustomShareIconComponent\n   *  },\n   *  grid: {\n   *    avatarComponent: CustomAvatarComponent\n   *  },\n   *  gridHandle: {\n   *    centerComponent: CustomCenterComponent\n   *  },\n   *  header: {\n   *    CloseIcon: CustomCloseButtonComponent\n   *  },\n   * }\n   * ```\n   * @overrideType object\n   */\n  imageGalleryCustomComponents?: {\n    footer?: ImageGalleryFooterCustomComponentProps<StreamChatGenerics>;\n    grid?: ImageGalleryGridImageComponents<StreamChatGenerics>;\n    gridHandle?: ImageGalleryGridHandleCustomComponentProps;\n    header?: ImageGalleryHeaderCustomComponentProps<StreamChatGenerics>;\n  };\n};\n\ntype Props<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> =\n  ImageGalleryCustomComponents<StreamChatGenerics> & {\n    overlayOpacity: Animated.SharedValue<number>;\n  } & Pick<\n      OverlayProviderProps<StreamChatGenerics>,\n      | 'giphyVersion'\n      | 'imageGalleryGridSnapPoints'\n      | 'imageGalleryGridHandleHeight'\n      | 'numberOfImageGalleryGridColumns'\n    >;\n\nexport const ImageGallery = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: Props<StreamChatGenerics>,\n) => {\n  const {\n    giphyVersion = 'fixed_height',\n    imageGalleryCustomComponents,\n    imageGalleryGridHandleHeight,\n    imageGalleryGridSnapPoints,\n    numberOfImageGalleryGridColumns,\n    overlayOpacity,\n  } = props;\n  const [paused, setPaused] = useState<boolean>(false);\n  const [progress, setProgress] = useState<number>(0);\n  const [duration, setDuration] = useState<number>(0);\n  const {\n    theme: {\n      colors: { white_snow },\n      imageGallery: { backgroundColor, pager, slide },\n    },\n  } = useTheme();\n  const [gridPhotos, setGridPhotos] = useState<Photo<StreamChatGenerics>[]>([]);\n  const { overlay, translucentStatusBar } = useOverlayContext();\n  const { image, images, setImage } = useImageGalleryContext<StreamChatGenerics>();\n\n  /**\n   * Height constants\n   */\n  const statusBarHeight = StatusBar.currentHeight ?? 0;\n  const bottomBarHeight = fullScreenHeight - measuredScreenHeight - statusBarHeight;\n  const androidScreenHeightAdjustment = translucentStatusBar\n    ? bottomBarHeight === statusBarHeight || bottomBarHeight < 0\n      ? 0\n      : statusBarHeight\n    : bottomBarHeight === statusBarHeight || bottomBarHeight < 0\n    ? -statusBarHeight\n    : 0;\n  const screenHeight = isAndroid\n    ? Dimensions.get('window').height + androidScreenHeightAdjustment\n    : vh(100);\n  const halfScreenHeight = screenHeight / 2;\n  const quarterScreenHeight = screenHeight / 4;\n  const snapPoints = React.useMemo(\n    () => [(screenHeight * 3) / 4, screenHeight - (imageGalleryGridHandleHeight ?? 40)],\n    [],\n  );\n\n  /**\n   * BottomSheetModal ref\n   */\n  const bottomSheetModalRef = useRef<BottomSheetModal>(null);\n\n  /**\n   * BottomSheetModal state\n   */\n  const [currentBottomSheetIndex, setCurrentBottomSheetIndex] = useState(0);\n  const animatedBottomSheetIndex = useSharedValue(0);\n\n  /**\n   * Fade animation for screen, it is always rendered with pointerEvents\n   * set to none for fast opening\n   */\n  const screenTranslateY = useSharedValue(screenHeight);\n  const showScreen = () => {\n    'worklet';\n    screenTranslateY.value = withTiming(0, {\n      duration: 250,\n      easing: Easing.out(Easing.ease),\n    });\n  };\n\n  /**\n   * Run the fade animation on visible change\n   */\n  useEffect(() => {\n    Keyboard.dismiss();\n    showScreen();\n  }, []);\n\n  /**\n   * Image height from URL or default to full screen height\n   */\n  const [currentImageHeight, setCurrentImageHeight] = useState<number>(screenHeight);\n\n  /**\n   * JS and UI index values, the JS follows the UI but is needed\n   * for rendering the virtualized image list\n   */\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const index = useSharedValue(0);\n\n  /**\n   * Header visible value for animating in out\n   */\n  const headerFooterVisible = useSharedValue(1);\n\n  /**\n   * Gesture handler refs\n   */\n  const doubleTapRef = useRef<TapGestureHandler>(null);\n  const panRef = useRef<PanGestureHandler>(null);\n  const pinchRef = useRef<PinchGestureHandler>(null);\n  const singleTapRef = useRef<TapGestureHandler>(null);\n\n  /**\n   * Shared values for movement\n   */\n  const translateX = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const offsetScale = useSharedValue(1);\n  const scale = useSharedValue(1);\n  const translationX = useSharedValue(0);\n\n  /**\n   * Photos array created from all currently available\n   * photo attachments\n   */\n\n  const photos = images.reduce((acc: Photo<StreamChatGenerics>[], cur) => {\n    const attachmentImages =\n      cur.attachments?.filter(\n        (attachment) =>\n          (attachment.type === 'giphy' &&\n            (attachment.giphy?.[giphyVersion]?.url ||\n              attachment.thumb_url ||\n              attachment.image_url)) ||\n          (attachment.type === 'image' &&\n            !attachment.title_link &&\n            !attachment.og_scrape_url &&\n            getUrlOfImageAttachment(attachment)) ||\n          (isVideoPackageAvailable() && attachment.type === 'video'),\n      ) || [];\n\n    const attachmentPhotos = attachmentImages.map((a) => {\n      const imageUrl = getUrlOfImageAttachment(a) as string;\n\n      return {\n        channelId: cur.cid,\n        created_at: cur.created_at,\n        id: `photoId-${cur.id}-${imageUrl}`,\n        messageId: cur.id,\n        mime_type: a.mime_type,\n        original_height: a.original_height,\n        original_width: a.original_width,\n        type: a.type,\n        uri: getResizedImageUrl({\n          height: screenHeight,\n          url: imageUrl,\n          width: screenWidth,\n        }),\n        user: cur.user,\n        user_id: cur.user_id,\n      };\n    });\n\n    return [...acc, ...attachmentPhotos] as Photo<StreamChatGenerics>[];\n  }, []);\n\n  /**\n   * Photos length needs to be kept as a const here so if the length\n   * changes it causes the pan gesture handler function to refresh. This\n   * does not work if the calculation for the length of the array is left\n   * inside the gesture handler as it will have an array as a dependency\n   */\n  const photoLength = photos.length;\n\n  /**\n   * Set selected photo when changed via pressing in the message list\n   */\n  useEffect(() => {\n    const updatePosition = (newIndex: number) => {\n      'worklet';\n\n      if (newIndex > -1) {\n        index.value = newIndex;\n        translationX.value = -(screenWidth + MARGIN) * newIndex;\n        runOnJS(setSelectedIndex)(newIndex);\n      }\n    };\n\n    const newIndex = photos.findIndex(\n      (photo) => photo.messageId === image?.messageId && photo.uri === image?.url,\n    );\n\n    if (photoLength > 1) {\n      setPaused(true);\n    }\n\n    runOnUI(updatePosition)(newIndex);\n  }, [image, photoLength]);\n\n  /**\n   * Image heights are not provided and therefore need to be calculated.\n   * We start by allowing the image to be the full height then reduce it\n   * to the proper scaled height based on the width being restricted to the\n   * screen width when the dimensions are received.\n   */\n  const uriForCurrentImage = photos[selectedIndex]?.uri;\n  useEffect(() => {\n    setCurrentImageHeight(screenHeight);\n    const photo = photos[index.value];\n    const height = photo?.original_height;\n    const width = photo?.original_width;\n\n    if (height && width) {\n      const imageHeight = Math.floor(height * (screenWidth / width));\n      setCurrentImageHeight(imageHeight > screenHeight ? screenHeight : imageHeight);\n    } else if (photo?.uri) {\n      if (photo.type === 'image') {\n        Image.getSize(photo.uri, (width, height) => {\n          const imageHeight = Math.floor(height * (screenWidth / width));\n          setCurrentImageHeight(imageHeight > screenHeight ? screenHeight : imageHeight);\n        });\n      }\n    }\n  }, [uriForCurrentImage]);\n\n  const { onDoubleTap, onPan, onPinch, onSingleTap } = useImageGalleryGestures({\n    currentImageHeight,\n    halfScreenHeight,\n    halfScreenWidth,\n    headerFooterVisible,\n    offsetScale,\n    overlayOpacity,\n    photoLength,\n    scale,\n    screenHeight,\n    screenWidth,\n    setSelectedIndex,\n    translateX,\n    translateY,\n    translationX,\n  });\n\n  /**\n   * If the header is visible we scale down the opacity of it as the\n   * image is swiped downward\n   */\n  const headerFooterOpacity = useDerivedValue(\n    () =>\n      currentImageHeight * scale.value < screenHeight && translateY.value > 0\n        ? 1 - translateY.value / quarterScreenHeight\n        : currentImageHeight * scale.value > screenHeight &&\n          translateY.value > (currentImageHeight / 2) * scale.value - halfScreenHeight\n        ? 1 -\n          (translateY.value - ((currentImageHeight / 2) * scale.value - halfScreenHeight)) /\n            quarterScreenHeight\n        : 1,\n    [currentImageHeight],\n  );\n\n  /**\n   * This transition and scaleX reverse lets use scroll left\n   */\n  const pagerStyle = useAnimatedStyle<ImageStyle>(\n    () => ({\n      transform: [\n        { scaleX: -1 },\n        {\n          translateX: translationX.value,\n        },\n      ],\n    }),\n    [],\n  );\n\n  /**\n   * Simple background color animation on Y movement\n   */\n  const containerBackground = useAnimatedStyle<ViewStyle>(\n    () => ({\n      backgroundColor: backgroundColor || white_snow,\n      opacity: headerFooterOpacity.value,\n    }),\n    [headerFooterOpacity],\n  );\n\n  /**\n   * Show screen style as component is always rendered we hide it\n   * down and up and set opacity to 0 for good measure\n   */\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: screenTranslateY.value,\n        },\n      ],\n    }),\n    [],\n  );\n\n  /**\n   * Functions toclose BottomSheetModal with image grid\n   */\n  const closeGridView = () => {\n    if (bottomSheetModalRef.current?.close) {\n      bottomSheetModalRef.current.close();\n      setGridPhotos([]);\n    }\n  };\n\n  /**\n   * Function to open BottomSheetModal with image grid\n   */\n  const openGridView = () => {\n    if (bottomSheetModalRef.current?.present) {\n      bottomSheetModalRef.current.present();\n      setGridPhotos(photos);\n    }\n  };\n\n  const videoRef = useRef<VideoType>(null);\n\n  const handleEnd = () => {\n    setPaused(true);\n    setProgress(1);\n  };\n\n  const handleLoad = (payload: VideoPayloadData) => {\n    if (payload.duration) setDuration(payload.duration);\n  };\n\n  const handleProgress = (data: VideoProgressData) => {\n    if (data.currentTime && data.seekableDuration) {\n      setProgress(data.currentTime / data.seekableDuration);\n    }\n  };\n\n  const handlePlayPause = () => {\n    // React Native Video for RN CLI has seek as an API to move to a particular location in the video\n    if (progress === 1 && videoRef.current && videoRef.current.seek) {\n      videoRef.current.seek(0);\n    }\n    // Expo AV for Expo has replayAsync as an API to move to a starting of the video\n    if (progress === 1 && videoRef.current && videoRef.current.replayAsync) {\n      videoRef.current.replayAsync();\n    }\n\n    setPaused((state) => !state);\n  };\n\n  const onProgressDrag = (progress: number) => {\n    // React Native Video for RN CLI has seek as an API to move to a particular location in the video\n    if (videoRef.current && videoRef.current.seek) {\n      videoRef.current.seek(progress);\n    }\n\n    // Expo AV for Expo has setPositionAsync as an API to move to a particular location of the video\n    if (videoRef.current && videoRef.current.setPositionAsync) {\n      videoRef.current.setPositionAsync(progress * 1000);\n    }\n  };\n\n  return (\n    <Animated.View pointerEvents={'auto'} style={[StyleSheet.absoluteFillObject, showScreenStyle]}>\n      <Animated.View style={[StyleSheet.absoluteFillObject, containerBackground]} />\n      <TapGestureHandler\n        minPointers={1}\n        numberOfTaps={1}\n        onGestureEvent={onSingleTap}\n        ref={singleTapRef}\n        waitFor={[panRef, pinchRef, doubleTapRef]}\n      >\n        <Animated.View style={StyleSheet.absoluteFillObject}>\n          <TapGestureHandler\n            maxDeltaX={8}\n            maxDeltaY={8}\n            maxDist={8}\n            minPointers={1}\n            numberOfTaps={2}\n            onGestureEvent={onDoubleTap}\n            ref={doubleTapRef}\n          >\n            <Animated.View style={StyleSheet.absoluteFillObject}>\n              <PinchGestureHandler\n                onGestureEvent={onPinch}\n                ref={pinchRef}\n                simultaneousHandlers={[panRef]}\n              >\n                <Animated.View style={StyleSheet.absoluteFill}>\n                  <PanGestureHandler\n                    enabled={overlay === 'gallery'}\n                    maxPointers={isAndroid ? undefined : 1}\n                    minDist={10}\n                    onGestureEvent={onPan}\n                    ref={panRef}\n                    simultaneousHandlers={[pinchRef]}\n                  >\n                    <Animated.View style={StyleSheet.absoluteFill}>\n                      <Animated.View\n                        style={[\n                          styles.animatedContainer,\n                          pagerStyle,\n                          pager,\n                          {\n                            transform: [\n                              { scaleX: -1 }, // Also only here for opening, wrong direction when not included\n                              {\n                                translateX: translationX.value, // Only here for opening, wrong index when this is not included\n                              },\n                            ],\n                          },\n                        ]}\n                      >\n                        {photos.map((photo, i) =>\n                          photo.type === 'video' ? (\n                            <AnimatedGalleryVideo\n                              handleEnd={handleEnd}\n                              handleLoad={handleLoad}\n                              handleProgress={handleProgress}\n                              index={i}\n                              key={`${photo.uri}-${i}`}\n                              offsetScale={offsetScale}\n                              paused={paused}\n                              previous={selectedIndex > i}\n                              scale={scale}\n                              screenHeight={screenHeight}\n                              selected={selectedIndex === i}\n                              shouldRender={Math.abs(selectedIndex - i) < 4}\n                              source={{ uri: photo.uri }}\n                              style={[\n                                {\n                                  height: screenHeight * 8,\n                                  marginRight: MARGIN,\n                                  width: screenWidth * 8,\n                                },\n                                slide,\n                              ]}\n                              translateX={translateX}\n                              translateY={translateY}\n                              videoRef={videoRef}\n                            />\n                          ) : (\n                            <AnimatedGalleryImage\n                              index={i}\n                              key={`${photo.uri}-${i}`}\n                              offsetScale={offsetScale}\n                              photo={photo}\n                              previous={selectedIndex > i}\n                              scale={scale}\n                              screenHeight={screenHeight}\n                              selected={selectedIndex === i}\n                              shouldRender={Math.abs(selectedIndex - i) < 4}\n                              style={[\n                                {\n                                  height: screenHeight * 8,\n                                  marginRight: MARGIN,\n                                  width: screenWidth * 8,\n                                },\n                                slide,\n                              ]}\n                              translateX={translateX}\n                              translateY={translateY}\n                            />\n                          ),\n                        )}\n                      </Animated.View>\n                    </Animated.View>\n                  </PanGestureHandler>\n                </Animated.View>\n              </PinchGestureHandler>\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </TapGestureHandler>\n      <ImageGalleryHeader<StreamChatGenerics>\n        opacity={headerFooterOpacity}\n        photo={photos[selectedIndex]}\n        visible={headerFooterVisible}\n        {...imageGalleryCustomComponents?.header}\n      />\n      <ImageGalleryFooter<StreamChatGenerics>\n        duration={duration}\n        onPlayPause={handlePlayPause}\n        onProgressDrag={onProgressDrag}\n        opacity={headerFooterOpacity}\n        openGridView={openGridView}\n        paused={paused}\n        photo={photos[selectedIndex]}\n        photoLength={photoLength}\n        progress={progress}\n        selectedIndex={selectedIndex}\n        visible={headerFooterVisible}\n        {...imageGalleryCustomComponents?.footer}\n      />\n\n      <ImageGalleryOverlay\n        animatedBottomSheetIndex={animatedBottomSheetIndex}\n        closeGridView={closeGridView}\n        currentBottomSheetIndex={currentBottomSheetIndex}\n      />\n      <BottomSheetModalProvider>\n        <BottomSheetModal\n          animatedIndex={animatedBottomSheetIndex}\n          enablePanDownToClose={true}\n          handleComponent={() => (\n            <ImageGridHandle\n              closeGridView={closeGridView}\n              {...imageGalleryCustomComponents?.gridHandle}\n            />\n          )}\n          handleHeight={imageGalleryGridHandleHeight ?? 40}\n          index={0}\n          onChange={(index: number) => setCurrentBottomSheetIndex(index)}\n          ref={bottomSheetModalRef}\n          snapPoints={imageGalleryGridSnapPoints || snapPoints}\n        >\n          <ImageGrid\n            closeGridView={closeGridView}\n            numberOfImageGalleryGridColumns={numberOfImageGalleryGridColumns}\n            photos={gridPhotos}\n            setImage={setImage}\n            {...imageGalleryCustomComponents?.grid}\n          />\n        </BottomSheetModal>\n      </BottomSheetModalProvider>\n    </Animated.View>\n  );\n};\n\n/**\n * Clamping worklet to clamp the scaling\n */\nexport const clamp = (value: number, lowerBound: number, upperBound: number) => {\n  'worklet';\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nconst styles = StyleSheet.create({\n  animatedContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n});\n\nexport type Photo<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  id: string;\n  uri: string;\n  channelId?: string;\n  created_at?: string | Date;\n  messageId?: string;\n  mime_type?: string;\n  original_height?: number;\n  original_width?: number;\n  type?: string;\n  user?: UserResponse<StreamChatGenerics> | null;\n  user_id?: string;\n};\n\nImageGallery.displayName = 'ImageGallery{imageGallery}';\n"]}