{"version":3,"sources":["ScrollToBottomButton.tsx"],"names":["styles","StyleSheet","create","container","alignItems","borderRadius","elevation","height","justifyContent","shadowOffset","width","shadowOpacity","shadowRadius","touchable","bottom","position","right","unreadCountNotificationContainer","minWidth","paddingHorizontal","top","unreadCountNotificationText","fontSize","textAlign","textAlignVertical","wrapper","ScrollToBottomButton","props","onPress","showNotification","unreadCount","theme","colors","accent_blue","black","white","messageList","scrollToBottomButton","chevronColor","backgroundColor","shadowColor","color","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GestureResponderEvent, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Down } from '../../icons';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    borderRadius: 20,\n    elevation: 5,\n    height: 40,\n    justifyContent: 'center',\n    shadowOffset: {\n      height: 2,\n      width: 0,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    width: 40,\n  },\n  touchable: {\n    bottom: 20,\n    position: 'absolute',\n    right: 20,\n  },\n  unreadCountNotificationContainer: {\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 6,\n    height: 20,\n    justifyContent: 'center',\n    minWidth: 20,\n    paddingHorizontal: 4,\n    position: 'absolute',\n    top: 0,\n  },\n  unreadCountNotificationText: {\n    fontSize: 11,\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n  wrapper: {\n    alignItems: 'center',\n    height: 50,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport type ScrollToBottomButtonProps = {\n  /** onPress handler */\n  onPress: (event: GestureResponderEvent) => void;\n  /** If we should show the notification or not */\n  showNotification?: boolean;\n  unreadCount?: number;\n};\n\nexport const ScrollToBottomButton: React.FC<ScrollToBottomButtonProps> = (props) => {\n  const { onPress, showNotification = true, unreadCount } = props;\n\n  const {\n    theme: {\n      colors: { accent_blue, black, white },\n      messageList: {\n        scrollToBottomButton: {\n          chevronColor,\n          container,\n          touchable,\n          unreadCountNotificationContainer,\n          unreadCountNotificationText,\n          wrapper,\n        },\n      },\n    },\n  } = useTheme();\n\n  if (!showNotification) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[styles.touchable, touchable]}\n      testID='message-notification'\n    >\n      <View style={[styles.wrapper, wrapper]}>\n        <View style={[styles.container, { backgroundColor: white, shadowColor: black }, container]}>\n          <Down pathFill={chevronColor ? chevronColor : black} />\n        </View>\n        {!!unreadCount && (\n          <View\n            style={[\n              styles.unreadCountNotificationContainer,\n              { backgroundColor: accent_blue },\n              unreadCountNotificationContainer,\n            ]}\n          >\n            <Text\n              style={[\n                styles.unreadCountNotificationText,\n                { color: white },\n                unreadCountNotificationText,\n              ]}\n              testID='unread-count'\n            >\n              {unreadCount}\n            </Text>\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nScrollToBottomButton.displayName = 'ScrollToBottomButton{messageList{scrollToBottomButton}}';\n"]}