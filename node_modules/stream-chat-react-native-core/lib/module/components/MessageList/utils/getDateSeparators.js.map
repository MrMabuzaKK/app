{"version":3,"sources":["getDateSeparators.ts"],"names":["getDateSeparators","params","hideDateSeparators","messages","userId","dateSeparators","messagesWithoutDeleted","filter","message","isMessageTypeDeleted","type","user","id","i","length","previousMessage","messageDate","created_at","getDay","prevMessageDate"],"mappings":";;;;;AAkBO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAG/BC,MAH+B,EAI5B;AACH,MAAQC,kBAAR,GAAiDD,MAAjD,CAAQC,kBAAR;AAAA,MAA4BC,QAA5B,GAAiDF,MAAjD,CAA4BE,QAA5B;AAAA,MAAsCC,MAAtC,GAAiDH,MAAjD,CAAsCG,MAAtC;AACA,MAAMC,cAA8B,GAAG,EAAvC;;AAEA,MAAIH,kBAAJ,EAAwB;AACtB,WAAOG,cAAP;AACD;;AAED,MAAMC,sBAAsB,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,OAAD,EAAa;AAAA;;AAC1D,QAAMC,oBAAoB,GAAGD,OAAO,CAACE,IAAR,KAAiB,SAA9C;AACA,WAAO,CAACD,oBAAD,IAAyBL,MAAM,uBAAKI,OAAO,CAACG,IAAb,qBAAK,cAAcC,EAAnB,CAAtC;AACD,GAH8B,CAA/B;;AAKA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,sBAAsB,CAACQ,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtD,QAAME,eAAe,GAAGT,sBAAsB,CAACO,CAAC,GAAG,CAAL,CAA9C;AACA,QAAML,OAAO,GAAGF,sBAAsB,CAACO,CAAD,CAAtC;AAEA,QAAMG,WAAW,GAAGR,OAAO,CAACS,UAAR,CAAmBC,MAAnB,EAApB;AAEA,QAAMC,eAAe,GAAGJ,eAAe,GAAGA,eAAe,CAACE,UAAhB,CAA2BC,MAA3B,EAAH,GAAyCF,WAAhF;;AAEA,QAAIH,CAAC,KAAK,CAAN,IAAWG,WAAW,KAAKG,eAA/B,EAAgD;AAC9Cd,MAAAA,cAAc,CAACG,OAAO,CAACI,EAAT,CAAd,GAA6BJ,OAAO,CAACS,UAArC;AACD;AACF;;AAED,SAAOZ,cAAP;AACD,CA/BM","sourcesContent":["import type { PaginatedMessageListContextValue } from '../../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport type { ThreadContextValue } from '../../../contexts/threadContext/ThreadContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\nexport type GetDateSeparatorsParams<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  messages:\n    | PaginatedMessageListContextValue<StreamChatGenerics>['messages']\n    | ThreadContextValue<StreamChatGenerics>['threadMessages'];\n  hideDateSeparators?: boolean;\n  userId?: string;\n};\n\nexport type DateSeparators = {\n  [key: string]: Date;\n};\n\nexport const getDateSeparators = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  params: GetDateSeparatorsParams<StreamChatGenerics>,\n) => {\n  const { hideDateSeparators, messages, userId } = params;\n  const dateSeparators: DateSeparators = {};\n\n  if (hideDateSeparators) {\n    return dateSeparators;\n  }\n\n  const messagesWithoutDeleted = messages.filter((message) => {\n    const isMessageTypeDeleted = message.type === 'deleted';\n    return !isMessageTypeDeleted || userId === message.user?.id;\n  });\n\n  for (let i = 0; i < messagesWithoutDeleted.length; i++) {\n    const previousMessage = messagesWithoutDeleted[i - 1];\n    const message = messagesWithoutDeleted[i];\n\n    const messageDate = message.created_at.getDay();\n\n    const prevMessageDate = previousMessage ? previousMessage.created_at.getDay() : messageDate;\n\n    if (i === 0 || messageDate !== prevMessageDate) {\n      dateSeparators[message.id] = message.created_at;\n    }\n  }\n\n  return dateSeparators;\n};\n"]}