{"version":3,"sources":["filterTypingUsers.ts"],"names":["filterTypingUsers","client","thread","typing","nonSelfUsers","user","typingKeys","Object","keys","forEach","typingKey","id","isRegularEvent","parent_id","isCurrentThreadEvent","name","push"],"mappings":";;;;;AAWO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAMkB;AAAA,MAHjDC,MAGiD,QAHjDA,MAGiD;AAAA,MAFjDC,MAEiD,QAFjDA,MAEiD;AAAA,MADjDC,MACiD,QADjDA,MACiD;AACjD,MAAMC,YAAsB,GAAG,EAA/B;AAEA,MAAI,CAACH,MAAD,IAAW,CAACA,MAAM,CAACI,IAAnB,IAA2B,CAACF,MAAhC,EAAwC,OAAOC,YAAP;AAExC,MAAME,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAnB;AAEAG,EAAAA,UAAU,CAACG,OAAX,CAAmB,UAACC,SAAD,EAAe;AAAA;;AAChC,QAAI,CAACP,MAAM,CAACO,SAAD,CAAX,EAAwB;;AAGxB,QAAI,iBAAAT,MAAM,CAACI,IAAP,kCAAaM,EAAb,gCAAoBR,MAAM,CAACO,SAAD,CAAN,CAAkBL,IAAtC,qBAAoB,sBAAwBM,EAA5C,CAAJ,EAAoD;AAClD;AACD;;AAED,QAAMC,cAAc,GAAG,CAACT,MAAM,CAACO,SAAD,CAAN,CAAkBG,SAAnB,IAAgC,EAACX,MAAD,YAACA,MAAM,CAAES,EAAT,CAAvD;AACA,QAAMG,oBAAoB,GAAGX,MAAM,CAACO,SAAD,CAAN,CAAkBG,SAAlB,MAAgCX,MAAhC,oBAAgCA,MAAM,CAAES,EAAxC,CAA7B;;AAGA,QAAI,CAACC,cAAD,IAAmB,CAACE,oBAAxB,EAA8C;AAC5C;AACD;;AAED,QAAMT,IAAI,GAAG,2BAAAF,MAAM,CAACO,SAAD,CAAN,CAAkBL,IAAlB,4CAAwBU,IAAxB,gCAAgCZ,MAAM,CAACO,SAAD,CAAN,CAAkBL,IAAlD,qBAAgC,uBAAwBM,EAAxD,CAAb;;AACA,QAAIN,IAAJ,EAAU;AACRD,MAAAA,YAAY,CAACY,IAAb,CAAkBX,IAAlB;AACD;AACF,GApBD;AAsBA,SAAOD,YAAP;AACD,CApCM","sourcesContent":["import type { ChatContextValue } from '../../../contexts/chatContext/ChatContext';\nimport type { ThreadContextValue } from '../../../contexts/threadContext/ThreadContext';\nimport type { TypingContextValue } from '../../../contexts/typingContext/TypingContext';\nimport type { DefaultStreamChatGenerics } from '../../../types/types';\n\ntype FilterTypingUsersParams<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<TypingContextValue<StreamChatGenerics>, 'typing'> &\n  Pick<ChatContextValue<StreamChatGenerics>, 'client'> &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'>;\n\nexport const filterTypingUsers = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  client,\n  thread,\n  typing,\n}: FilterTypingUsersParams<StreamChatGenerics>) => {\n  const nonSelfUsers: string[] = [];\n\n  if (!client || !client.user || !typing) return nonSelfUsers;\n\n  const typingKeys = Object.keys(typing);\n\n  typingKeys.forEach((typingKey) => {\n    if (!typing[typingKey]) return;\n\n    /** removes own typing events */\n    if (client.user?.id === typing[typingKey].user?.id) {\n      return;\n    }\n\n    const isRegularEvent = !typing[typingKey].parent_id && !thread?.id;\n    const isCurrentThreadEvent = typing[typingKey].parent_id === thread?.id;\n\n    /** filters different threads events */\n    if (!isRegularEvent && !isCurrentThreadEvent) {\n      return;\n    }\n\n    const user = typing[typingKey].user?.name || typing[typingKey].user?.id;\n    if (user) {\n      nonSelfUsers.push(user);\n    }\n  });\n\n  return nonSelfUsers;\n};\n"]}