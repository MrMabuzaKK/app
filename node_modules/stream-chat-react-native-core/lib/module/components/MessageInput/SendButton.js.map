{"version":3,"sources":["SendButton.tsx"],"names":["SendButtonWithContext","props","disabled","giphyActive","sendMessage","theme","colors","accent_blue","grey_gainsboro","sendButton","messageInput","areEqual","prevProps","nextProps","prevDisabled","prevGiphyActive","prevSendMessage","nextDisabled","nextGiphyActive","nextSendMessage","disabledEqual","giphyActiveEqual","sendMessageEqual","MemoizedSendButton","React","memo","SendButton","displayName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAIA;;AACA;;AACA;;AACA;;;;;AAUA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAG5BC,KAH4B,EAIzB;AACH,wBAAuDA,KAAvD,CAAQC,QAAR;AAAA,MAAQA,QAAR,gCAAmB,KAAnB;AAAA,MAA0BC,WAA1B,GAAuDF,KAAvD,CAA0BE,WAA1B;AAAA,MAAuCC,WAAvC,GAAuDH,KAAvD,CAAuCG,WAAvC;;AACA,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,WAFd,yBAEcA,WAFd;AAAA,MAE2BC,cAF3B,yBAE2BA,cAF3B;AAAA,MAGoBC,UAHpB,mBAGIC,YAHJ,CAGoBD,UAHpB;;AAOA,SACE,gCAAC,2CAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,OAAO,EAAEA,QAAQ,GAAG;AAAA,aAAM,IAAN;AAAA,KAAH,GAAgBE,WAFnC;AAGE,IAAA,KAAK,EAAE,CAACK,UAAD,CAHT;AAIE,IAAA,MAAM,EAAC,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,WAAW,IAAI,gCAAC,cAAD;AAAQ,IAAA,QAAQ,EAAEI,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANlB,EAOG,CAACJ,WAAD,IAAgBD,QAAhB,IAA4B,gCAAC,oBAAD;AAAW,IAAA,QAAQ,EAAEM,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP/B,EAQG,CAACL,WAAD,IAAgB,CAACD,QAAjB,IAA6B,gCAAC,cAAD;AAAQ,IAAA,QAAQ,EAAEK,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhC,CADF;AAYD,CAzBD;;AA2BA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CACfC,SADe,EAEfC,SAFe,EAGZ;AACH,MACYC,YADZ,GAIIF,SAJJ,CACEV,QADF;AAAA,MAEea,eAFf,GAIIH,SAJJ,CAEET,WAFF;AAAA,MAGea,eAHf,GAIIJ,SAJJ,CAGER,WAHF;AAKA,MACYa,YADZ,GAIIJ,SAJJ,CACEX,QADF;AAAA,MAEegB,eAFf,GAIIL,SAJJ,CAEEV,WAFF;AAAA,MAGegB,eAHf,GAIIN,SAJJ,CAGET,WAHF;AAMA,MAAMgB,aAAa,GAAGN,YAAY,KAAKG,YAAvC;AACA,MAAI,CAACG,aAAL,EAAoB,OAAO,KAAP;AAEpB,MAAMC,gBAAgB,GAAGN,eAAe,KAAKG,eAA7C;AACA,MAAI,CAACG,gBAAL,EAAuB,OAAO,KAAP;AAEvB,MAAMC,gBAAgB,GAAGN,eAAe,KAAKG,eAA7C;AACA,MAAI,CAACG,gBAAL,EAAuB,OAAO,KAAP;AAEvB,SAAO,IAAP;AACD,CAzBD;;AA2BA,IAAMC,kBAAkB,GAAGC,kBAAMC,IAAN,CACzBzB,qBADyB,EAEzBW,QAFyB,CAA3B;;AAYO,IAAMe,UAAU,GAAG,SAAbA,UAAa,CAGxBzB,KAHwB,EAIrB;AACH,8BAAqC,kDAArC;AAAA,MAAQE,WAAR,yBAAQA,WAAR;AAAA,MAAqBC,WAArB,yBAAqBA,WAArB;;AAEA,SACE,gCAAC,kBAAD;AACQD,IAAAA,WAAW,EAAXA,WADR;AACqBC,IAAAA,WAAW,EAAXA;AADrB,KAEMH,KAFN;AAGQC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,IAAkB,KAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAdM;;;AAgBPwB,UAAU,CAACC,WAAX,GAAyB,0BAAzB","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Search } from '../../icons/Search';\nimport { SendRight } from '../../icons/SendRight';\nimport { SendUp } from '../../icons/SendUp';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\ntype SendButtonPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<MessageInputContextValue<StreamChatGenerics>, 'giphyActive' | 'sendMessage'> & {\n  /** Disables the button */ disabled: boolean;\n};\n\nconst SendButtonWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: SendButtonPropsWithContext<StreamChatGenerics>,\n) => {\n  const { disabled = false, giphyActive, sendMessage } = props;\n  const {\n    theme: {\n      colors: { accent_blue, grey_gainsboro },\n      messageInput: { sendButton },\n    },\n  } = useTheme();\n\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      onPress={disabled ? () => null : sendMessage}\n      style={[sendButton]}\n      testID='send-button'\n    >\n      {giphyActive && <Search pathFill={accent_blue} />}\n      {!giphyActive && disabled && <SendRight pathFill={grey_gainsboro} />}\n      {!giphyActive && !disabled && <SendUp pathFill={accent_blue} />}\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: SendButtonPropsWithContext<StreamChatGenerics>,\n  nextProps: SendButtonPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    disabled: prevDisabled,\n    giphyActive: prevGiphyActive,\n    sendMessage: prevSendMessage,\n  } = prevProps;\n  const {\n    disabled: nextDisabled,\n    giphyActive: nextGiphyActive,\n    sendMessage: nextSendMessage,\n  } = nextProps;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const sendMessageEqual = prevSendMessage === nextSendMessage;\n  if (!sendMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedSendButton = React.memo(\n  SendButtonWithContext,\n  areEqual,\n) as typeof SendButtonWithContext;\n\nexport type SendButtonProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<SendButtonPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for send button in MessageInput component.\n */\nexport const SendButton = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: SendButtonProps<StreamChatGenerics>,\n) => {\n  const { giphyActive, sendMessage } = useMessageInputContext<StreamChatGenerics>();\n\n  return (\n    <MemoizedSendButton\n      {...{ giphyActive, sendMessage }}\n      {...props}\n      {...{ disabled: props.disabled || false }}\n    />\n  );\n};\n\nSendButton.displayName = 'SendButton{messageInput}';\n"]}